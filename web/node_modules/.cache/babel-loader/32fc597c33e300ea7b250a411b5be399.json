{"ast":null,"code":"var _jsxFileName = \"/media/psf/Home/Desktop/CS4550-FinalProject/web/src/User/Edit.js\",\n    _s = $RefreshSig$();\n\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_user, fetch_user, fetch_users, api_login, fetch_reason } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UsersEdit({\n  current_user\n}) {\n  _s();\n\n  let history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\",\n    pass1: \"\",\n    pass2: \"\"\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['name', 'email', 'password', 'reason', 'photo']);\n    create_user(data).then(data => {\n      if (data.error) {\n        let action = {\n          type: \"error/set\",\n          data: data.error\n        };\n        store.dispatch(action);\n      } else {\n        fetch_users();\n        api_login(user['email'], user['password']);\n        history.push(fetch_reason(user[\"reason\"]));\n      }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    // This is for user experience only,\n    // validation logic goes on the server.\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  function UUF({\n    session\n  }) {\n    //fetch_user(session.user_id);\n    console.log(fetch_user(session.user_id).name);\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n  const UpdateUserForm = connect(({\n    session\n  }) => ({\n    session\n  }))(UUF);\n  return /*#__PURE__*/_jsxDEV(UpdateUserForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UsersEdit, \"DNgHuLDTOXGy7UvrOG2la/3bfNc=\", false, function () {\n  return [useHistory];\n});\n\n_c = UsersEdit;\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersEdit);\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersEdit\");","map":{"version":3,"sources":["/media/psf/Home/Desktop/CS4550-FinalProject/web/src/User/Edit.js"],"names":["Row","Col","Form","Button","connect","useState","useHistory","useParams","pick","store","create_user","fetch_user","fetch_users","api_login","fetch_reason","UsersEdit","current_user","history","user","setUser","name","pass1","pass2","onSubmit","ev","preventDefault","data","then","error","action","type","dispatch","push","check_pass","p1","p2","length","update","field","u1","Object","assign","target","value","password","pass_msg","updatePhoto","files","UUF","session","console","log","user_id","UpdateUserForm","state2props","_state"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,QAAuC,iBAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,WAAlC,EAA+CC,SAA/C,EAA0DC,YAA1D,QAA8E,QAA9E;;;AAEA,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAAmC;AAAA;;AACjC,MAAIC,OAAO,GAAGX,UAAU,EAAxB;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC;AAC/Be,IAAAA,IAAI,EAAE,EADyB;AACrBC,IAAAA,KAAK,EAAE,EADc;AACVC,IAAAA,KAAK,EAAE;AADG,GAAD,CAAhC;;AAIA,WAASC,QAAT,CAAkBC,EAAlB,EAAsB;AACpBA,IAAAA,EAAE,CAACC,cAAH;AACA,QAAIC,IAAI,GAAGlB,IAAI,CAACU,IAAD,EAAO,CAAC,MAAD,EAAS,OAAT,EAAkB,UAAlB,EAA8B,QAA9B,EAAwC,OAAxC,CAAP,CAAf;AACAR,IAAAA,WAAW,CAACgB,IAAD,CAAX,CAAkBC,IAAlB,CAAwBD,IAAD,IAAU;AAC7B,UAAGA,IAAI,CAACE,KAAR,EAAe;AACb,YAAIC,MAAM,GAAC;AACTC,UAAAA,IAAI,EAAC,WADI;AAETJ,UAAAA,IAAI,EAAEA,IAAI,CAACE;AAFF,SAAX;AAIAnB,QAAAA,KAAK,CAACsB,QAAN,CAAeF,MAAf;AACD,OAND,MAOK;AACHjB,QAAAA,WAAW;AACXC,QAAAA,SAAS,CAACK,IAAI,CAAC,OAAD,CAAL,EAAgBA,IAAI,CAAC,UAAD,CAApB,CAAT;AACAD,QAAAA,OAAO,CAACe,IAAR,CAAalB,YAAY,CAACI,IAAI,CAAC,QAAD,CAAL,CAAzB;AACD;AACJ,KAbD;AAcD;;AAED,WAASe,UAAT,CAAoBC,EAApB,EAAwBC,EAAxB,EAA4B;AAC1B;AACA;AACA,QAAID,EAAE,KAAKC,EAAX,EAAe;AACb,aAAO,wBAAP;AACD;;AAED,QAAID,EAAE,CAACE,MAAH,GAAY,CAAhB,EAAmB;AACjB,aAAO,qBAAP;AACD;;AAED,WAAO,EAAP;AACD;;AAED,WAASC,MAAT,CAAgBC,KAAhB,EAAuBd,EAAvB,EAA2B;AACzB,QAAIe,EAAE,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBvB,IAAlB,CAAT;AACAqB,IAAAA,EAAE,CAACD,KAAD,CAAF,GAAYd,EAAE,CAACkB,MAAH,CAAUC,KAAtB;AACAJ,IAAAA,EAAE,CAACK,QAAH,GAAcL,EAAE,CAAClB,KAAjB;AACAkB,IAAAA,EAAE,CAACM,QAAH,GAAcZ,UAAU,CAACM,EAAE,CAAClB,KAAJ,EAAWkB,EAAE,CAACjB,KAAd,CAAxB;AACAH,IAAAA,OAAO,CAACoB,EAAD,CAAP;AACD;;AAED,WAASO,WAAT,CAAqBtB,EAArB,EAAyB;AACvB,QAAIU,EAAE,GAAGM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBvB,IAAlB,CAAT;AACAgB,IAAAA,EAAE,CAAC,OAAD,CAAF,GAAcV,EAAE,CAACkB,MAAH,CAAUK,KAAV,CAAgB,CAAhB,CAAd;AACA5B,IAAAA,OAAO,CAACe,EAAD,CAAP;AACD;;AAED,WAASc,GAAT,CAAa;AAACC,IAAAA;AAAD,GAAb,EAAwB;AACtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYxC,UAAU,CAACsC,OAAO,CAACG,OAAT,CAAV,CAA4BhC,IAAxC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,QAAMiC,cAAc,GAAGjD,OAAO,CAC5B,CAAC;AAAC6C,IAAAA;AAAD,GAAD,MAAgB;AAACA,IAAAA;AAAD,GAAhB,CAD4B,CAAP,CACOD,GADP,CAAvB;AAGA,sBACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAnEQjC,S;UACOT,U;;;KADPS,S;;AAqET,SAASuC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,SAAO,EAAP;AACD;;AAED,eAAenD,OAAO,CAACkD,WAAD,CAAP,CAAqBvC,SAArB,CAAf","sourcesContent":["import { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_user, fetch_user, fetch_users, api_login, fetch_reason } from '../api';\n\nfunction UsersEdit({current_user}) {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\", pass1: \"\", pass2: \"\",\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['name', 'email', 'password', 'reason', 'photo']);\n    create_user(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_users();\n          api_login(user['email'], user['password'])\n          history.push(fetch_reason(user[\"reason\"]))\n        }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    // This is for user experience only,\n    // validation logic goes on the server.\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  function UUF({session}) {\n    //fetch_user(session.user_id);\n    console.log(fetch_user(session.user_id).name);\n    return(\n      <h1>Hello</h1>\n    )\n  }\n\n  const UpdateUserForm = connect(\n    ({session}) => ({session}))(UUF);\n\n  return (\n    <UpdateUserForm/>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersEdit);\n"]},"metadata":{},"sourceType":"module"}