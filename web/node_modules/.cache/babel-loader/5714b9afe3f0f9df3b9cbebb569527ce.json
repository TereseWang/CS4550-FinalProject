{"ast":null,"code":"var _jsxFileName = \"/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Wellness/Edit.js\",\n    _s = $RefreshSig$();\n\nimport { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink, useLocation } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_wellness, fetch_wellness, fetch_user, fetch_single_wellness } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WellnessEdit({\n  user_form,\n  session,\n  wellness_form\n}) {\n  _s();\n\n  let location = useLocation();\n  let wellness_id = location.pathname.split(\"/wellness/edit/\")[1];\n\n  if (typeof wellness_form.id == \"undefined\" || wellness_form.id != wellness_id) {\n    fetch_single_wellness(wellness_id);\n  }\n\n  if (typeof user_form.id == \"undefined\" || user_form.id != wellness_form.user_id) {\n    fetch_user(wellness_form.user_id);\n  }\n\n  let history = useHistory();\n  const [post, setPost] = useState({\n    user_id: user_form.id,\n    body: wellness_form.body,\n    title: wellness_form.title,\n    id: wellness_form.id,\n    votes: wellness_form.votes\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(post, ['user_id', 'title', 'body', 'photo', 'id']);\n    update_wellness(data).then(data => {\n      if (data.error) {\n        let action = {\n          type: \"error/set\",\n          data: data.error\n        };\n        store.dispatch(action);\n      } else {\n        fetch_wellness();\n      }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, post);\n    u1[field] = ev.target.value;\n    setPost(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, post);\n    p1[\"photo\"] = ev.target.files[0];\n    setPost(p1);\n  }\n\n  function Redirect({\n    to,\n    children\n  }) {\n    return /*#__PURE__*/_jsxDEV(Nav.Item, {\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: to,\n        exact: true,\n        className: \"btn font-weight-bold text-light btn-danger\",\n        activeClassName: \"active\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n  let link = \"/wellness/view/\" + wellness_form.id;\n\n  if (session) {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mt-5\",\n          children: \"Edit Wellness Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Post Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: ev => update(\"title\", ev),\n          value: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Post Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          onChange: ev => update(\"body\", ev),\n          value: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Profile Picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          onChange: updatePhoto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"ml-1\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          className: \"h3 font-weight-bold mr-3\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: link,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-5 ml-5\",\n      children: \"Please Login In To Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(WellnessEdit, \"SUoADPOM9/IXu6qqU152IFkkTZY=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = WellnessEdit;\n\nfunction state2props({\n  user_form,\n  session,\n  wellness_form\n}) {\n  return {\n    user_form,\n    session,\n    wellness_form\n  };\n}\n\nexport default connect(state2props)(WellnessEdit);\n\nvar _c;\n\n$RefreshReg$(_c, \"WellnessEdit\");","map":{"version":3,"sources":["/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Wellness/Edit.js"],"names":["Nav","NavRow","Row","Col","Form","Button","connect","useState","useHistory","NavLink","useLocation","pick","store","update_wellness","fetch_wellness","fetch_user","fetch_single_wellness","WellnessEdit","user_form","session","wellness_form","location","wellness_id","pathname","split","id","user_id","history","post","setPost","body","title","votes","onSubmit","ev","preventDefault","data","then","error","action","type","dispatch","update","field","u1","Object","assign","target","value","updatePhoto","p1","files","Redirect","to","children","link","state2props"],"mappings":"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","sourcesContent":["import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink, useLocation  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_wellness , fetch_wellness, fetch_user, fetch_single_wellness } from '../api';\n\nfunction WellnessEdit({user_form, session, wellness_form}) {\n  let location = useLocation()\n  let wellness_id = location.pathname.split(\"/wellness/edit/\")[1]\n  if(typeof(wellness_form.id) == \"undefined\" || wellness_form.id != wellness_id) {\n    fetch_single_wellness(wellness_id)\n  }\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != wellness_form.user_id) {\n    fetch_user(wellness_form.user_id)\n  }\n\n  let history = useHistory();\n  const [post, setPost] = useState({\n    user_id: user_form.id, body: wellness_form.body, title: wellness_form.title, id: wellness_form.id,\n    votes: wellness_form.votes\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(post, ['user_id', 'title', 'body', 'photo', 'id']);\n    update_wellness(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_wellness()\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, post);\n    u1[field] = ev.target.value;\n    setPost(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, post);\n    p1[\"photo\"] = ev.target.files[0];\n    setPost(p1);\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn font-weight-bold text-light btn-danger\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n  let link = \"/wellness/view/\" + wellness_form.id\n\n  if(session) {\n    return(\n        <Form onSubmit={onSubmit}>\n          <Form.Group>\n            <h1 className=\"mt-5\">Edit Wellness Post</h1>\n            <Form.Label>Post Title</Form.Label>\n            <Form.Control type=\"text\"\n                          onChange={\n                            (ev) => update(\"title\", ev)}\n              value={post.title} />\n          </Form.Group>\n          <Form.Group>\n          <Form.Label>Post Body</Form.Label>\n          <Form.Control as=\"textarea\"\n                        onChange={\n                          (ev) => update(\"body\", ev)}\n            value={post.body} />\n        </Form.Group>\n        <Form.Group>\n              <Form.Label>Profile Picture</Form.Label>\n              <Form.Control type=\"file\" onChange={updatePhoto} />\n        </Form.Group>\n          <Row className=\"ml-1\">\n          <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n            Save\n          </Button>\n          <Redirect to={link}>Cancel</Redirect>\n          </Row>\n        </Form>\n      );\n  }\n  else{\n    return <h1 className=\"mt-5 ml-5\">Please Login In To Edit</h1>\n  }\n}\n\nfunction state2props({user_form, session, wellness_form}) {\n  return {user_form, session, wellness_form};\n}\n\nexport default connect(state2props)(WellnessEdit);\n"]},"metadata":{},"sourceType":"module"}