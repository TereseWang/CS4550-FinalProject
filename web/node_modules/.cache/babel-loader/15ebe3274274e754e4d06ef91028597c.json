{"ast":null,"code":"import store from './store';\n\nasync function api_get(path) {\n  let text = await fetch(\"http://localhost:4000/api/v1\" + path, {});\n  let resp = await text.json();\n  return resp.data;\n}\n\nasync function api_post(path, data) {\n  let opts = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  };\n  let text = await fetch(\"http://localhost:4000/api/v1\" + path, opts);\n  return await text.json();\n}\n\nexport function fetch_users() {\n  api_get(\"/users\").then(data => store.dispatch({\n    type: 'users/set',\n    data: data\n  }));\n}\nexport function fetch_wellness() {\n  api_get(\"/healths\").then(data => store.dispatch({\n    type: 'wellness/set',\n    data: data\n  }));\n}\nexport function api_login(email, password) {\n  api_post(\"/session\", {\n    email,\n    password\n  }).then(data => {\n    if (data.session) {\n      let action = {\n        type: 'session/set',\n        data: data.session\n      };\n      store.dispatch(action);\n    } else if (data.error) {\n      let action = {\n        type: 'error/set',\n        data: data.error\n      };\n      store.dispatch(action);\n    }\n  });\n}\nexport function fetch_user(id) {\n  return api_get(`/users/${id}`).then(data => {\n    store.dispatch({\n      type: \"user/set\",\n      data: data\n    });\n  });\n}\nexport async function create_user(user) {\n  console.log(user);\n  let data = new FormData();\n  data.append(\"user[name]\", user.name);\n  data.append(\"user[email]\", user.email);\n  data.append(\"user[password]\", user.password);\n  data.append(\"user[reason]\", user.reason);\n\n  if (user.photo == \"undefined\") {\n    user[\"photo\"] = \"\";\n  }\n\n  data.append(\"user[photo]\", user.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/users\", {\n    method: \"POST\",\n    body: data\n  });\n  return await resp.json();\n}\nexport async function update_user(user) {\n  let data = new FormData();\n  data.append(\"user_id\", user.id);\n  data.append(\"user[name]\", user.name);\n  data.append(\"user[email]\", user.email);\n  data.append(\"user[password]\", user.password);\n  data.append(\"user[reason]\", user.reason);\n  data.append(\"user[photo]\", user.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/users/\" + user.id, {\n    method: \"PATCH\",\n    body: data\n  });\n  return await resp.json();\n}\nexport function fetch_reason(reason) {\n  switch (reason) {\n    case \"Cat Wellness\":\n      return \"/wellness\";\n      break;\n\n    case \"Breeder/Adoption\":\n      return \"/selladopt\";\n      break;\n\n    case \"Lost/Found Cats\":\n      return \"/lostfound\";\n      break;\n\n    case \"Food Choices/Recommendations\":\n      return \"/food\";\n      break;\n\n    case \"Other\":\n      return \"/forum\";\n      break;\n\n    default:\n      return \"/\";\n  }\n}\nexport function load_defaults() {\n  fetch_users();\n  fetch_wellness();\n}","map":{"version":3,"sources":["/media/psf/Home/Desktop/CS4550-FinalProject/web/src/api.js"],"names":["store","api_get","path","text","fetch","resp","json","data","api_post","opts","method","headers","body","JSON","stringify","fetch_users","then","dispatch","type","fetch_wellness","api_login","email","password","session","action","error","fetch_user","id","create_user","user","console","log","FormData","append","name","reason","photo","update_user","fetch_reason","load_defaults"],"mappings":"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","sourcesContent":["import store from './store';\n\nasync function api_get(path) {\n  let text = await fetch(\n    \"http://localhost:4000/api/v1\" + path, {});\n  let resp = await text.json();\n  return resp.data;\n}\n\nasync function api_post(path, data) {\n  let opts = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data),\n  };\n  let text = await fetch(\n    \"http://localhost:4000/api/v1\" + path, opts);\n  return await text.json();\n}\n\nexport function fetch_users() {\n    api_get(\"/users\").then((data) => store.dispatch({\n        type: 'users/set',\n        data: data,\n    }));\n}\n\nexport function fetch_wellness() {\n  api_get(\"/healths\").then((data) => store.dispatch({\n    type: 'wellness/set',\n    data: data,\n  }));\n}\n\nexport function api_login(email, password) {\n  api_post(\"/session\", {email, password}).then((data) => {\n    if (data.session) {\n      let action = {\n        type: 'session/set',\n        data: data.session,\n      }\n      store.dispatch(action);\n    }\n    else if (data.error) {\n     let action = {\n        type: 'error/set',\n        data: data.error,\n      }\n      store.dispatch(action);\n    }\n  });\n}\n\nexport function fetch_user(id) {\n  return api_get(`/users/${id}`).then((data) => {\n    store.dispatch({\n        type: \"user/set\",\n        data: data\n      });\n    })\n}\n\nexport async function create_user(user) {\n  console.log(user)\n  let data = new FormData();\n  data.append(\"user[name]\", user.name);\n  data.append(\"user[email]\", user.email);\n  data.append(\"user[password]\", user.password);\n  data.append(\"user[reason]\", user.reason);\n  if (user.photo == \"undefined\") {\n    user[\"photo\"] = \"\";\n  }\n  data.append(\"user[photo]\", user.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/users\", {\n    method: \"POST\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport async function update_user(user) {\n  let data = new FormData();\n  data.append(\"user_id\", user.id);\n  data.append(\"user[name]\", user.name);\n  data.append(\"user[email]\", user.email);\n  data.append(\"user[password]\", user.password);\n  data.append(\"user[reason]\", user.reason);\n  data.append(\"user[photo]\", user.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/users/\" + user.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport function fetch_reason(reason) {\n  switch(reason){\n    case \"Cat Wellness\":\n      return \"/wellness\"\n      break;\n    case \"Breeder/Adoption\":\n      return \"/selladopt\"\n      break;\n    case \"Lost/Found Cats\":\n      return \"/lostfound\"\n      break;\n    case \"Food Choices/Recommendations\":\n      return \"/food\"\n      break;\n    case \"Other\":\n      return \"/forum\"\n      break;\n    default:\n      return \"/\"\n    }\n}\nexport function load_defaults() {\n  fetch_users();\n  fetch_wellness();\n}\n"]},"metadata":{},"sourceType":"module"}