{"ast":null,"code":"import { createStore, combineReducers } from 'redux';\n\nfunction wellness(state = [], action) {\n  switch (action.type) {\n    case 'wellness/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction score(state = 0, action) {\n  switch (action.type) {\n    case 'score/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction users(state = [], action) {\n  switch (action.type) {\n    case 'users/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction user_form(state = {}, action) {\n  switch (action.type) {\n    case 'user_form/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction comments(state = [], action) {\n  switch (action.type) {\n    case 'comments/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction forumcomments(state = [], action) {\n  switch (action.type) {\n    case 'forumcomments/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction wellness_form(state = {}, action) {\n  switch (action.type) {\n    case 'wellness_form/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction session(state = load_session(), action) {\n  switch (action.type) {\n    case 'session/set':\n      save_session(action.data);\n      return action.data;\n\n    case 'session/clear':\n      delete_session();\n      return null;\n\n    default:\n      return state;\n  }\n}\n\nfunction save_session(sess) {\n  let session = Object.assign({}, sess, {\n    time: Date.now()\n  });\n  localStorage.setItem(\"session\", JSON.stringify(session));\n}\n\nfunction delete_session() {\n  localStorage.removeItem(\"session\");\n}\n\nfunction load_session() {\n  let session = localStorage.getItem(\"session\");\n\n  if (!session) {\n    return null;\n  }\n\n  session = JSON.parse(session);\n  let age = Date.now() - session.time;\n  let hours = 60 * 60 * 1000;\n\n  if (age < 24 * hours) {\n    return session;\n  } else {\n    return null;\n  }\n}\n\nfunction error(state = null, action) {\n  switch (action.type) {\n    case 'error/set':\n      return action.data;\n\n    case 'session/set':\n      return null;\n\n    default:\n      return state;\n  }\n}\n\nfunction forums(state = [], action) {\n  switch (action.type) {\n    case 'forums/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction forum_form(state = {}, action) {\n  switch (action.type) {\n    case 'forum_form/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction forum_score(state = 0, action) {\n  switch (action.type) {\n    case 'forum_score/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction foods(state = [], action) {\n  switch (action.type) {\n    case 'foods/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction food_form(state = {}, action) {\n  switch (action.type) {\n    case 'food_form/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction cat_breed(state = [], action) {\n  switch (action.type) {\n    case 'cat_breed/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction root_reducer(state, action) {\n  let reducer = combineReducers({\n    cat_breed,\n    food_form,\n    foods,\n    forumcomments,\n    forum_score,\n    forum_form,\n    forums,\n    comments,\n    score,\n    wellness_form,\n    wellness,\n    users,\n    user_form,\n    session,\n    error\n  });\n  return reducer(state, action);\n}\n\nlet store = createStore(root_reducer);\nexport default store;","map":{"version":3,"sources":["/media/psf/Home/Desktop/CS4550-FinalProject/web/src/store.js"],"names":["createStore","combineReducers","wellness","state","action","type","data","score","users","user_form","comments","forumcomments","wellness_form","session","load_session","save_session","delete_session","sess","Object","assign","time","Date","now","localStorage","setItem","JSON","stringify","removeItem","getItem","parse","age","hours","error","forums","forum_form","forum_score","foods","food_form","cat_breed","root_reducer","reducer","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;;AAEA,SAASC,QAAT,CAAkBC,KAAK,GAAE,EAAzB,EAA6BC,MAA7B,EAAsC;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASI,KAAT,CAAeJ,KAAK,GAAC,CAArB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASK,KAAT,CAAeL,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASM,SAAT,CAAmBN,KAAK,GAAG,EAA3B,EAA+BC,MAA/B,EAAuC;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASO,QAAT,CAAkBP,KAAK,GAAC,EAAxB,EAA4BC,MAA5B,EAAoC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASQ,aAAT,CAAuBR,KAAK,GAAC,EAA7B,EAAiCC,MAAjC,EAAyC;AACvC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASS,aAAT,CAAuBT,KAAK,GAAG,EAA/B,EAAmCC,MAAnC,EAA2C;AACzC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASU,OAAT,CAAiBV,KAAK,GAAGW,YAAY,EAArC,EAAyCV,MAAzC,EAAiD;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACEU,MAAAA,YAAY,CAACX,MAAM,CAACE,IAAR,CAAZ;AACA,aAAOF,MAAM,CAACE,IAAd;;AACF,SAAK,eAAL;AACEU,MAAAA,cAAc;AACd,aAAO,IAAP;;AACF;AACE,aAAOb,KAAP;AARJ;AAUD;;AAED,SAASY,YAAT,CAAsBE,IAAtB,EAA4B;AAC1B,MAAIJ,OAAO,GAAGK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,EAAwB;AAACG,IAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAAP,GAAxB,CAAd;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeb,OAAf,CAAhC;AACD;;AAED,SAASG,cAAT,GAA0B;AACxBO,EAAAA,YAAY,CAACI,UAAb,CAAwB,SAAxB;AACD;;AAED,SAASb,YAAT,GAAwB;AACtB,MAAID,OAAO,GAAGU,YAAY,CAACK,OAAb,CAAqB,SAArB,CAAd;;AACA,MAAI,CAACf,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AACDA,EAAAA,OAAO,GAAGY,IAAI,CAACI,KAAL,CAAWhB,OAAX,CAAV;AACA,MAAIiB,GAAG,GAAGT,IAAI,CAACC,GAAL,KAAaT,OAAO,CAACO,IAA/B;AACA,MAAIW,KAAK,GAAG,KAAG,EAAH,GAAM,IAAlB;;AACA,MAAID,GAAG,GAAG,KAAKC,KAAf,EAAsB;AACpB,WAAOlB,OAAP;AACD,GAFD,MAGK;AACH,WAAO,IAAP;AACD;AACF;;AAED,SAASmB,KAAT,CAAe7B,KAAK,GAAG,IAAvB,EAA6BC,MAA7B,EAAqC;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF,SAAK,aAAL;AACE,aAAO,IAAP;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD;;AAED,SAAS8B,MAAT,CAAgB9B,KAAK,GAAC,EAAtB,EAA0BC,MAA1B,EAAkC;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAAS+B,UAAT,CAAoB/B,KAAK,GAAC,EAA1B,EAA8BC,MAA9B,EAAsC;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASgC,WAAT,CAAqBhC,KAAK,GAAC,CAA3B,EAA8BC,MAA9B,EAAsC;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASiC,KAAT,CAAejC,KAAK,GAAC,EAArB,EAAyBC,MAAzB,EAAiC;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASkC,SAAT,CAAmBlC,KAAK,GAAC,EAAzB,EAA6BC,MAA7B,EAAqC;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASmC,SAAT,CAAmBnC,KAAK,GAAC,EAAzB,EAA6BC,MAA7B,EAAqC;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASoC,YAAT,CAAsBpC,KAAtB,EAA6BC,MAA7B,EAAqC;AACjC,MAAIoC,OAAO,GAAGvC,eAAe,CAAC;AAC1BqC,IAAAA,SAD0B;AACfD,IAAAA,SADe;AACJD,IAAAA,KADI;AACGzB,IAAAA,aADH;AACkBwB,IAAAA,WADlB;AAC+BD,IAAAA,UAD/B;AAC2CD,IAAAA,MAD3C;AACmDvB,IAAAA,QADnD;AAC6DH,IAAAA,KAD7D;AAE1BK,IAAAA,aAF0B;AAEXV,IAAAA,QAFW;AAEDM,IAAAA,KAFC;AAEMC,IAAAA,SAFN;AAEiBI,IAAAA,OAFjB;AAE0BmB,IAAAA;AAF1B,GAAD,CAA7B;AAIA,SAAOQ,OAAO,CAACrC,KAAD,EAAQC,MAAR,CAAd;AACH;;AAID,IAAIqC,KAAK,GAAGzC,WAAW,CAACuC,YAAD,CAAvB;AACA,eAAeE,KAAf","sourcesContent":["import { createStore, combineReducers } from 'redux';\n\nfunction wellness(state= [], action ) {\n  switch (action.type) {\n    case 'wellness/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction score(state=0, action) {\n  switch (action.type) {\n    case 'score/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction users(state = [], action) {\n  switch (action.type) {\n    case 'users/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction user_form(state = {}, action) {\n  switch (action.type) {\n    case 'user_form/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction comments(state=[], action) {\n  switch (action.type) {\n    case 'comments/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction forumcomments(state=[], action) {\n  switch (action.type) {\n    case 'forumcomments/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction wellness_form(state = {}, action) {\n  switch (action.type) {\n    case 'wellness_form/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction session(state = load_session(), action) {\n  switch (action.type) {\n    case 'session/set':\n      save_session(action.data);\n      return action.data;\n    case 'session/clear':\n      delete_session();\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction save_session(sess) {\n  let session = Object.assign({}, sess, {time: Date.now()});\n  localStorage.setItem(\"session\", JSON.stringify(session));\n}\n\nfunction delete_session() {\n  localStorage.removeItem(\"session\");\n}\n\nfunction load_session() {\n  let session = localStorage.getItem(\"session\");\n  if (!session) {\n    return null;\n  }\n  session = JSON.parse(session);\n  let age = Date.now() - session.time;\n  let hours = 60*60*1000;\n  if (age < 24 * hours) {\n    return session;\n  }\n  else {\n    return null;\n  }\n}\n\nfunction error(state = null, action) {\n  switch (action.type) {\n    case 'error/set':\n      return action.data;\n    case 'session/set':\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction forums(state=[], action) {\n  switch (action.type) {\n    case 'forums/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction forum_form(state={}, action) {\n  switch (action.type) {\n    case 'forum_form/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction forum_score(state=0, action) {\n  switch (action.type) {\n    case 'forum_score/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction foods(state=[], action) {\n  switch (action.type) {\n    case 'foods/set':\n      return action.data;\n    default:\n      return state;\n    }\n}\n\nfunction food_form(state={}, action) {\n  switch (action.type) {\n    case 'food_form/set':\n      return action.data;\n    default:\n      return state;\n    }\n}\n\nfunction cat_breed(state=[], action) {\n  switch (action.type) {\n    case 'cat_breed/set':\n      return action.data;\n    default:\n      return state;\n    }\n}\n\nfunction root_reducer(state, action) {\n    let reducer = combineReducers({\n        cat_breed, food_form, foods, forumcomments, forum_score, forum_form, forums, comments, score,\n        wellness_form, wellness, users, user_form, session, error,\n    });\n    return reducer(state, action);\n}\n\n\n\nlet store = createStore(root_reducer);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}