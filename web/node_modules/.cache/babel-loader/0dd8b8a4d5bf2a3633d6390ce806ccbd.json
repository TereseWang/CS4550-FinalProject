{"ast":null,"code":"import store from './store';\n\nasync function api_get(path) {\n  let text = await fetch(\"http://localhost:4000/api/v1\" + path, {});\n  let resp = await text.json();\n  return resp.data;\n}\n\nasync function api_post(path, data) {\n  let opts = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  };\n  let text = await fetch(\"http://localhost:4000/api/v1\" + path, opts);\n  return await text.json();\n} //--------------------------Lost Found Kitten------------------\n\n\nexport async function fetch_lost_cats() {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  myHeaders.append(\"X-Token\", \"eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1OTY4MDgzNjgsInN1YiI6ImhlbGVuam9obnNvbkBnbWFpbC5jb20iLCJleHAiOjE1OTgxMDQzNjh9.AyWQOYRV2nNQUavTRFnQQOsSdrYZWxFicePai3yFUFg\");\n  var raw = \"\";\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  let resp = await fetch(\"https://pro-pets-router.herokuapp.com/lostfound/en/v1/founds?currentPage=0\", requestOptions).then(data => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n} //------------------------Food List----------------------------\n\nexport function fetch_foods() {\n  api_get(\"/foods\").then(data => {\n    data = sortFood(data);\n    store.dispatch({\n      type: 'foods/set',\n      data: data\n    });\n  });\n}\nexport function fetch_food(id) {\n  api_get(\"/foods/\" + id).then(data => store.dispatch({\n    type: 'food_form/set',\n    data: data\n  }));\n}\nexport async function create_food(food) {\n  let data = new FormData();\n  data.append(\"food[user_id]\", food.user_id);\n  data.append(\"food[like]\", JSON.stringify([]));\n  data.append(\"food[dislike]\", JSON.stringify([]));\n  data.append(\"food[type]\", food.type);\n  data.append(\"food[body]\", food.body);\n  data.append(\"food[brand]\", food.brand);\n  data.append(\"food[price]\", food.price);\n\n  if (food.photo === \"undefined\") {\n    food[\"photo\"] = \"\";\n  }\n\n  data.append(\"food[photo]\", food.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/foods\", {\n    method: \"POST\",\n    body: data\n  });\n  return await resp.json();\n}\nexport async function update_food(food) {\n  let data = new FormData();\n  data.append(\"food[user_id]\", food.user_id);\n  data.append(\"food[like]\", JSON.stringify([]));\n  data.append(\"food[dislike]\", JSON.stringify([]));\n  data.append(\"food[type]\", food.type);\n  data.append(\"food[body]\", food.body);\n  data.append(\"food[brand]\", food.brand);\n  data.append(\"food[price]\", food.price);\n  data.append(\"food[photo]\", food.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/foods/\" + food.id, {\n    method: \"PATCH\",\n    body: data\n  });\n  return await resp.json();\n}\nexport async function delete_food(id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://localhost:4000/api/v1/foods/\" + id, {\n    method: 'DELETE',\n    body: data\n  }).then(resp => {\n    if (!resp.ok) {\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.'\n      };\n      store.dispatch(action);\n    } else {\n      fetch_foods();\n    }\n  });\n}\n\nfunction sortFood(data) {\n  return data.sort(function (a, b) {\n    return b.like.length - a.like.length;\n  });\n}\n\nexport async function update_food_vote(food, user_id, action) {\n  let data = new FormData();\n  data.append(\"food[user_id]\", food.user_id);\n  data.append(\"food[type]\", food.type);\n  data.append(\"food[body]\", food.body);\n  data.append(\"food[brand]\", food.brand);\n  data.append(\"food[price]\", food.price);\n  data.append(\"food[photo]\", food.photo);\n  data.append(\"food[like]\", JSON.stringify([]));\n  data.append(\"food[dislike]\", JSON.stringify([]));\n  let likes = food.like;\n  let dislikes = food.dislike;\n\n  if (action == \"decreaselike\") {\n    likes = likes.filter(function (e) {\n      return e != user_id;\n    });\n  } else if (action == \"decreasedislike\") {\n    dislikes = dislikes.filter(function (e) {\n      return e != user_id;\n    });\n  } else if (action == \"increaselike\") {\n    likes.push(user_id);\n    dislikes = dislikes.filter(function (e) {\n      return e != user_id;\n    });\n  } else {\n    dislikes.push(user_id);\n    likes = likes.filter(function (e) {\n      return e != user_id;\n    });\n  }\n\n  data.append(\"food[like]\", JSON.stringify(likes));\n  data.append(\"food[dislike]\", JSON.stringify(dislikes));\n\n  if (food.photo === \"undefined\") {\n    food[\"photo\"] = \"\";\n  }\n\n  data.append(\"food[photo]\", food.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/foods/\" + food.id, {\n    method: \"PATCH\",\n    body: data\n  });\n  return await resp.json();\n}\nexport function fetch_food_like(id) {\n  api_get(\"/foods/\" + id).then(data => {\n    store.dispatch({\n      type: 'food_like/set',\n      data: data.like.length\n    });\n  });\n}\nexport function fetch_food_dislike(id) {\n  api_get(\"/foods/\" + id).then(data => {\n    store.dispatch({\n      type: 'food_dislike/set',\n      data: data.dislike.length\n    });\n  });\n} //-----------------------Forum----------------------------------\n\nexport function fetch_forums() {\n  api_get(\"/forums\").then(data => {\n    data = sortForum(data);\n    store.dispatch({\n      type: 'forums/set',\n      data: data\n    });\n  });\n}\nexport function fetch_forum(id) {\n  api_get(\"/forums/\" + id).then(data => store.dispatch({\n    type: 'forum_form/set',\n    data: data\n  }));\n}\nexport async function create_forum(post) {\n  let data = new FormData();\n  data.append(\"forum[user_id]\", post.user_id);\n  data.append(\"forum[title]\", post.title);\n  data.append(\"forum[body]\", post.body);\n  data.append(\"forum[votes]\", JSON.stringify([]));\n\n  if (post.photo === \"undefined\") {\n    post[\"photo\"] = \"\";\n  }\n\n  data.append(\"forum[photo]\", post.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/forums\", {\n    method: \"POST\",\n    body: data\n  });\n  return await resp.json();\n}\nexport async function update_forum(post) {\n  let data = new FormData();\n  data.append(\"forum[user_id]\", post.user_id);\n  data.append(\"forum[title]\", post.title);\n  data.append(\"forum[body]\", post.body);\n  data.append(\"forum[photo]\", post.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/forums/\" + post.id, {\n    method: \"PATCH\",\n    body: data\n  });\n  return await resp.json();\n}\nexport async function delete_forum(id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://localhost:4000/api/v1/forums/\" + id, {\n    method: 'DELETE',\n    body: data\n  }).then(resp => {\n    if (!resp.ok) {\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.'\n      };\n      store.dispatch(action);\n    } else {\n      fetch_forums();\n    }\n  });\n}\nexport async function update_forum_vote(post, user_id, action) {\n  let data = new FormData();\n  data.append(\"forum[user_id]\", post.user_id);\n  data.append(\"forum[title]\", post.title);\n  data.append(\"forum[body]\", post.body);\n  let votes = post.votes;\n\n  if (action == \"increase\") {\n    votes.push(user_id);\n  } else {\n    votes = votes.filter(function (e) {\n      return e != user_id;\n    });\n  }\n\n  data.append(\"forum[votes]\", JSON.stringify(votes));\n\n  if (post.photo === \"undefined\") {\n    post[\"photo\"] = \"\";\n  }\n\n  data.append(\"forum[photo]\", post.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/forums/\" + post.id, {\n    method: \"PATCH\",\n    body: data\n  });\n  return await resp.json();\n}\nexport function fetch_forum_score(id) {\n  api_get(\"/forums/\" + id).then(data => {\n    store.dispatch({\n      type: 'forum_score/set',\n      data: data.votes.length\n    });\n  });\n}\n\nfunction sortForum(data) {\n  return data.sort(function (a, b) {\n    return b.votes.length - a.votes.length;\n  });\n} //----------------------Wellness Comments -----------------------\n\n\nexport function fetch_comments(health_id) {\n  api_get(\"/comments\").then(data => {\n    let result = [];\n\n    for (let [key, value] of Object.entries(data)) {\n      if (value.health_id == health_id) {\n        result.push(value);\n      }\n    }\n\n    store.dispatch({\n      type: 'comments/set',\n      data: result\n    });\n  });\n}\nexport async function create_comment(comment, user_id, wellness_id) {\n  let data = new FormData();\n  data.append(\"comment[body]\", comment);\n  data.append(\"comment[health_id]\", wellness_id);\n  data.append(\"comment[user_id]\", user_id);\n  let resp = await fetch(\"http://localhost:4000/api/v1/comments\", {\n    method: \"POST\",\n    body: data\n  });\n  return await resp.json();\n}\nexport async function delete_comment(id, wellness_id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://localhost:4000/api/v1/comments/\" + id, {\n    method: 'DELETE',\n    body: data\n  }).then(resp => {\n    if (!resp.ok) {\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.'\n      };\n      store.dispatch(action);\n    } else {\n      console.log(wellness_id);\n      fetch_comments(wellness_id);\n      fetch_wellness();\n    }\n  });\n} //--------------------------Forum Comment -----------------------\n\nexport function fetch_forumcomments(forum_id) {\n  api_get(\"/forumcomments\").then(data => {\n    let result = [];\n\n    for (let [key, value] of Object.entries(data)) {\n      console.log(value);\n      console.log(forum_id);\n\n      if (value.forum_id == forum_id) {\n        result.push(value);\n      }\n    }\n\n    store.dispatch({\n      type: 'forumcomments/set',\n      data: result\n    });\n  });\n}\nexport async function create_forumcomment(forumcomment, user_id, forum_id) {\n  let data = new FormData();\n  data.append(\"forumcomment[body]\", forumcomment);\n  data.append(\"forumcomment[forum_id]\", forum_id);\n  data.append(\"forumcomment[user_id]\", user_id);\n  let resp = await fetch(\"http://localhost:4000/api/v1/forumcomments\", {\n    method: \"POST\",\n    body: data\n  });\n  return await resp.json();\n}\nexport async function delete_forumcomment(id, forum_id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://localhost:4000/api/v1/forumcomments/\" + id, {\n    method: 'DELETE',\n    body: data\n  }).then(resp => {\n    if (!resp.ok) {\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.'\n      };\n      store.dispatch(action);\n    } else {\n      console.log(forum_id);\n      fetch_forumcomments(forum_id);\n      fetch_forums();\n    }\n  });\n} //---------------------user--------------------------------------\n\nexport function fetch_users() {\n  api_get(\"/users\").then(data => store.dispatch({\n    type: 'users/set',\n    data: data\n  }));\n}\nexport function fetch_user(id) {\n  api_get(\"/users/\" + id).then(data => store.dispatch({\n    type: 'user_form/set',\n    data: data\n  }));\n}\nexport async function create_user(user) {\n  let data = new FormData();\n  data.append(\"user[name]\", user.name);\n  data.append(\"user[email]\", user.email);\n  data.append(\"user[password]\", user.password);\n  data.append(\"user[reason]\", user.reason);\n\n  if (user.photo === \"undefined\") {\n    user[\"photo\"] = \"\";\n  }\n\n  data.append(\"user[photo]\", user.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/users\", {\n    method: \"POST\",\n    body: data\n  });\n  return await resp.json();\n}\nexport async function update_user(user) {\n  let data = new FormData();\n  data.append(\"user_id\", user.id);\n  data.append(\"user[name]\", user.name);\n  data.append(\"user[email]\", user.email);\n  data.append(\"user[password]\", user.password);\n  data.append(\"user[reason]\", user.reason);\n  data.append(\"user[photo]\", user.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/users/\" + user.id, {\n    method: \"PATCH\",\n    body: data\n  });\n  return await resp.json();\n} //---------------------wellness page-----------------------------------\n\nexport function fetch_wellness() {\n  api_get(\"/healths\").then(data => {\n    data = sortWellness(data);\n    store.dispatch({\n      type: 'wellness/set',\n      data: data\n    });\n  });\n}\nexport function fetch_single_wellness(id) {\n  api_get(\"/healths/\" + id).then(data => store.dispatch({\n    type: 'wellness_form/set',\n    data: data\n  }));\n}\nexport async function create_wellness(post) {\n  let data = new FormData();\n  data.append(\"health[user_id]\", post.user_id);\n  data.append(\"health[title]\", post.title);\n  data.append(\"health[body]\", post.body);\n  data.append(\"health[votes]\", JSON.stringify([]));\n\n  if (post.photo === \"undefined\") {\n    post[\"photo\"] = \"\";\n  }\n\n  data.append(\"health[photo]\", post.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/healths\", {\n    method: \"POST\",\n    body: data\n  });\n  return await resp.json();\n}\nexport async function update_wellness(post) {\n  let data = new FormData();\n  data.append(\"health[user_id]\", post.user_id);\n  data.append(\"health[title]\", post.title);\n  data.append(\"health[body]\", post.body);\n  data.append(\"health[photo]\", post.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/healths/\" + post.id, {\n    method: \"PATCH\",\n    body: data\n  });\n  return await resp.json();\n}\nexport async function delete_wellness(id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://localhost:4000/api/v1/healths/\" + id, {\n    method: 'DELETE',\n    body: data\n  }).then(resp => {\n    if (!resp.ok) {\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.'\n      };\n      store.dispatch(action);\n    } else {\n      fetch_wellness();\n    }\n  });\n}\nexport async function update_wellness_vote(post, user_id, action) {\n  let data = new FormData();\n  data.append(\"health[user_id]\", post.user_id);\n  data.append(\"health[title]\", post.title);\n  data.append(\"health[body]\", post.body);\n  let votes = post.votes;\n\n  if (action == \"increase\") {\n    votes.push(user_id);\n  } else {\n    votes = votes.filter(function (e) {\n      return e != user_id;\n    });\n  }\n\n  data.append(\"health[votes]\", JSON.stringify(votes));\n\n  if (post.photo === \"undefined\") {\n    post[\"photo\"] = \"\";\n  }\n\n  data.append(\"health[photo]\", post.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/healths/\" + post.id, {\n    method: \"PATCH\",\n    body: data\n  });\n  return await resp.json();\n}\nexport function fetch_score(id) {\n  api_get(\"/healths/\" + id).then(data => {\n    store.dispatch({\n      type: 'score/set',\n      data: data.votes.length\n    });\n  });\n}\nexport function search_wellness(search) {\n  api_get(\"/healths\").then(data => {\n    data = sortWellness(data);\n    data = handle_wellness_search(search, data);\n    store.dispatch({\n      type: 'wellness/set',\n      data: data\n    });\n  });\n}\n\nfunction handle_wellness_search(search, data) {\n  if (search == \"\") {\n    data = sortWellness(data);\n    return data;\n  } else {\n    let result = [];\n\n    for (let [key, value] of Object.entries(data)) {\n      if (value.title.includes(search) || value.body.includes(search)) {\n        result.push(value);\n      }\n    }\n\n    result = sortWellness(result);\n    return result;\n  }\n}\n\nfunction sortWellness(data) {\n  return data.sort(function (a, b) {\n    return b.votes.length - a.votes.length;\n  });\n}\n\nexport async function fetch_catbreeds() {\n  let text = await fetch(\"https://api.thecatapi.com/v1/breeds\", {});\n  let resp = await text.json();\n  let action = {\n    type: 'cat_breed/set',\n    data: resp\n  };\n  store.dispatch(action);\n} //---------------------------login------------------------------------\n\nexport function api_login(email, password) {\n  api_post(\"/session\", {\n    email,\n    password\n  }).then(data => {\n    if (data.session) {\n      let action = {\n        type: 'session/set',\n        data: data.session\n      };\n      store.dispatch(action);\n    } else if (data.error) {\n      let action = {\n        type: 'error/set',\n        data: data.error\n      };\n      store.dispatch(action);\n    }\n  });\n}\nexport function fetch_reason(reason) {\n  switch (reason) {\n    case \"Cat Wellness\":\n      return \"/wellness/list\";\n      break;\n\n    case \"Breeder/Adoption\":\n      return \"/selladopt\";\n      break;\n\n    case \"Lost/Found Cats\":\n      return \"/lostfound\";\n      break;\n\n    case \"Food Choices/Recommendations\":\n      return \"/food\";\n      break;\n\n    case \"Other\":\n      return \"/forum\";\n      break;\n\n    default:\n      return \"/\";\n  }\n}\nexport function load_defaults() {\n  fetch_users();\n  fetch_wellness();\n  fetch_forums();\n  fetch_foods();\n  fetch_catbreeds();\n  fetch_lost_cats();\n}","map":{"version":3,"sources":["/media/psf/Home/Desktop/CS4550-FinalProject/web/src/api.js"],"names":["store","api_get","path","text","fetch","resp","json","data","api_post","opts","method","headers","body","JSON","stringify","fetch_lost_cats","myHeaders","Headers","append","raw","requestOptions","redirect","then","response","result","console","log","catch","error","fetch_foods","sortFood","dispatch","type","fetch_food","id","create_food","food","FormData","user_id","brand","price","photo","update_food","delete_food","ok","action","sort","a","b","like","length","update_food_vote","likes","dislikes","dislike","filter","e","push","fetch_food_like","fetch_food_dislike","fetch_forums","sortForum","fetch_forum","create_forum","post","title","update_forum","delete_forum","update_forum_vote","votes","fetch_forum_score","fetch_comments","health_id","key","value","Object","entries","create_comment","comment","wellness_id","delete_comment","fetch_wellness","fetch_forumcomments","forum_id","create_forumcomment","forumcomment","delete_forumcomment","fetch_users","fetch_user","create_user","user","name","email","password","reason","update_user","sortWellness","fetch_single_wellness","create_wellness","update_wellness","delete_wellness","update_wellness_vote","fetch_score","search_wellness","search","handle_wellness_search","includes","fetch_catbreeds","api_login","session","fetch_reason","load_defaults"],"mappings":"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","sourcesContent":["import store from './store';\n\nasync function api_get(path) {\n  let text = await fetch(\n    \"http://localhost:4000/api/v1\" + path, {});\n  let resp = await text.json();\n  return resp.data;\n}\n\nasync function api_post(path, data) {\n  let opts = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data),\n  };\n  let text = await fetch(\n    \"http://localhost:4000/api/v1\" + path, opts);\n  return await text.json();\n}\n//--------------------------Lost Found Kitten------------------\nexport async function fetch_lost_cats() {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  myHeaders.append(\"X-Token\", \"eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1OTY4MDgzNjgsInN1YiI6ImhlbGVuam9obnNvbkBnbWFpbC5jb20iLCJleHAiOjE1OTgxMDQzNjh9.AyWQOYRV2nNQUavTRFnQQOsSdrYZWxFicePai3yFUFg\");\n  var raw = \"\";\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  let resp = await fetch(\"https://pro-pets-router.herokuapp.com/lostfound/en/v1/founds?currentPage=0\", requestOptions)\n  .then((data) => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n}\n\n//------------------------Food List----------------------------\nexport function fetch_foods() {\n  api_get(\"/foods\").then((data) => {\n    data = sortFood(data)\n    store.dispatch({\n    type: 'foods/set',\n    data: data,\n  })});\n}\n\nexport function fetch_food(id) {\n  api_get(\"/foods/\"+id).then((data) => store.dispatch({\n    type: 'food_form/set',\n    data: data,\n  }));\n}\n\nexport async function create_food(food) {\n  let data = new FormData();\n  data.append(\"food[user_id]\", food.user_id);\n  data.append(\"food[like]\", JSON.stringify([]))\n  data.append(\"food[dislike]\", JSON.stringify([]))\n  data.append(\"food[type]\", food.type);\n  data.append(\"food[body]\", food.body);\n  data.append(\"food[brand]\", food.brand)\n  data.append(\"food[price]\", food.price)\n  if (food.photo === \"undefined\") {\n    food[\"photo\"] = \"\";\n  }\n  data.append(\"food[photo]\", food.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/foods\", {\n    method: \"POST\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\n\nexport async function update_food(food) {\n  let data = new FormData();\n  data.append(\"food[user_id]\", food.user_id);\n  data.append(\"food[like]\", JSON.stringify([]))\n  data.append(\"food[dislike]\", JSON.stringify([]))\n  data.append(\"food[type]\", food.type);\n  data.append(\"food[body]\", food.body);\n  data.append(\"food[brand]\", food.brand)\n  data.append(\"food[price]\", food.price)\n  data.append(\"food[photo]\", food.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/foods/\" + food.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport async function delete_food(id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://localhost:4000/api/v1/foods/\" + id, {\n    method: 'DELETE',\n    body: data,\n  }).then((resp) => {\n    if(!resp.ok){\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.',\n      };\n      store.dispatch(action);\n    }else {\n      fetch_foods();\n    }\n  });\n}\n\nfunction sortFood(data) {\n  return data.sort(function(a, b){\n    return b.like.length - a.like.length});\n}\n\nexport async function update_food_vote(food, user_id, action) {\n  let data = new FormData();\n  data.append(\"food[user_id]\", food.user_id);\n  data.append(\"food[type]\", food.type);\n  data.append(\"food[body]\", food.body);\n  data.append(\"food[brand]\", food.brand)\n  data.append(\"food[price]\", food.price)\n  data.append(\"food[photo]\", food.photo);\n  data.append(\"food[like]\", JSON.stringify([]))\n  data.append(\"food[dislike]\", JSON.stringify([]))\n  let likes = food.like\n  let dislikes = food.dislike\n\n  if (action == \"decreaselike\") {\n    likes = likes.filter(function(e) { return e != user_id })\n  }\n  else if(action == \"decreasedislike\") {\n    dislikes = dislikes.filter(function(e) { return e != user_id })\n  }\n  else if(action == \"increaselike\") {\n    likes.push(user_id)\n    dislikes = dislikes.filter(function(e) { return e != user_id })\n  }\n  else {\n    dislikes.push(user_id)\n    likes = likes.filter(function(e) { return e != user_id })\n  }\n\n  data.append(\"food[like]\", JSON.stringify(likes))\n  data.append(\"food[dislike]\", JSON.stringify(dislikes))\n  if (food.photo === \"undefined\") {\n    food[\"photo\"] = \"\";\n  }\n  data.append(\"food[photo]\", food.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/foods/\" + food.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport function fetch_food_like(id) {\n  api_get(\"/foods/\"+id).then((data) => {\n  store.dispatch({\n    type: 'food_like/set',\n    data: data.like.length,\n  })});\n}\n\nexport function fetch_food_dislike(id) {\n  api_get(\"/foods/\"+id).then((data) => {\n  store.dispatch({\n    type: 'food_dislike/set',\n    data: data.dislike.length,\n  })});\n}\n\n//-----------------------Forum----------------------------------\nexport function fetch_forums() {\n  api_get(\"/forums\").then((data) => {\n  data = sortForum(data)\n  store.dispatch({\n    type: 'forums/set',\n    data: data,\n  })});\n}\n\nexport function fetch_forum(id) {\n  api_get(\"/forums/\"+id).then((data) => store.dispatch({\n    type: 'forum_form/set',\n    data: data,\n  }));\n}\n\nexport async function create_forum(post) {\n  let data = new FormData();\n  data.append(\"forum[user_id]\", post.user_id);\n  data.append(\"forum[title]\", post.title);\n  data.append(\"forum[body]\", post.body);\n  data.append(\"forum[votes]\", JSON.stringify([]))\n  if (post.photo === \"undefined\") {\n    post[\"photo\"] = \"\";\n  }\n  data.append(\"forum[photo]\", post.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/forums\", {\n    method: \"POST\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport async function update_forum(post) {\n  let data = new FormData();\n  data.append(\"forum[user_id]\", post.user_id);\n  data.append(\"forum[title]\", post.title);\n  data.append(\"forum[body]\", post.body);\n  data.append(\"forum[photo]\", post.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/forums/\" + post.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport async function delete_forum(id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://localhost:4000/api/v1/forums/\" + id, {\n    method: 'DELETE',\n    body: data,\n  }).then((resp) => {\n    if(!resp.ok){\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.',\n      };\n      store.dispatch(action);\n    }else {\n      fetch_forums();\n    }\n  });\n}\n\nexport async function update_forum_vote(post, user_id, action) {\n  let data = new FormData();\n  data.append(\"forum[user_id]\", post.user_id);\n  data.append(\"forum[title]\", post.title);\n  data.append(\"forum[body]\", post.body);\n  let votes = post.votes\n  if (action == \"increase\") {\n    votes.push(user_id)\n  }\n  else {\n    votes = votes.filter(function(e) { return e != user_id })\n  }\n  data.append(\"forum[votes]\", JSON.stringify(votes))\n  if (post.photo === \"undefined\") {\n    post[\"photo\"] = \"\";\n  }\n  data.append(\"forum[photo]\", post.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/forums/\" + post.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport function fetch_forum_score(id) {\n  api_get(\"/forums/\"+id).then((data) => {\n  store.dispatch({\n    type: 'forum_score/set',\n    data: data.votes.length,\n  })});\n}\n\nfunction sortForum(data) {\n  return data.sort(function(a, b){\n    return b.votes.length - a.votes.length});\n}\n//----------------------Wellness Comments -----------------------\nexport function fetch_comments(health_id) {\n  api_get(\"/comments\").then((data) => {\n    let result = []\n    for (let [key, value] of Object.entries(data)) {\n      if (value.health_id == health_id) {\n        result.push(value)\n      }\n    }\n    store.dispatch({\n    type: 'comments/set',\n    data: result,\n  })})\n}\n\nexport async function create_comment(comment, user_id, wellness_id) {\n  let data = new FormData();\n  data.append(\"comment[body]\", comment);\n  data.append(\"comment[health_id]\", wellness_id);\n  data.append(\"comment[user_id]\", user_id);\n  let resp = await fetch(\"http://localhost:4000/api/v1/comments\", {\n    method: \"POST\",\n    body: data,\n  })\n  return await resp.json();\n}\n\nexport async function delete_comment(id, wellness_id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://localhost:4000/api/v1/comments/\" + id, {\n    method: 'DELETE',\n    body: data,\n  }).then((resp) => {\n    if(!resp.ok){\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.',\n      };\n      store.dispatch(action);\n    }else {\n      console.log(wellness_id)\n      fetch_comments(wellness_id);\n      fetch_wellness()\n    }\n  });\n}\n\n//--------------------------Forum Comment -----------------------\nexport function fetch_forumcomments(forum_id) {\n  api_get(\"/forumcomments\").then((data) => {\n    let result = []\n    for (let [key, value] of Object.entries(data)) {\n      console.log(value)\n      console.log(forum_id)\n      if (value.forum_id == forum_id) {\n        result.push(value)\n      }\n    }\n    store.dispatch({\n    type: 'forumcomments/set',\n    data: result,\n  })})\n}\n\nexport async function create_forumcomment(forumcomment, user_id, forum_id) {\n  let data = new FormData();\n  data.append(\"forumcomment[body]\", forumcomment);\n  data.append(\"forumcomment[forum_id]\", forum_id);\n  data.append(\"forumcomment[user_id]\", user_id);\n  let resp = await fetch(\"http://localhost:4000/api/v1/forumcomments\", {\n    method: \"POST\",\n    body: data,\n  })\n  return await resp.json();\n}\n\nexport async function delete_forumcomment(id, forum_id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://localhost:4000/api/v1/forumcomments/\" + id, {\n    method: 'DELETE',\n    body: data,\n  }).then((resp) => {\n    if(!resp.ok){\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.',\n      };\n      store.dispatch(action);\n    }else {\n      console.log(forum_id)\n      fetch_forumcomments(forum_id);\n      fetch_forums()\n    }\n  });\n}\n\n//---------------------user--------------------------------------\nexport function fetch_users() {\n    api_get(\"/users\").then((data) => store.dispatch({\n        type: 'users/set',\n        data: data,\n    }));\n}\n\nexport function fetch_user(id) {\n  api_get(\"/users/\" + id).then((data) => store.dispatch({\n      type: 'user_form/set',\n      data: data,\n  }));\n}\n\nexport async function create_user(user) {\n  let data = new FormData();\n  data.append(\"user[name]\", user.name);\n  data.append(\"user[email]\", user.email);\n  data.append(\"user[password]\", user.password);\n  data.append(\"user[reason]\", user.reason);\n  if (user.photo === \"undefined\") {\n    user[\"photo\"] = \"\";\n  }\n  data.append(\"user[photo]\", user.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/users\", {\n    method: \"POST\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport async function update_user(user) {\n  let data = new FormData();\n  data.append(\"user_id\", user.id);\n  data.append(\"user[name]\", user.name);\n  data.append(\"user[email]\", user.email);\n  data.append(\"user[password]\", user.password);\n  data.append(\"user[reason]\", user.reason);\n  data.append(\"user[photo]\", user.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/users/\" + user.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n//---------------------wellness page-----------------------------------\nexport function fetch_wellness() {\n  api_get(\"/healths\").then((data) => {\n  data = sortWellness(data)\n  store.dispatch({\n    type: 'wellness/set',\n    data: data,\n  })});\n}\n\n\nexport function fetch_single_wellness(id) {\n  api_get(\"/healths/\"+id).then((data) => store.dispatch({\n    type: 'wellness_form/set',\n    data: data,\n  }));\n}\n\nexport async function create_wellness(post) {\n  let data = new FormData();\n  data.append(\"health[user_id]\", post.user_id);\n  data.append(\"health[title]\", post.title);\n  data.append(\"health[body]\", post.body);\n  data.append(\"health[votes]\", JSON.stringify([]))\n  if (post.photo === \"undefined\") {\n    post[\"photo\"] = \"\";\n  }\n  data.append(\"health[photo]\", post.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/healths\", {\n    method: \"POST\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport async function update_wellness(post) {\n  let data = new FormData();\n  data.append(\"health[user_id]\", post.user_id);\n  data.append(\"health[title]\", post.title);\n  data.append(\"health[body]\", post.body);\n  data.append(\"health[photo]\", post.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/healths/\" + post.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport async function delete_wellness(id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://localhost:4000/api/v1/healths/\" + id, {\n    method: 'DELETE',\n    body: data,\n  }).then((resp) => {\n    if(!resp.ok){\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.',\n      };\n      store.dispatch(action);\n    }else {\n      fetch_wellness();\n    }\n  });\n}\n\nexport async function update_wellness_vote(post, user_id, action) {\n  let data = new FormData();\n  data.append(\"health[user_id]\", post.user_id);\n  data.append(\"health[title]\", post.title);\n  data.append(\"health[body]\", post.body);\n  let votes = post.votes\n  if (action == \"increase\") {\n    votes.push(user_id)\n  }\n  else {\n    votes = votes.filter(function(e) { return e != user_id })\n  }\n  data.append(\"health[votes]\", JSON.stringify(votes))\n  if (post.photo === \"undefined\") {\n    post[\"photo\"] = \"\";\n  }\n  data.append(\"health[photo]\", post.photo);\n  let resp = await fetch(\"http://localhost:4000/api/v1/healths/\" + post.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport function fetch_score(id) {\n  api_get(\"/healths/\"+id).then((data) => {\n  store.dispatch({\n    type: 'score/set',\n    data: data.votes.length,\n  })});\n}\n\nexport function search_wellness(search) {\n  api_get(\"/healths\").then((data) => {\n  data = sortWellness(data)\n  data = handle_wellness_search(search, data)\n  store.dispatch({\n    type: 'wellness/set',\n    data: data,\n  })});\n}\n\nfunction handle_wellness_search(search, data) {\n  if (search == \"\") {\n    data = sortWellness(data)\n    return data\n  }\n  else {\n    let result = []\n    for (let [key, value] of Object.entries(data)) {\n      if (value.title.includes(search) || value.body.includes(search)) {\n        result.push(value)\n      }\n    }\n    result = sortWellness(result)\n    return result\n  }\n}\n\nfunction sortWellness(data) {\n  return data.sort(function(a, b){\n    return b.votes.length - a.votes.length});\n}\n\nexport async function fetch_catbreeds() {\n  let text = await fetch(\n    \"https://api.thecatapi.com/v1/breeds\", {});\n  let resp = await text.json();\n  let action = {\n     type: 'cat_breed/set',\n     data: resp,\n   }\n   store.dispatch(action);\n}\n\n//---------------------------login------------------------------------\nexport function api_login(email, password) {\n  api_post(\"/session\", {email, password}).then((data) => {\n    if (data.session) {\n      let action = {\n        type: 'session/set',\n        data: data.session,\n      }\n      store.dispatch(action);\n    }\n    else if (data.error) {\n     let action = {\n        type: 'error/set',\n        data: data.error,\n      }\n      store.dispatch(action);\n    }\n  });\n}\n\nexport function fetch_reason(reason) {\n  switch(reason){\n    case \"Cat Wellness\":\n      return \"/wellness/list\"\n      break;\n    case \"Breeder/Adoption\":\n      return \"/selladopt\"\n      break;\n    case \"Lost/Found Cats\":\n      return \"/lostfound\"\n      break;\n    case \"Food Choices/Recommendations\":\n      return \"/food\"\n      break;\n    case \"Other\":\n      return \"/forum\"\n      break;\n    default:\n      return \"/\"\n    }\n}\nexport function load_defaults() {\n  fetch_users();\n  fetch_wellness();\n  fetch_forums();\n  fetch_foods();\n  fetch_catbreeds();\n  fetch_lost_cats();\n}\n"]},"metadata":{},"sourceType":"module"}