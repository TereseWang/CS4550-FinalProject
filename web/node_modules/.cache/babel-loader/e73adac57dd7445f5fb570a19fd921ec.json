{"ast":null,"code":"var _jsxFileName = \"/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Wellness/New.js\",\n    _s = $RefreshSig$();\n\nimport { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_user, fetch_user, fetch_users, api_login, fetch_reason } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserForm({\n  session\n}) {\n  _s();\n\n  let history = useHistory();\n  const [user, setUser] = useState({\n    user_id: session.user_id,\n    body: \"\",\n    title: \"\"\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['user_id', 'title', 'body', 'photo']);\n    update_user(data).then(data => {\n      if (data.error) {\n        let action = {\n          type: \"error/set\",\n          data: data.error\n        };\n        store.dispatch(action);\n      } else {\n        history.push(\"/Wellness/list\");\n      }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  function Redirect({\n    to,\n    children\n  }) {\n    return /*#__PURE__*/_jsxDEV(Nav.Item, {\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: to,\n        exact: true,\n        className: \"btn font-weight-bold text-light btn-danger\",\n        activeClassName: \"active\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-5\",\n        children: \"Create Wellness Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        onChange: ev => update(\"name\", ev),\n        value: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"ml-1\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"h3 font-weight-bold mr-3\",\n        disabled: user.pass_msg !== \"\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/users/view\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n}\n\n_s(UserForm, \"qQ2JnubxEUjzZ1Ysi4bTpTq+i9U=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserForm;\n\nfunction LoginEdit({\n  session\n}) {\n  if (session) {\n    return /*#__PURE__*/_jsxDEV(UserForm, {\n      session: session\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-5 ml-5\",\n      children: \"Please Login In To Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_c2 = LoginEdit;\nconst UpdateUserForm = connect(({\n  session\n}) => ({\n  session\n}))(LoginEdit);\n\nfunction UsersEdit() {\n  return /*#__PURE__*/_jsxDEV(UpdateUserForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = UsersEdit;\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersEdit);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UserForm\");\n$RefreshReg$(_c2, \"LoginEdit\");\n$RefreshReg$(_c3, \"UsersEdit\");","map":{"version":3,"sources":["/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Wellness/New.js"],"names":["Nav","NavRow","Row","Col","Form","Button","connect","useState","useHistory","NavLink","pick","store","update_user","fetch_user","fetch_users","api_login","fetch_reason","UserForm","session","history","user","setUser","user_id","body","title","onSubmit","ev","preventDefault","data","then","error","action","type","dispatch","push","update","field","u1","Object","assign","target","value","updatePhoto","p1","files","Redirect","to","children","name","pass_msg","LoginEdit","UpdateUserForm","UsersEdit","state2props","_state"],"mappings":"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","sourcesContent":["import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_user, fetch_user, fetch_users, api_login, fetch_reason } from '../api';\n\nfunction UserForm({session}) {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    user_id: session.user_id, body: \"\", title: \"\"\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['user_id', 'title', 'body', 'photo']);\n    update_user(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          history.push(\"/Wellness/list\")\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn font-weight-bold text-light btn-danger\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Create Wellness Post</h1>\n          <Form.Label>Title</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"name\", ev)}\n            value={user.name} />\n        </Form.Group>\n        <Row className=\"ml-1\">\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\"\n                disabled={user.pass_msg !== \"\"}>\n          Save\n        </Button>\n        <Redirect to=\"/users/view\">Cancel</Redirect>\n        </Row>\n      </Form>\n    );\n  }\n\nfunction LoginEdit({session}) {\n  if(session) {\n    return <UserForm session={session}/>\n  }\n  else{\n    return <h1 className=\"mt-5 ml-5\">Please Login In To Edit</h1>\n  }\n}\n\nconst UpdateUserForm = connect(\n    ({session}) => ({session}))(LoginEdit);\n\nfunction UsersEdit() {\n  return (\n    <UpdateUserForm/>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersEdit);\n"]},"metadata":{},"sourceType":"module"}