{"ast":null,"code":"import store from './store';\n\nasync function api_get(path) {\n  let text = await fetch(\"http://localhost:4000/api/v1\" + path, {});\n  let resp = await text.json();\n  return resp.data;\n}\n\nasync function api_post(path, data) {\n  let opts = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  };\n  let text = await fetch(\"http://localhost:4000/api/v1\" + path, opts);\n  return await text.json();\n}\n\nexport function fetch_user(id) {\n  api_get(\"/users/\" + id).then(data => store.dispatch({\n    type: 'user/set',\n    data: data\n  }));\n}\nexport function create_user(user) {\n  return api_post(\"/users\", {\n    user\n  });\n}\nexport function load_defaults() {\n  fetch_users();\n}","map":{"version":3,"sources":["/media/psf/Home/Desktop/CS4550-FinalProject/web/src/api.js"],"names":["store","api_get","path","text","fetch","resp","json","data","api_post","opts","method","headers","body","JSON","stringify","fetch_user","id","then","dispatch","type","create_user","user","load_defaults","fetch_users"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,eAAeC,OAAf,CAAuBC,IAAvB,EAA6B;AAC3B,MAAIC,IAAI,GAAG,MAAMC,KAAK,CACpB,iCAAiCF,IADb,EACmB,EADnB,CAAtB;AAEA,MAAIG,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAjB;AACA,SAAOD,IAAI,CAACE,IAAZ;AACD;;AAED,eAAeC,QAAf,CAAwBN,IAAxB,EAA8BK,IAA9B,EAAoC;AAClC,MAAIE,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFA;AAKTC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AALG,GAAX;AAOA,MAAIJ,IAAI,GAAG,MAAMC,KAAK,CACpB,iCAAiCF,IADb,EACmBO,IADnB,CAAtB;AAEA,SAAO,MAAMN,IAAI,CAACG,IAAL,EAAb;AACD;;AAED,OAAO,SAASS,UAAT,CAAoBC,EAApB,EAAwB;AAC3Bf,EAAAA,OAAO,CAAC,YAAUe,EAAX,CAAP,CAAsBC,IAAtB,CAA4BV,IAAD,IAAUP,KAAK,CAACkB,QAAN,CAAe;AAChDC,IAAAA,IAAI,EAAE,UAD0C;AAEhDZ,IAAAA,IAAI,EAAEA;AAF0C,GAAf,CAArC;AAIH;AAED,OAAO,SAASa,WAAT,CAAqBC,IAArB,EAA2B;AAChC,SAAOb,QAAQ,CAAC,QAAD,EAAW;AAACa,IAAAA;AAAD,GAAX,CAAf;AACD;AAED,OAAO,SAASC,aAAT,GAAyB;AAC9BC,EAAAA,WAAW;AACZ","sourcesContent":["import store from './store';\n\nasync function api_get(path) {\n  let text = await fetch(\n    \"http://localhost:4000/api/v1\" + path, {});\n  let resp = await text.json();\n  return resp.data;\n}\n\nasync function api_post(path, data) {\n  let opts = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data),\n  };\n  let text = await fetch(\n    \"http://localhost:4000/api/v1\" + path, opts);\n  return await text.json();\n}\n\nexport function fetch_user(id) {\n    api_get(\"/users/\"+id).then((data) => store.dispatch({\n        type: 'user/set',\n        data: data,\n    }));\n}\n\nexport function create_user(user) {\n  return api_post(\"/users\", {user});\n}\n\nexport function load_defaults() {\n  fetch_users();\n}\n"]},"metadata":{},"sourceType":"module"}