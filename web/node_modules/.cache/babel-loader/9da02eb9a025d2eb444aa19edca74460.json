{"ast":null,"code":"var _jsxFileName = \"/media/psf/Home/Desktop/CS4550-FinalProject/web/src/User/Edit.js\",\n    _s2 = $RefreshSig$();\n\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_user, fetch_users, api_login, fetch_reason } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UsersEdit({\n  current_user\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\",\n    pass1: \"\",\n    pass2: \"\"\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['name', 'email', 'password', 'reason', 'photo']);\n    create_user(data).then(data => {\n      if (data.error) {\n        let action = {\n          type: \"error/set\",\n          data: data.error\n        };\n        store.dispatch(action);\n      } else {\n        fetch_users();\n        api_login(user['email'], user['password']);\n        history.push(fetch_reason(user[\"reason\"]));\n      }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    // This is for user experience only,\n    // validation logic goes on the server.\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  function UUF({\n    session,\n    user_form\n  }) {\n    _s();\n\n    let {\n      id\n    } = useParams();\n  }\n\n  _s(UUF, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n    return [useParams];\n  });\n\n  const LoginInRegister = connect(({\n    session,\n    user_form\n  }) => ({\n    session,\n    user_form\n  }))(UUF);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-5\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        onChange: ev => update(\"name\", ev),\n        value: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        onChange: ev => update(\"email\", ev),\n        value: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Reason For Using This Website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        onChange: ev => update(\"reason\", ev),\n        value: user.reason,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Cat Wellness\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Breeder/Adoption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Lost/Found Cat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Food Choices/Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Profile Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"file\",\n        onChange: updatePhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        onChange: ev => update(\"pass1\", ev),\n        value: user.pass1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.pass_msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        onChange: ev => update(\"pass2\", ev),\n        value: user.pass2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      className: \"h3 font-weight-bold\",\n      disabled: user.pass_msg !== \"\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UsersEdit, \"DNgHuLDTOXGy7UvrOG2la/3bfNc=\", false, function () {\n  return [useHistory];\n});\n\n_c = UsersEdit;\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersEdit);\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersEdit\");","map":{"version":3,"sources":["/media/psf/Home/Desktop/CS4550-FinalProject/web/src/User/Edit.js"],"names":["Row","Col","Form","Button","connect","useState","useHistory","useParams","pick","store","create_user","fetch_users","api_login","fetch_reason","UsersEdit","current_user","history","user","setUser","name","pass1","pass2","onSubmit","ev","preventDefault","data","then","error","action","type","dispatch","push","check_pass","p1","p2","length","update","field","u1","Object","assign","target","value","password","pass_msg","updatePhoto","files","UUF","session","user_form","id","LoginInRegister","email","reason","state2props","_state"],"mappings":"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","sourcesContent":["import { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_user, fetch_users, api_login, fetch_reason } from '../api';\n\nfunction UsersEdit({current_user}) {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\", pass1: \"\", pass2: \"\",\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['name', 'email', 'password', 'reason', 'photo']);\n    create_user(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_users();\n          api_login(user['email'], user['password'])\n          history.push(fetch_reason(user[\"reason\"]))\n        }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    // This is for user experience only,\n    // validation logic goes on the server.\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  function UUF({session, user_form}) {\n    let {id} = useParams()\n  }\n  const LoginInRegister = connect(\n    ({session, user_form}) => ({session, user_form}))(UUF);\n\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Form.Group>\n        <h1 className=\"mt-5\">Edit Profile</h1>\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"name\", ev)}\n          value={user.name} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Email</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"email\", ev)}\n          value={user.email} />\n      </Form.Group>\n\n      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n        <Form.Label>Reason For Using This Website</Form.Label>\n        <Form.Control as=\"select\" onChange={(ev) => update(\"reason\", ev)} value={user.reason}>\n          <option></option>\n          <option>Cat Wellness</option>\n          <option>Breeder/Adoption</option>\n          <option>Lost/Found Cat</option>\n          <option>Food Choices/Recommendations</option>\n          <option>Other</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group>\n            <Form.Label>Profile Picture</Form.Label>\n            <Form.Control type=\"file\" onChange={updatePhoto} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass1\", ev)}\n          value={user.pass1} />\n        <p>{user.pass_msg}</p>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass2\", ev)}\n          value={user.pass2} />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold\"\n              disabled={user.pass_msg !== \"\"}>\n        Save\n      </Button>\n    </Form>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersEdit);\n"]},"metadata":{},"sourceType":"module"}