[{"/media/psf/Home/Desktop/CS4550-FinalProject/web/src/index.js":"1","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/App.js":"2","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/reportWebVitals.js":"3","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Nav.js":"4","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/User/View.js":"5","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/api.js":"6","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/store.js":"7","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/User/New.js":"8","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/User/Edit.js":"9","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Wellness/List.js":"10","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Wellness/New.js":"11","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Wellness/View.js":"12","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Wellness/Edit.js":"13","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Index/HomePage.js":"14","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Forum/List.js":"15","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Forum/View.js":"16","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Forum/New.js":"17","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Forum/Edit.js":"18","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Food/View.js":"19","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Food/List.js":"20","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Food/New.js":"21","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Food/Edit.js":"22","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Adoption/List.js":"23"},{"size":766,"mtime":1617739210000,"results":"24","hashOfConfig":"25"},{"size":2213,"mtime":1618122674000,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1617701145000,"results":"27","hashOfConfig":"25"},{"size":3766,"mtime":1618122535000,"results":"28","hashOfConfig":"25"},{"size":1771,"mtime":1617941478000,"results":"29","hashOfConfig":"25"},{"size":16157,"mtime":1618125601000,"results":"30","hashOfConfig":"25"},{"size":3929,"mtime":1618124077000,"results":"31","hashOfConfig":"25"},{"size":3490,"mtime":1618021305000,"results":"32","hashOfConfig":"25"},{"size":4322,"mtime":1618045378000,"results":"33","hashOfConfig":"25"},{"size":4422,"mtime":1618081698000,"results":"34","hashOfConfig":"25"},{"size":2866,"mtime":1618046572000,"results":"35","hashOfConfig":"25"},{"size":5373,"mtime":1618081737000,"results":"36","hashOfConfig":"25"},{"size":3382,"mtime":1618046635000,"results":"37","hashOfConfig":"25"},{"size":2700,"mtime":1618110817000,"results":"38","hashOfConfig":"25"},{"size":2723,"mtime":1618109634000,"results":"39","hashOfConfig":"25"},{"size":5341,"mtime":1618081744000,"results":"40","hashOfConfig":"25"},{"size":2837,"mtime":1618081156000,"results":"41","hashOfConfig":"25"},{"size":3245,"mtime":1618080724000,"results":"42","hashOfConfig":"25"},{"size":5226,"mtime":1618110243000,"results":"43","hashOfConfig":"25"},{"size":1480,"mtime":1618101406000,"results":"44","hashOfConfig":"25"},{"size":3008,"mtime":1618100852000,"results":"45","hashOfConfig":"25"},{"size":3528,"mtime":1618109866000,"results":"46","hashOfConfig":"25"},{"size":2826,"mtime":1618125610000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"jbd87",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"50"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"50"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"/media/psf/Home/Desktop/CS4550-FinalProject/web/src/index.js",[],["112","113"],"/media/psf/Home/Desktop/CS4550-FinalProject/web/src/App.js",[],"/media/psf/Home/Desktop/CS4550-FinalProject/web/src/reportWebVitals.js",[],"/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Nav.js",["114","115","116","117","118","119"],"import { Nav, Navbar, Row, Col, Form, Button ,Container, Alert } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { api_login, fetch_user } from './api';\nimport { useHistory } from 'react-router-dom';\n\nfunction photo_path(hash) {\n  return \"http://localhost:4000/photos/\" + hash;\n}\n\nfunction LoginForm() {\n  let history = useHistory();\n  const [email, setName] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n\n  function on_submit(ev) {\n    ev.preventDefault();\n    api_login(email, pass);\n  }\n\n  return (\n    <Form onSubmit={on_submit} inline>\n      <Row>\n        <Col>\n          <div className=\"h5 font-weight-bold text-dark\">Email:</div>\n          <Form.Control name=\"email\"\n                        type=\"text\"\n                        onChange={(ev) => setName(ev.target.value)}\n                        value={email}/>\n        </Col>\n      </Row>\n      <Row className=\"ml-2 my-2\">\n        <Col>\n          <div className=\"h5 font-weight-bold text-dark\">Password:</div>\n          <Form.Control name=\"password\"\n                        type=\"password\"\n                        onChange={(ev) => setPass(ev.target.value)}\n                        value={pass}/>\n          <Button className=\"h3 font-weight-bold ml-2 mr-2\" type=\"submit\">Logins </Button>\n        </Col>\n      </Row>\n      <div className=\"mt-4\">\n        <Redirect to=\"/users/new\">Register</Redirect>\n      </div>\n    </Form>\n  );\n}\n\nlet SessionInfo = connect()(({session, current_user,  dispatch}) => {\n  let history = useHistory();\n  function logout() {\n    dispatch({type: 'session/clear'});\n  }\n  let link = \"/users/view/\" + session.user_id\n  return (\n      <Row className=\"h4 ml-1 font-weight-bold\">\n        <img src={photo_path(session.photo_hash)} className=\"mr-2\" width=\"50px\" height=\"50px\"></img>\n        <div className=\"my-2\">{session.name}</div>\n        <Button className=\"btn-danger h3 ml-2 font-weight-bold\" onClick={logout}>Logout</Button>\n        <Redirect to={link}>View Profile</Redirect>\n      </Row>\n  );\n});\n\nfunction LOI({session, current_user}) {\n  if (session) {\n    return <SessionInfo session={session} current_user={current_user} />;\n  }\n  else {\n    return <LoginForm />;\n  }\n}\n\nconst LoginOrInfo = connect(\n  ({session, current_user}) => ({session, current_user}))(LOI);\n\nfunction Link({to, children}) {\n  return (\n    <Nav.Item>\n      <NavLink to={to} exact\n        className=\"nav-link font-weight-bold text-dark\"\n        activeClassName=\"active\">\n        {children}\n      </NavLink>\n    </Nav.Item>\n  );\n}\n\nfunction Redirect({to, children}) {\n  return (\n    <Nav.Item>\n      <NavLink to={to} exact\n        className=\"btn font-weight-bold text-primary ml-2\"\n        activeClassName=\"active\">\n        {children}\n      </NavLink>\n    </Nav.Item>\n  );\n}\n\nfunction AppNav({error}) {\n  let error_row = null;\n\n  if (error) {\n    error_row = (\n      <Row>\n        <Col>\n          <Alert variant=\"danger\">{error}</Alert>\n        </Col>\n      </Row>\n    );\n  }\n  function Register({session}) {\n      return(\n        <Row>\n          <Nav variant=\"tabs\" defaultActiveKey=\"/users/new\">\n            <Link to=\"/\">HomePage</Link>\n            <Link to=\"/wellness/list\">Wellness</Link>\n            <Link to=\"/food/list\">Food Choices</Link>\n            <Link to=\"/adopt\">Adopt</Link>\n            <Link to=\"/forum/list\">Forum</Link>\n          </Nav>\n      </Row>\n    )\n  }\n\n  const LoginInRegister = connect(\n    ({session}) => ({session}))(Register);\n\n  return(\n    <div>\n      <h1 className=\"font-weight-bold text-info display-2\">Kitten Lover</h1>\n      <LoginOrInfo />\n      { error_row }\n      <LoginInRegister/>\n    </div>\n  );\n}\nexport default connect(({error}) => ({error}))(AppNav);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/User/View.js",["120","121","122","123","124","125","126","127","128","129","130","131"],"import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { api_login, fetch_reason, fetch_user } from '../api';\n\nfunction UsersView() {\n  let history = useHistory();\n\n  function photo_path(hash) {\n    return \"http://localhost:4000/photos/\" + hash;\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn btn-lg font-weight-bold text-light btn-info\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n  function View({session}) {\n        return(\n        <Row>\n          <Col>\n            <h1 className=\"mt-3 my-3\">My Profile</h1>\n            <Redirect to=\"/users/edit\">Edit Profile</Redirect>\n            <img className=\"my-4\" src={photo_path(session.photo_hash)} width=\"200px\" height=\"200px\"></img>\n            <h3>Name: {session.name}</h3>\n            <h3>Email: {session.email}</h3>\n            <h3>Reason For Using This Website: {session.reason}</h3>\n          </Col>\n        </Row>\n      )\n  }\n\n  function OtherUserView({current_user}) {\n    return <h1></h1>\n  }\n\n  function LoginView({session, current_user}) {\n    if (session) {\n      return <View session={session}/>\n    }\n    else {\n      return <OtherUserView current_user={current_user}/>\n    }\n  }\n  \n  const LoginInRegister = connect(\n    ({session, current_user}) => ({session, current_user}))(LoginView);\n\n  return (\n    <div>\n      <LoginInRegister />\n    </div>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersView);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/api.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],"/media/psf/Home/Desktop/CS4550-FinalProject/web/src/store.js",[],"/media/psf/Home/Desktop/CS4550-FinalProject/web/src/User/New.js",["154","155"],"import { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_user, fetch_users, api_login, fetch_reason } from '../api';\n\nfunction UsersNew() {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\", pass1: \"\", pass2: \"\",\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['name', 'email', 'password', 'reason', 'photo']);\n    create_user(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_users();\n          api_login(user['email'], user['password'])\n          history.push(fetch_reason(user[\"reason\"]))\n        }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    // This is for user experience only,\n    // validation logic goes on the server.\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Form.Group>\n        <h1 className=\"mt-5\">Register Acount</h1>\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"name\", ev)}\n          value={user.name} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Email</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"email\", ev)}\n          value={user.email} />\n      </Form.Group>\n\n      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n        <Form.Label>Reason For Using This Website</Form.Label>\n        <Form.Control as=\"select\" onChange={(ev) => update(\"reason\", ev)} value={user.reason}>\n          <option></option>\n          <option>Cat Wellness</option>\n          <option>Breeder/Adoption</option>\n          <option>Lost/Found Cat</option>\n          <option>Food Choices/Recommendations</option>\n          <option>Other</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group>\n            <Form.Label>Profile Picture</Form.Label>\n            <Form.Control type=\"file\" onChange={updatePhoto} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass1\", ev)}\n          value={user.pass1} />\n        <p>{user.pass_msg}</p>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass2\", ev)}\n          value={user.pass2} />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold\"\n              disabled={user.pass_msg !== \"\"}>\n        Save\n      </Button>\n    </Form>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersNew);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/User/Edit.js",["156","157","158"],"import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_user, fetch_users, api_login, fetch_reason } from '../api';\n\nfunction UserForm({session}) {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    id: session.user_id, name: session.name, email: session.email,\n    reason: session.reason, pass1: \"\", pass2: \"\",\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['health_voted', 'id', 'name', 'email', 'password', 'reason', 'photo']);\n    update_user(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_users();\n          api_login(user['email'], user['password'])\n          history.push(\"/users/view\")\n        }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn font-weight-bold text-light btn-danger\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Edit Profile</h1>\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"name\", ev)}\n            value={user.name} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"email\", ev)}\n            value={user.email} />\n        </Form.Group>\n\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label>Reason For Using This Website</Form.Label>\n          <Form.Control as=\"select\" onChange={(ev) => update(\"reason\", ev)} value={user.reason}>\n            <option></option>\n            <option>Cat Wellness</option>\n            <option>Breeder/Adoption</option>\n            <option>Lost/Found Cat</option>\n            <option>Food Choices/Recommendations</option>\n            <option>Other</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n              <Form.Label>Profile Picture</Form.Label>\n              <Form.Control type=\"file\" onChange={updatePhoto} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>New Password</Form.Label>\n          <Form.Control type=\"password\"\n            onChange={\n              (ev) => update(\"pass1\", ev)}\n            value={user.pass1} />\n          <p>{user.pass_msg}</p>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control type=\"password\"\n            onChange={\n              (ev) => update(\"pass2\", ev)}\n            value={user.pass2} />\n        </Form.Group>\n        <Row className=\"ml-1\">\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\"\n                disabled={user.pass_msg !== \"\"}>\n          Save\n        </Button>\n        <Redirect to=\"/users/view\">Cancel</Redirect>\n        </Row>\n      </Form>\n    );\n  }\n\nfunction LoginEdit({session}) {\n  if(session) {\n    return <UserForm session={session}/>\n  }\n  else{\n    return <h1 className=\"mt-5 ml-5\">Please Login In To Edit</h1>\n  }\n}\n\nconst UpdateUserForm = connect(\n    ({session}) => ({session}))(LoginEdit);\n\nfunction UsersEdit() {\n  return (\n    <UpdateUserForm/>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersEdit);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Wellness/List.js",["159","160","161","162","163","164","165","166","167"],"import { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { Link, useHistory, NavLink, useLocation } from 'react-router-dom';\nimport { fetch_user, fetch_single_wellness, fetch_wellness, search_wellness } from '../api';\nimport Carousel from 'react-bootstrap/Carousel';\n\nfunction WellnessList({wellness, session}) {\n  let history = useHistory()\n  let location = useLocation();\n\n  function photo_path(hash) {\n    return \"http://localhost:4000/photos/\" + hash;\n  }\n\n  function AddNewWellnessButton() {\n    if (session) {\n      return(\n        <Redirect to=\"/wellness/new\" className=\"btn btn-lg font-weight-bold btn-info ml-3\">\n          New Wellness Post\n        </Redirect>\n      )\n    }\n    else {\n      return(\n        <br></br>\n      )\n    }\n  }\n\n  function ListingArticles({session, current_wellness}) {\n    let rows = wellness.map((health) => {\n      let body = health.body.substring(0, 280) + \" ...\"\n      const link = \"/wellness/view/\"+ health.id\n      let score = health.votes.length\n      return (\n        <Card fluid className=\"my-4\">\n          <Card.Header>{score} 💗</Card.Header>\n          <Card.Body>\n            <h1 className=\"\">{health.title}</h1>\n            <p>{body}</p>\n            <Link to={link}  className=\"text-danger\">Read More</Link>\n          </Card.Body>\n        </Card>\n    )});\n\n    return(\n      <div className=\"ml-3\">\n        {rows}\n      </div>\n    )\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn btn-lg font-weight-bold text-light btn-info\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n  function ImageGallery() {\n    let query = wellness\n    if (wellness.length >= 5) {\n      query = Object.entries(wellness).slice(0,5).map(entry => entry[1]);\n    }\n    let rows = query.map((health) => {\n      let body = health.body.substring(0, 280) + \" ...\"\n      let link = \"/wellness/view/\" + health.id;\n      return (\n        <Carousel.Item>\n          <img src={photo_path(health.photo_hash)} width=\"100%\" height=\"600px\"></img>\n          <Carousel.Caption>\n            <Link to={link}  className=\"text-info h3\">Direct To Article: {health.title}</Link>\n          </Carousel.Caption>\n        </Carousel.Item>\n    )});\n    return(\n      <Carousel className=\"my-3\">\n        {rows}\n      </Carousel>\n    )\n  }\n\n  const UpdatingArticles = connect(\n      ({session, current_wellness}) => ({session, current_wellness}))(ListingArticles);\n\n\n  const [search, setSearch] = useState(\"\");\n\n  function update(ev) {\n    setSearch(ev.target.value);\n  }\n\n  function searchQuery(ev){\n    ev.preventDefault();\n    search_wellness(search);\n  }\n\n  return (\n    <div>\n      <p className=\"display-1\">Wellness</p>\n      <p className=\"h4\">Regular wellness care is of the utmost importance for any pet,\n      but trips to the veterinarian often end up on the back burner when\n      it comes to our cats. This pro-cats-tination could be due to a general\n      dislike of car rides, carriers, handling without their consent,\n      or because cats are experts at masking symptoms,\n      hiding pain and making us believe that there is nothing wrong.\n      Because of this, many felines don’t get the care they need until their\n      health problems become serious.\n      Preventing illness and disease in our feline companions is easier,\n      healthier, and cheaper than attempting to treat a problem once it arises.\n      You will find articles below to be helpful, and you can also make\n      helpful posts to help others. <br></br><a href='http://www.catcareofvinings.com/blog/wellness-care-for-cats/' target=\"_blank\">Referenced from Cat Care</a></p>\n      <ImageGallery />\n      <Row>\n        <Col>\n          <AddNewWellnessButton />\n        </Col>\n      </Row>\n      <Form onSubmit={searchQuery} inline>\n        <Form.Group className=\"mt-3 ml-3\">\n          <Form.Control type=\"text\" placeholder=\"Search..\" onChange={(ev) => update(ev)} value={search} />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3 ml-1 mt-4\">Search</Button>\n      </Form>\n      <UpdatingArticles />\n    </div>\n  );\n}\n\nfunction state2props({wellness, session}) {\n  return { wellness, session};\n}\n\nexport default connect(state2props)(WellnessList);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Wellness/New.js",["168","169"],"import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_wellness , fetch_wellness, fetch_users } from '../api';\n\nfunction UserForm({session}) {\n  let history = useHistory();\n  const [post, setPost] = useState({\n    user_id: session.user_id, body: \"\", title: \"\"\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(post, ['user_id', 'title', 'body', 'photo']);\n    create_wellness(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_wellness()\n          fetch_users()\n          history.push(\"/Wellness/list\")\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, post);\n    u1[field] = ev.target.value;\n    setPost(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, post);\n    p1[\"photo\"] = ev.target.files[0];\n    setPost(p1);\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn font-weight-bold text-light btn-danger\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Create Wellness Post</h1>\n          <Form.Label>Post Title</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"title\", ev)}\n            value={post.title} />\n        </Form.Group>\n        <Form.Group>\n        <Form.Label>Post Body</Form.Label>\n        <Form.Control as=\"textarea\"\n                      onChange={\n                        (ev) => update(\"body\", ev)}\n          value={post.body} />\n      </Form.Group>\n      <Form.Group>\n            <Form.Label>Profile Picture</Form.Label>\n            <Form.Control type=\"file\" onChange={updatePhoto} />\n      </Form.Group>\n        <Row className=\"ml-1\">\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n          Save\n        </Button>\n        <Redirect to=\"/wellness/list\">Cancel</Redirect>\n        </Row>\n      </Form>\n    );\n  }\n\nfunction LoginEdit({session}) {\n  if(session) {\n    return <UserForm session={session}/>\n  }\n  else{\n    return <h1 className=\"mt-5 ml-5\">Please Login In To Edit</h1>\n  }\n}\n\nconst UpdateUserForm = connect(\n    ({session}) => ({session}))(LoginEdit);\n\nfunction WellnessNew() {\n  return (\n    <UpdateUserForm/>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(WellnessNew);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Wellness/View.js",["170","171","172","173","174","175","176","177","178","179","180","181","182"],"import { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link, useHistory, useLocation, NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { delete_comment, create_comment, fetch_comments, delete_wellness, fetch_score, fetch_wellness,\n  fetch_single_wellness, fetch_user, update_wellness_vote } from '../api';\nimport store from '../store';\n\nfunction WellnessView({session, wellness_form, user_form, score, comments}) {\n  let location = useLocation()\n  let history = useHistory()\n  let wellness_id = location.pathname.split(\"/wellness/view/\")[1]\n\n  if(typeof(wellness_form.id) == \"undefined\" || wellness_form.id != wellness_id) {\n    fetch_single_wellness(wellness_id)\n    fetch_score(wellness_id)\n    fetch_comments(wellness_id)\n  }\n\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != wellness_form.user_id){\n    fetch_user(wellness_form.user_id)\n  }\n\n  function photo_path(hash) {\n    return \"http://localhost:4000/photos/\" + hash;\n  }\n\n  function deleteWellness(){\n    delete_wellness(wellness_id)\n    fetch_wellness()\n    history.push(\"/wellness/list\")\n  }\n\n  function AddButtons() {\n    if(session && session.user_id == user_form.id) {\n      let link = \"/wellness/edit/\" + wellness_form.id\n      return(\n        <div>\n        <Link to={link} className=\"btn mt-2 btn-lg btn-info text-light mr-2 font-weight-bold\">Edit</Link>\n        <Button onClick={deleteWellness} className=\"btn mt-2 btn-lg btn-danger text-light mr-2 font-weight-bold\">Delete</Button>\n        <Link to=\"/wellness/list\" className=\"btn btn-lg mt-2 btn-info text-light  font-weight-bold\">Back</Link>\n        </div>\n      )\n    }\n    else {\n      return(\n        <Link to=\"/wellness/list\" className=\"btn btn-lg mt-2 btn-danger text-light  font-weight-bold\">Back</Link>\n      )\n    }\n  }\n\n  let link = photo_path(wellness_form.photo_hash)\n\n  function updateVotes() {\n    if(wellness_form.votes.includes(session.user_id)) {\n      update_wellness_vote(wellness_form, session.user_id, \"decrease\")\n      fetch_wellness()\n      fetch_single_wellness(wellness_form.id)\n      fetch_score(wellness_form.id)\n    }\n    else {\n      update_wellness_vote(wellness_form, session.user_id, \"increase\")\n      fetch_wellness()\n      fetch_single_wellness(wellness_form.id)\n      fetch_score(wellness_form.id)\n    }\n  }\n\n  function photo_path(hash) {\n    return \"http://localhost:4000/photos/\" + hash;\n  }\n\n  function EditCommentButton({comment}) {\n    function deleteComment() {\n      delete_comment(comment.id, wellness_id)\n    }\n\n    if (session && comment.user_id == session.user_id) {\n      return <Button onClick={deleteComment} className=\"btn mt-2 btn-danger text-light font-weight-bold\">Delete</Button>\n    }\n    else {\n      return <div></div>\n    }\n  }\n\n  function ListingComments() {\n    let rows = comments.map((comment) => {\n      console.log(comment)\n      return (\n        <Card fluid className=\"my-4\">\n          <Card.Body>\n            <img src={photo_path(comment.user.photo_hash)} width=\"50px\" height=\"50px\"></img>\n            <h4 className=\"text-secondary\">{comment.user.name}</h4>\n            <h3 className=\"\">{comment.body}</h3>\n            <EditCommentButton comment={comment}/>\n          </Card.Body>\n        </Card>\n      )})\n      return <div>{rows}</div>\n    }\n\n    const [com, setCom] = useState(\"\");\n\n    function onSubmit(ev) {\n      create_comment(com, session.user_id, wellness_id).then((data) => {\n          if(data.error) {\n            let action={\n              type:\"error/set\",\n              data: data.error\n            }\n            store.dispatch(action)\n          }\n          else {\n            setCom(\"\")\n            fetch_comments(wellness_id)\n            fetch_wellness()\n          }\n      });\n    }\n\n    if (session) {\n      return(\n        <div>\n        <AddButtons/>\n        <h1 className=\"display-3\">{wellness_form.title}</h1>\n        <h1 className=\"h4 text-secondary\">Posted by: {user_form.name}</h1>\n        <img src={link}></img>\n        <p className=\"h3 mt-2\">{wellness_form.body}</p>\n        <Button className=\"btn btn-lg btn-light text-danger\" onClick={updateVotes}>{score} 💗</Button>\n        <Form  onSubmit={onSubmit} className=\"my-3\">\n          <Form.Row>\n            <Col>\n              <img src={photo_path(session.photo_hash)} width=\"50px\" height=\"50px\"></img>\n            </Col>\n            <Col xs={9}>\n              <Form.Control type=\"text\" onChange={(ev) => setCom(ev.target.value)}\n                value={com} />\n            </Col>\n            <Col>\n              <Button onClick={(ev) => onSubmit(ev)} className=\"btn btn-info text-light font-weight-bold\">Submit</Button>\n            </Col>\n          </Form.Row>\n        </Form>\n        <ListingComments/>\n        </div>\n      )\n    }\n    else {\n      return(\n        <div>\n        <AddButtons/>\n        <h1 className=\"display-3\">{wellness_form.title}</h1>\n        <h1 className=\"h4 text-secondary\">Posted by: {user_form.name}</h1>\n        <img src={link}></img>\n        <p className=\"h3 mt-2\">{wellness_form.body}</p>\n        <h1>{score} 💗</h1>\n        <ListingComments/>\n        </div>\n      )\n    }\n  }\n\nfunction state2props({session, wellness_form, user_form, score, comments}) {\n  return {session, wellness_form, user_form, score, comments};\n}\n\nexport default connect(state2props)(WellnessView);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Wellness/Edit.js",["183","184","185","186"],"import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink, useLocation  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_wellness , fetch_wellness, fetch_user, fetch_single_wellness } from '../api';\n\nfunction WellnessEdit({user_form, session, wellness_form}) {\n  let location = useLocation()\n  let wellness_id = location.pathname.split(\"/wellness/edit/\")[1]\n  if(typeof(wellness_form.id) == \"undefined\" || wellness_form.id != wellness_id) {\n    fetch_single_wellness(wellness_id)\n  }\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != wellness_form.user_id) {\n    fetch_user(wellness_form.user_id)\n  }\n\n  let history = useHistory();\n  const [post, setPost] = useState({\n    user_id: user_form.id, body: wellness_form.body, title: wellness_form.title, id: wellness_form.id,\n    votes: wellness_form.votes\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(post, ['user_id', 'title', 'body', 'photo', 'id']);\n    update_wellness(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_wellness()\n          fetch_single_wellness(wellness_form.id)\n          let link = \"/wellness/view/\" + wellness_form.id\n          history.push(link)\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, post);\n    u1[field] = ev.target.value;\n    setPost(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, post);\n    p1[\"photo\"] = ev.target.files[0];\n    setPost(p1);\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn font-weight-bold text-light btn-danger\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n  let link = \"/wellness/view/\" + wellness_form.id\n\n  if(session) {\n    return(\n        <Form onSubmit={onSubmit}>\n          <Form.Group>\n            <h1 className=\"mt-5\">Edit Wellness Post</h1>\n            <Form.Label>Post Title</Form.Label>\n            <Form.Control type=\"text\"\n                          onChange={\n                            (ev) => update(\"title\", ev)}\n              value={post.title} />\n          </Form.Group>\n          <Form.Group>\n          <Form.Label>Post Body</Form.Label>\n          <Form.Control as=\"textarea\"\n                        onChange={\n                          (ev) => update(\"body\", ev)}\n            value={post.body} />\n        </Form.Group>\n        <Form.Group>\n              <Form.Label>Profile Picture</Form.Label>\n              <Form.Control type=\"file\" onChange={updatePhoto} />\n        </Form.Group>\n          <Row className=\"ml-1\">\n          <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n            Save\n          </Button>\n          <Redirect to={link}>Cancel</Redirect>\n          </Row>\n        </Form>\n      );\n  }\n  else{\n    return <h1 className=\"mt-5 ml-5\">Please Login In To Edit</h1>\n  }\n}\n\nfunction state2props({user_form, session, wellness_form}) {\n  return {user_form, session, wellness_form};\n}\n\nexport default connect(state2props)(WellnessEdit);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Index/HomePage.js",["187","188","189","190","191","192","193","194","195","196","197","198"],"import { Card, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { Link, useHistory, NavLink } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { api_login, fetch_reason, fetch_user } from '../api';\n\nfunction HomePage({wellness, forums, foods}) {\n  function ShowingWellness() {\n    if (wellness.length > 3) {\n      wellness = wellness.slice(0, 3)\n    }\n    let rows = wellness.map((health) => {\n      let body = health.body.substring(0, 100) + \" ...\"\n      const link = \"/wellness/view/\"+ health.id\n      let score = health.votes.length\n      return (\n        <Card fluid>\n          <Card.Header>{health.title}</Card.Header>\n          <Card.Body>\n            <p>{body}</p>\n            <Link to={link}  className=\"text-danger\">Read More</Link>\n          </Card.Body>\n        </Card>\n    )});\n    return <div>{rows}</div>\n  }\n\n  function ShowingForum() {\n    if (forums.length > 3) {\n      forums = forums.slice(0, 3)\n    }\n    let rows = forums.map((forum) => {\n      let body = forum.body.substring(0, 100) + \" ...\"\n      const link = \"/forum/view/\"+ forum.id\n      let score = forum.votes.length\n      return (\n        <Card fluid>\n          <Card.Header>{forum.title}</Card.Header>\n          <Card.Body>\n            <p>{body}</p>\n            <Link to={link}  className=\"text-danger\">Read More</Link>\n          </Card.Body>\n        </Card>\n    )});\n    return <div>{rows}</div>\n  }\n\n  function photo_path(hash) {\n    return \"http://localhost:4000/photos/\" + hash;\n  }\n\n  function ShowingFood() {\n    if (foods.length > 3) {\n      foods = foods.slice(0, 3)\n    }\n    let rows = foods.map((food) => {\n      const link = \"/food/view/\"+ food.id\n      return (\n        <Card fluid>\n          <Card.Body>\n            <p>{food.brand}</p>\n            <Link to={link}  className=\"text-danger\">Read More</Link>\n          </Card.Body>\n        </Card>\n    )});\n    return <div>{rows}</div>\n  }\n  return (\n    <div>\n      <h1 className=\"mt-2 display-2\">Kitten Lover</h1>\n      <p className=\"h4\">KittenLover is dedicated to provide support and a communication platform\n      for all kitten lovers.</p>\n      <div className=\"border\">\n        <h1 className=\"ml-2\">Wellness</h1>\n        <ShowingWellness />\n      </div>\n      <div className=\"border mt-5\">\n        <h1 className=\"ml-2\">Forum</h1>\n        <ShowingForum />\n      </div>\n      <div className=\"border mt-5\">\n        <h1 className=\"ml-2\">Food Choices</h1>\n        <ShowingFood />\n      </div>\n    </div>\n  );\n}\n\nfunction state2props({wellness, forums, foods}) {\n  return {wellness, forums,foods};\n}\n\nexport default connect(state2props)(HomePage);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Forum/List.js",["199","200","201","202","203","204","205","206","207","208","209"],"import { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { Link, useHistory, NavLink, useLocation } from 'react-router-dom';\nimport { fetch_user, fetch_forum, fetch_forums } from '../api';\nimport Carousel from 'react-bootstrap/Carousel';\n\nfunction ForumList ({forums, session}) {\n  let history = useHistory()\n  let location = useLocation();\n\n  function photo_path(hash) {\n    return \"http://localhost:4000/photos/\" + hash;\n  }\n\n  function AddNewForumButton() {\n    if (session) {\n      return(\n        <Redirect to=\"/forum/new\" className=\"btn btn-lg font-weight-bold btn-info ml-3\">\n          New Forum\n        </Redirect>\n      )\n    }\n    else {\n      return(\n        <br></br>\n      )\n    }\n  }\n\n  function ListingArticles() {\n    let rows = forums.map((health) => {\n      let body = health.body.substring(0, 280) + \" ...\"\n      const link = \"/forum/view/\"+ health.id\n      let score = health.votes.length\n      return (\n        <Card fluid className=\"my-4\">\n          <Card.Header>{score} 💗</Card.Header>\n          <Card.Body>\n            <h1 className=\"\">{health.title}</h1>\n            <p>{body}</p>\n            <Link to={link}  className=\"text-danger\">Read More</Link>\n          </Card.Body>\n        </Card>\n    )});\n\n    return(\n      <div className=\"ml-3\">\n        {rows}\n      </div>\n    )\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn btn-lg font-weight-bold text-light btn-info\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n  function ImageGallery() {\n    let query = forums\n    if (forums.length >= 5) {\n      query = Object.entries(forums).slice(0,5).map(entry => entry[1]);\n    }\n    let rows = query.map((health) => {\n      let body = health.body.substring(0, 280) + \" ...\"\n      let link = \"/forum/view/\" + health.id;\n      return (\n        <Carousel.Item>\n          <img src={photo_path(health.photo_hash)} width=\"100%\" height=\"600px\"></img>\n          <Carousel.Caption>\n            <Link to={link}  className=\"text-info h3\">Direct To Article: {health.title}</Link>\n          </Carousel.Caption>\n        </Carousel.Item>\n    )});\n    return(\n      <Carousel className=\"my-3\">\n        {rows}\n      </Carousel>\n    )\n  }\n\n  return (\n    <div>\n      <p className=\"display-1\">Forum</p>\n      <ImageGallery />\n      <Row>\n        <Col>\n          <AddNewForumButton />\n        </Col>\n      </Row>\n      <ListingArticles />\n    </div>\n  );\n}\n\nfunction state2props({forums, session}) {\n  return { forums, session};\n}\n\nexport default connect(state2props)(ForumList);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Forum/View.js",["210","211","212","213","214","215","216","217","218","219","220","221","222"],"import { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link, useHistory, useLocation, NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { delete_forumcomment, create_forumcomment, fetch_forumcomments, delete_forum, fetch_forum_score, fetch_forums,\n  fetch_forum, fetch_user, update_forum_vote } from '../api';\nimport store from '../store';\n\nfunction ForumView({session, forum_form, user_form, forum_score, forumcomments}) {\n  let location = useLocation()\n  let history = useHistory()\n  let forum_id = location.pathname.split(\"/forum/view/\")[1]\n\n  if(typeof(forum_form.id) == \"undefined\" || forum_form.id != forum_id) {\n    fetch_forums()\n    fetch_forum(forum_id)\n    fetch_forum_score(forum_id)\n    fetch_forumcomments(forum_id)\n  }\n\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != forum_form.user_id){\n    fetch_forums()\n    fetch_user(forum_form.user_id)\n  }\n\n  function photo_path(hash) {\n    return \"http://localhost:4000/photos/\" + hash;\n  }\n\n  function deleteForum(){\n    delete_forum(forum_id)\n    fetch_forums()\n    history.push(\"/forum/list\")\n  }\n\n  function AddButtons() {\n    if(session && session.user_id == user_form.id) {\n      let link = \"/forum/edit/\" + forum_form.id\n      return(\n        <div>\n        <Link to={link} className=\"btn mt-2 btn-lg btn-info text-light mr-2 font-weight-bold\">Edit</Link>\n        <Button onClick={deleteForum} className=\"btn mt-2 btn-lg btn-danger text-light mr-2 font-weight-bold\">Delete</Button>\n        <Link to=\"/forum/list\" className=\"btn btn-lg mt-2 btn-info text-light  font-weight-bold\">Back</Link>\n        </div>\n      )\n    }\n    else {\n      return(\n        <Link to=\"/forum/list\" className=\"btn btn-lg mt-2 btn-danger text-light  font-weight-bold\">Back</Link>\n      )\n    }\n  }\n\n  let link = photo_path(forum_form.photo_hash)\n\n  function updateVotes() {\n    if(forum_form.votes.includes(session.user_id)) {\n      update_forum_vote(forum_form, session.user_id, \"decrease\")\n      fetch_forums()\n      fetch_forum(forum_form.id)\n      fetch_forum_score(forum_form.id)\n    }\n    else {\n      update_forum_vote(forum_form, session.user_id, \"increase\")\n      fetch_forums()\n      fetch_forum(forum_form.id)\n      fetch_forum_score(forum_form.id)\n    }\n  }\n\n  function photo_path(hash) {\n    return \"http://localhost:4000/photos/\" + hash;\n  }\n\n  function EditCommentButton({comment}) {\n    function deleteComment() {\n      delete_forumcomment(comment.id, forum_id)\n    }\n\n    if (session && comment.user_id == session.user_id) {\n      return <Button onClick={deleteComment} className=\"btn mt-2 btn-danger text-light font-weight-bold\">Delete</Button>\n    }\n    else {\n      return <div></div>\n    }\n  }\n\n  function ListingComments() {\n    let rows = forumcomments.map((comment) => {\n      console.log(comment)\n      return (\n        <Card fluid className=\"my-4\">\n          <Card.Body>\n            <img src={photo_path(comment.user.photo_hash)} width=\"50px\" height=\"50px\"></img>\n            <h4 className=\"text-secondary\">{comment.user.name}</h4>\n            <h3 className=\"\">{comment.body}</h3>\n            <EditCommentButton comment={comment}/>\n          </Card.Body>\n        </Card>\n      )})\n      return <div>{rows}</div>\n    }\n\n    const [com, setCom] = useState(\"\");\n\n    function onSubmit(ev) {\n      create_forumcomment(com, session.user_id, forum_id).then((data) => {\n          if(data.error) {\n            let action={\n              type:\"error/set\",\n              data: data.error\n            }\n            store.dispatch(action)\n          }\n          else {\n            setCom(\"\")\n            fetch_forumcomments(forum_id)\n            fetch_forums()\n          }\n      });\n    }\n\n    if (session) {\n      return(\n        <div>\n        <AddButtons/>\n        <h1 className=\"display-3\">{forum_form.title}</h1>\n        <h1 className=\"h4 text-secondary\">Posted by: {user_form.name}</h1>\n        <img src={link}></img>\n        <p className=\"h3 mt-2\">{forum_form.body}</p>\n        <Button className=\"btn btn-lg btn-light text-danger\" onClick={updateVotes}>{forum_score} 💗</Button>\n        <Form  onSubmit={onSubmit} className=\"my-3\">\n          <Form.Row>\n            <Col>\n              <img src={photo_path(session.photo_hash)} width=\"50px\" height=\"50px\"></img>\n            </Col>\n            <Col xs={9}>\n              <Form.Control type=\"text\" onChange={(ev) => setCom(ev.target.value)}\n                value={com} />\n            </Col>\n            <Col>\n              <Button onClick={(ev) => onSubmit(ev)} className=\"btn btn-info text-light font-weight-bold\">Submit</Button>\n            </Col>\n          </Form.Row>\n        </Form>\n        <ListingComments/>\n        </div>\n      )\n    }\n    else {\n      return(\n        <div>\n        <AddButtons/>\n        <h1 className=\"display-3\">{forum_form.title}</h1>\n        <h1 className=\"h4 text-secondary\">Posted by: {user_form.name}</h1>\n        <img src={link}></img>\n        <p className=\"h3 mt-2\">{forum_form.body}</p>\n        <h1>{forum_score} 💗</h1>\n        <ListingComments/>\n        </div>\n      )\n    }\n  }\n\nfunction state2props({session, forum_form, user_form, forum_score, forumcomments}) {\n  return {session, forum_form, user_form, forum_score, forumcomments};\n}\n\nexport default connect(state2props)(ForumView);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Forum/New.js",["223","224"],"import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_forum , fetch_forums, fetch_users } from '../api';\n\nfunction UserForm({session}) {\n  let history = useHistory();\n  const [post, setPost] = useState({\n    user_id: session.user_id, body: \"\", title: \"\"\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(post, ['user_id', 'title', 'body', 'photo']);\n    create_forum(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_forums()\n          fetch_users()\n          history.push(\"/forum/list\")\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, post);\n    u1[field] = ev.target.value;\n    setPost(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, post);\n    p1[\"photo\"] = ev.target.files[0];\n    setPost(p1);\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn font-weight-bold text-light btn-danger\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Create Forum</h1>\n          <Form.Label>Post Title</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"title\", ev)}\n            value={post.title} />\n        </Form.Group>\n        <Form.Group>\n        <Form.Label>Forum Body</Form.Label>\n        <Form.Control as=\"textarea\"\n                      onChange={\n                        (ev) => update(\"body\", ev)}\n          value={post.body} />\n      </Form.Group>\n      <Form.Group>\n            <Form.Label>Profile Picture</Form.Label>\n            <Form.Control type=\"file\" onChange={updatePhoto} />\n      </Form.Group>\n        <Row className=\"ml-1\">\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n          Save\n        </Button>\n        <Redirect to=\"/forum/list\">Cancel</Redirect>\n        </Row>\n      </Form>\n    );\n  }\n\nfunction LoginEdit({session}) {\n  if(session) {\n    return <UserForm session={session}/>\n  }\n  else{\n    return <h1 className=\"mt-5 ml-5\">Please Login In To Edit</h1>\n  }\n}\n\nconst UpdateUserForm = connect(\n    ({session}) => ({session}))(LoginEdit);\n\nfunction ForumNew() {\n  return (\n    <UpdateUserForm/>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(ForumNew);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Forum/Edit.js",["225","226","227","228"],"import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink, useLocation  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_forum , fetch_forums, fetch_user, fetch_forum } from '../api';\n\nfunction ForumEdit({user_form, session, forum_form}) {\n  let location = useLocation()\n  let forum_id = location.pathname.split(\"/forum/edit/\")[1]\n  if(typeof(forum_form.id) == \"undefined\" || forum_form.id != forum_id) {\n    fetch_forum(forum_id)\n  }\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != forum_form.user_id) {\n    fetch_user(forum_form.user_id)\n  }\n\n  let history = useHistory();\n  const [post, setPost] = useState({\n    user_id: user_form.id, body: forum_form.body, title: forum_form.title, id: forum_form.id,\n    votes: forum_form.votes\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(post, ['user_id', 'title', 'body', 'photo', 'id']);\n    update_forum(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_forums()\n          fetch_forum(forum_form.id)\n          let link = \"/forum/view/\" + forum_form.id\n          history.push(link)\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, post);\n    u1[field] = ev.target.value;\n    setPost(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, post);\n    p1[\"photo\"] = ev.target.files[0];\n    setPost(p1);\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn font-weight-bold text-light btn-danger\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n  let link = \"/forum/view/\" + forum_form.id\n\n  if(session) {\n    return(\n        <Form onSubmit={onSubmit}>\n          <Form.Group>\n            <h1 className=\"mt-5\">Edit Forum Post</h1>\n            <Form.Label>Post Title</Form.Label>\n            <Form.Control type=\"text\"\n                          onChange={(ev) => update(\"title\", ev)}\n              value={post.title} />\n          </Form.Group>\n          <Form.Group>\n          <Form.Label>Forum Text</Form.Label>\n          <Form.Control as=\"textarea\"\n                        onChange={\n                          (ev) => update(\"body\", ev)}\n            value={post.body} />\n        </Form.Group>\n        <Form.Group>\n              <Form.Label>Profile Picture</Form.Label>\n              <Form.Control type=\"file\" onChange={updatePhoto} />\n        </Form.Group>\n          <Row className=\"ml-1\">\n          <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n            Save\n          </Button>\n          <Redirect to={link}>Cancel</Redirect>\n          </Row>\n        </Form>\n      );\n  }\n  else{\n    return <h1 className=\"mt-5 ml-5\">Please Login In To Edit</h1>\n  }\n}\n\nfunction state2props({user_form, session, forum_form}) {\n  return {user_form, session, forum_form};\n}\n\nexport default connect(state2props)(ForumEdit);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Food/View.js",["229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246"],"import { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link, useHistory, useLocation, NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { fetch_food_like, fetch_food_dislike, delete_food, fetch_foods, fetch_food, fetch_user, update_food_vote} from '../api';\nimport store from '../store';\n\nfunction FoodView({session, food_form, user_form, food_like, food_dislike}) {\n  let location = useLocation()\n  let history = useHistory()\n  let food_id = location.pathname.split(\"/food/view/\")[1]\n\n  if(typeof(food_form.id) == \"undefined\" || food_form.id != food_id) {\n    fetch_foods()\n    fetch_food(food_id)\n    fetch_food_like(food_id)\n    fetch_food_dislike(food_id)\n  }\n\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != food_form.user_id){\n    fetch_foods()\n    fetch_user(food_form.user_id)\n  }\n\n  function photo_path(hash) {\n    return \"http://localhost:4000/photos/\" + hash;\n  }\n\n  function deleteForum(){\n    delete_food(food_id)\n    fetch_foods()\n    history.push(\"/food/list\")\n  }\n\n  function AddButtons() {\n    if(session && session.user_id == user_form.id) {\n      let link = \"/food/edit/\" + food_form.id\n      return(\n        <div>\n        <Link to={link} className=\"btn mt-2 btn-lg btn-info text-light mr-2 font-weight-bold\">Edit</Link>\n        <Button onClick={deleteForum} className=\"btn mt-2 btn-lg btn-danger text-light mr-2 font-weight-bold\">Delete</Button>\n        <Link to=\"/food/list\" className=\"btn btn-lg mt-2 btn-info text-light  font-weight-bold\">Back</Link>\n        </div>\n      )\n    }\n    else {\n      return(\n        <Link to=\"/food/list\" className=\"btn btn-lg mt-2 btn-danger text-light  font-weight-bold\">Back</Link>\n      )\n    }\n  }\n\n  let link = photo_path(food_form.photo_hash)\n\n  function updateVotes(field) {\n    if(field == \"like\" && food_form.like.includes(session.user_id)) {\n      update_food_vote(food_form, session.user_id, \"decreaselike\")\n      fetch_foods()\n      fetch_food(food_form.id)\n      fetch_food_like(food_form.id)\n      fetch_food_dislike(food_form.id)\n    }\n    else if(field == \"dislike\" && food_form.dislike.includes(session.user_id)) {\n      update_food_vote(food_form, session.user_id, \"decreasedislike\")\n      fetch_foods()\n      fetch_food(food_form.id)\n      fetch_food_like(food_form.id)\n      fetch_food_dislike(food_form.id)\n    }\n    else if(field == \"like\" && !food_form.like.includes(session.user_id))  {\n      update_food_vote(food_form, session.user_id, \"increaselike\")\n      fetch_foods()\n      fetch_food(food_form.id)\n      fetch_food_like(food_form.id)\n      fetch_food_dislike(food_form.id)\n    }\n    else {\n      update_food_vote(food_form, session.user_id, \"increasedislike\")\n      fetch_foods()\n      fetch_food(food_form.id)\n      fetch_food_like(food_form.id)\n      fetch_food_dislike(food_form.id)\n    }\n  }\n\n  function photo_path(hash) {\n    return \"http://localhost:4000/photos/\" + hash;\n  }\n\n    if (session) {\n      return(\n        <div>\n          <AddButtons/>\n          <h1 className=\"h4 text-secondary\">Posted by: {user_form.name}</h1>\n          <div class=\"row\">\n            <div class=\"col\">\n              <img src={link} width=\"500px\" height=\"400px\"></img>\n            </div>\n            <div class=\"col\">\n              <h1 className=\"display-3\">{food_form.brand}</h1>\n              <h1 className=\"h3\">Price</h1>\n              <p className=\"h5 mt-2 text-danger\">{food_form.price}$ per Lbs</p>\n              <h1 className=\"h3\">Type</h1>\n              <p className=\"h5 mt-2 text-secondary\">{food_form.type}</p>\n              <h1 className=\"h3\">Description</h1>\n              <p className=\"h5 mt-2 text-secondary\">{food_form.body}</p>\n              <Button className=\"btn btn-lg btn-light text-danger\" onClick={(field) => updateVotes(\"like\")}>{food_like} 💗 Like</Button>\n              <Button className=\"btn btn-lg btn-light text-danger\" onClick={(field) => updateVotes(\"dislike\")}>{food_dislike} 💔 Dislike</Button>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    else {\n      return(\n        <div>\n          <AddButtons/>\n          <h1 className=\"h4 text-secondary\">Posted by: {user_form.name}</h1>\n          <div class=\"row\">\n            <div class=\"col\">\n              <img src={link} width=\"500px\" height=\"400px\"></img>\n            </div>\n            <div class=\"col\">\n              <h1 className=\"display-3\">{food_form.brand}</h1>\n              <h1 className=\"h3\">Price</h1>\n              <p className=\"h5 mt-2 text-danger\">{food_form.price}$ per Lbs</p>\n              <h1 className=\"h3\">Type</h1>\n              <p className=\"h5 mt-2 text-secondary\">{food_form.type}</p>\n              <h1 className=\"h3\">Description</h1>\n              <p className=\"h5 mt-2 text-secondary\">{food_form.body}</p>\n              <h3 className=\"text-danger\">{food_like} 💗 Like</h3>\n              <h3 className=\"text-danger\">{food_dislike} 💔 Dislike</h3>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\nfunction state2props({session, food_form, user_form, food_like, food_dislike}) {\n  return {session, food_form, user_form, food_like, food_dislike};\n}\n\nexport default connect(state2props)(FoodView);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Food/List.js",["247","248","249","250","251","252"],"import { CardColumns, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link, useHistory, NavLink, useLocation } from 'react-router-dom';\nimport { fetch_foods} from '../api';\nimport Carousel from 'react-bootstrap/Carousel';\n\nfunction FoodList({session, foods}) {\n  function photo_path(hash) {\n    return \"http://localhost:4000/photos/\" + hash;\n  }\n  function ListingFoodArticles() {\n    let rows = foods.map((food) => {\n      const link = \"view/\" + food.id\n      const image_link = photo_path(food.photo_hash)\n      return (\n        <Card>\n          <Card.Img variant=\"top\" src={image_link} />\n          <Card.Body>\n            <Card.Title>{food.brand}</Card.Title>\n            <Card.Text>{food.body}</Card.Text>\n            <Link to={link}>Check For More Info</Link>\n          </Card.Body>\n        </Card>\n      )})\n      return <CardColumns>{rows}</CardColumns>\n    }\n\n    function AddNewWellnessButton() {\n      if (session) {\n        return(\n          <Link to=\"/food/new\" className=\"btn btn-lg font-weight-bold btn-info my-3\">\n            New Food Recommendation</Link>\n        )\n      }\n      else {\n        return(\n          <br></br>\n        )\n      }\n    }\n\n    return(\n      <div>\n        <p className=\"display-1\">Food Choices</p>\n        <AddNewWellnessButton />\n        <ListingFoodArticles/>\n      </div>);\n    }\n\nfunction state2props({session, foods}) {\n  return {session, foods};\n}\n\nexport default connect(state2props)(FoodList);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Food/New.js",["253","254","255"],"import { Row, Col, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_food , fetch_foods, fetch_users } from '../api';\n\nfunction FoodNew({session}) {\n  let history = useHistory();\n  const [food, setFood] = useState({\n    user_id: session.user_id, body: \"\", brand: \"\", price:0,\n    type: \"\"\n  })\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(food, ['user_id', 'body', 'type', 'brand',\n    \"photo\", \"price\"]);\n    create_food(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_foods()\n          fetch_users()\n          history.push(\"/food/list\")\n        }\n    });\n  }\n  function update(field, ev) {\n    let u1 = Object.assign({}, food);\n    u1[field] = ev.target.value;\n    setFood(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, food);\n    p1[\"photo\"] = ev.target.files[0];\n    setFood(p1);\n    console.log(food)\n  }\n\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Create Food Recommendation</h1>\n          <Form.Label>Product Brand</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"brand\", ev)}\n            value={food.brand} />\n        </Form.Group>\n        <Form.Group>\n              <Form.Label>Product Image</Form.Label>\n              <Form.Control type=\"file\" onChange={updatePhoto} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Product Description</Form.Label>\n          <Form.Control type=\"textarea\"\n                        onChange={\n                          (ev) => update(\"body\", ev)}\n            value={food.body} />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicRange\">\n          <Form.Label>Product Price: {food.price}$ per lbs</Form.Label>\n          <Form.Control type=\"range\" onChange={(ev) => update(\"price\", ev)} value={food.price}/>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label>Product Type</Form.Label>\n          <Form.Control as=\"select\" onChange={(ev) => update(\"type\", ev)} value={food.type}>\n            <option></option>\n            <option>Kitten Food</option>\n            <option>Adult Food</option>\n            <option>Wet Food</option>\n            <option>Dried Food</option>\n            <option>Semi-moist Food</option>\n            <option>Other</option>\n          </Form.Control>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n          Save\n        </Button>\n      </Form>\n    );\n}\n\nfunction state2props({session}) {\n  return {session};\n}\n\nexport default connect(state2props)(FoodNew);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Food/Edit.js",["256","257","258","259","260"],"import { Row, Col, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink, useLocation  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { fetch_food, update_food , fetch_foods, fetch_users, fetch_user} from '../api';\n\nfunction FoodNew({session, food_form, user_form}) {\n  let location = useLocation()\n  let history = useHistory()\n  let food_id = location.pathname.split(\"/food/edit/\")[1]\n\n  if(typeof(food_form.id) == \"undefined\" || food_form.id != food_id) {\n    fetch_foods()\n    fetch_food(food_id)\n  }\n\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != food_form.user_id){\n    fetch_foods()\n    fetch_user(food_form.user_id)\n  }\n\n  const [food, setFood] = useState({\n    user_id: session.user_id, body: food_form.body, brand: food_form.brand, price: food_form.price,\n    type: food_form.type, id: food_form.id\n  })\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(food, ['id', 'user_id', 'body', 'type', 'brand',\n    \"photo\", \"price\"]);\n    update_food(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_foods()\n          fetch_users()\n          history.push(\"/food/list\")\n        }\n    });\n  }\n  function update(field, ev) {\n    let u1 = Object.assign({}, food);\n    u1[field] = ev.target.value;\n    setFood(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, food);\n    p1[\"photo\"] = ev.target.files[0];\n    setFood(p1);\n    console.log(food)\n  }\n\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Edit Food Recommendation</h1>\n          <Form.Label>Product Brand</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"brand\", ev)}\n            value={food.brand} />\n        </Form.Group>\n        <Form.Group>\n              <Form.Label>Product Image</Form.Label>\n              <Form.Control type=\"file\" onChange={updatePhoto} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Product Description</Form.Label>\n          <Form.Control type=\"textarea\"\n                        onChange={\n                          (ev) => update(\"body\", ev)}\n            value={food.body} />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicRange\">\n          <Form.Label>Product Price: {food.price}$ per lbs</Form.Label>\n          <Form.Control type=\"range\" onChange={(ev) => update(\"price\", ev)} value={food.price}/>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label>Product Type</Form.Label>\n          <Form.Control as=\"select\" onChange={(ev) => update(\"type\", ev)} value={food.type}>\n            <option></option>\n            <option>Kitten Food</option>\n            <option>Adult Food</option>\n            <option>Wet Food</option>\n            <option>Dried Food</option>\n            <option>Semi-moist Food</option>\n            <option>Other</option>\n          </Form.Control>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n          Save\n        </Button>\n      </Form>\n    );\n}\n\nfunction state2props({session, food_form, user_form}) {\n  return {session, food_form, user_form};\n}\n\nexport default connect(state2props)(FoodNew);\n","/media/psf/Home/Desktop/CS4550-FinalProject/web/src/Adoption/List.js",["261","262","263","264","265","266","267","268","269","270"],{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":1,"column":15,"nodeType":"277","messageId":"278","endLine":1,"endColumn":21},{"ruleId":"275","severity":1,"message":"279","line":1,"column":47,"nodeType":"277","messageId":"278","endLine":1,"endColumn":56},{"ruleId":"275","severity":1,"message":"280","line":5,"column":21,"nodeType":"277","messageId":"278","endLine":5,"endColumn":31},{"ruleId":"275","severity":1,"message":"281","line":13,"column":7,"nodeType":"277","messageId":"278","endLine":13,"endColumn":14},{"ruleId":"275","severity":1,"message":"281","line":51,"column":7,"nodeType":"277","messageId":"278","endLine":51,"endColumn":14},{"ruleId":"282","severity":1,"message":"283","line":58,"column":9,"nodeType":"284","endLine":58,"endColumn":95},{"ruleId":"275","severity":1,"message":"285","line":1,"column":15,"nodeType":"277","messageId":"278","endLine":1,"endColumn":21},{"ruleId":"275","severity":1,"message":"286","line":1,"column":33,"nodeType":"277","messageId":"278","endLine":1,"endColumn":37},{"ruleId":"275","severity":1,"message":"287","line":1,"column":39,"nodeType":"277","messageId":"278","endLine":1,"endColumn":45},{"ruleId":"275","severity":1,"message":"288","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":18},{"ruleId":"275","severity":1,"message":"289","line":5,"column":8,"nodeType":"277","messageId":"278","endLine":5,"endColumn":12},{"ruleId":"275","severity":1,"message":"290","line":6,"column":8,"nodeType":"277","messageId":"278","endLine":6,"endColumn":13},{"ruleId":"275","severity":1,"message":"291","line":7,"column":10,"nodeType":"277","messageId":"278","endLine":7,"endColumn":19},{"ruleId":"275","severity":1,"message":"292","line":7,"column":21,"nodeType":"277","messageId":"278","endLine":7,"endColumn":33},{"ruleId":"275","severity":1,"message":"280","line":7,"column":35,"nodeType":"277","messageId":"278","endLine":7,"endColumn":45},{"ruleId":"275","severity":1,"message":"281","line":10,"column":7,"nodeType":"277","messageId":"278","endLine":10,"endColumn":14},{"ruleId":"282","severity":1,"message":"283","line":34,"column":13,"nodeType":"284","endLine":34,"endColumn":101},{"ruleId":"293","severity":1,"message":"294","line":44,"column":12,"nodeType":"284","endLine":44,"endColumn":16},{"ruleId":"295","severity":1,"message":"296","line":137,"column":14,"nodeType":"297","messageId":"298","endLine":137,"endColumn":16},{"ruleId":"295","severity":1,"message":"299","line":138,"column":49,"nodeType":"297","messageId":"298","endLine":138,"endColumn":51},{"ruleId":"295","severity":1,"message":"296","line":140,"column":18,"nodeType":"297","messageId":"298","endLine":140,"endColumn":20},{"ruleId":"295","severity":1,"message":"299","line":141,"column":55,"nodeType":"297","messageId":"298","endLine":141,"endColumn":57},{"ruleId":"295","severity":1,"message":"296","line":143,"column":18,"nodeType":"297","messageId":"298","endLine":143,"endColumn":20},{"ruleId":"295","severity":1,"message":"299","line":145,"column":55,"nodeType":"297","messageId":"298","endLine":145,"endColumn":57},{"ruleId":"295","severity":1,"message":"299","line":149,"column":49,"nodeType":"297","messageId":"298","endLine":149,"endColumn":51},{"ruleId":"295","severity":1,"message":"296","line":253,"column":14,"nodeType":"297","messageId":"298","endLine":253,"endColumn":16},{"ruleId":"295","severity":1,"message":"299","line":257,"column":49,"nodeType":"297","messageId":"298","endLine":257,"endColumn":51},{"ruleId":"275","severity":1,"message":"300","line":287,"column":15,"nodeType":"277","messageId":"278","endLine":287,"endColumn":18},{"ruleId":"295","severity":1,"message":"296","line":288,"column":27,"nodeType":"297","messageId":"298","endLine":288,"endColumn":29},{"ruleId":"275","severity":1,"message":"300","line":335,"column":15,"nodeType":"277","messageId":"278","endLine":335,"endColumn":18},{"ruleId":"295","severity":1,"message":"296","line":338,"column":26,"nodeType":"297","messageId":"298","endLine":338,"endColumn":28},{"ruleId":"295","severity":1,"message":"296","line":500,"column":14,"nodeType":"297","messageId":"298","endLine":500,"endColumn":16},{"ruleId":"295","severity":1,"message":"299","line":504,"column":49,"nodeType":"297","messageId":"298","endLine":504,"endColumn":51},{"ruleId":"295","severity":1,"message":"296","line":537,"column":14,"nodeType":"297","messageId":"298","endLine":537,"endColumn":16},{"ruleId":"275","severity":1,"message":"300","line":543,"column":15,"nodeType":"277","messageId":"278","endLine":543,"endColumn":18},{"ruleId":"301","severity":1,"message":"302","line":593,"column":7,"nodeType":"303","messageId":"304","endLine":593,"endColumn":13},{"ruleId":"301","severity":1,"message":"302","line":596,"column":7,"nodeType":"303","messageId":"304","endLine":596,"endColumn":13},{"ruleId":"301","severity":1,"message":"302","line":599,"column":7,"nodeType":"303","messageId":"304","endLine":599,"endColumn":13},{"ruleId":"301","severity":1,"message":"302","line":602,"column":7,"nodeType":"303","messageId":"304","endLine":602,"endColumn":13},{"ruleId":"301","severity":1,"message":"302","line":605,"column":7,"nodeType":"303","messageId":"304","endLine":605,"endColumn":13},{"ruleId":"275","severity":1,"message":"305","line":1,"column":10,"nodeType":"277","messageId":"278","endLine":1,"endColumn":13},{"ruleId":"275","severity":1,"message":"306","line":1,"column":15,"nodeType":"277","messageId":"278","endLine":1,"endColumn":18},{"ruleId":"275","severity":1,"message":"285","line":1,"column":15,"nodeType":"277","messageId":"278","endLine":1,"endColumn":21},{"ruleId":"275","severity":1,"message":"306","line":1,"column":28,"nodeType":"277","messageId":"278","endLine":1,"endColumn":31},{"ruleId":"275","severity":1,"message":"292","line":7,"column":47,"nodeType":"277","messageId":"278","endLine":7,"endColumn":59},{"ruleId":"275","severity":1,"message":"285","line":1,"column":23,"nodeType":"277","messageId":"278","endLine":1,"endColumn":29},{"ruleId":"275","severity":1,"message":"280","line":5,"column":10,"nodeType":"277","messageId":"278","endLine":5,"endColumn":20},{"ruleId":"275","severity":1,"message":"307","line":5,"column":22,"nodeType":"277","messageId":"278","endLine":5,"endColumn":43},{"ruleId":"275","severity":1,"message":"308","line":5,"column":45,"nodeType":"277","messageId":"278","endLine":5,"endColumn":59},{"ruleId":"275","severity":1,"message":"281","line":9,"column":7,"nodeType":"277","messageId":"278","endLine":9,"endColumn":14},{"ruleId":"275","severity":1,"message":"309","line":10,"column":7,"nodeType":"277","messageId":"278","endLine":10,"endColumn":15},{"ruleId":"275","severity":1,"message":"310","line":72,"column":11,"nodeType":"277","messageId":"278","endLine":72,"endColumn":15},{"ruleId":"282","severity":1,"message":"283","line":76,"column":11,"nodeType":"284","endLine":76,"endColumn":80},{"ruleId":"311","severity":1,"message":"312","line":118,"column":46,"nodeType":"284","messageId":"313","endLine":118,"endColumn":133,"fix":"314"},{"ruleId":"275","severity":1,"message":"285","line":1,"column":15,"nodeType":"277","messageId":"278","endLine":1,"endColumn":21},{"ruleId":"275","severity":1,"message":"306","line":1,"column":28,"nodeType":"277","messageId":"278","endLine":1,"endColumn":31},{"ruleId":"275","severity":1,"message":"315","line":1,"column":18,"nodeType":"277","messageId":"278","endLine":1,"endColumn":21},{"ruleId":"275","severity":1,"message":"285","line":1,"column":23,"nodeType":"277","messageId":"278","endLine":1,"endColumn":29},{"ruleId":"275","severity":1,"message":"305","line":1,"column":31,"nodeType":"277","messageId":"278","endLine":1,"endColumn":34},{"ruleId":"275","severity":1,"message":"316","line":3,"column":41,"nodeType":"277","messageId":"278","endLine":3,"endColumn":48},{"ruleId":"295","severity":1,"message":"299","line":14,"column":66,"nodeType":"297","messageId":"298","endLine":14,"endColumn":68},{"ruleId":"295","severity":1,"message":"299","line":20,"column":58,"nodeType":"297","messageId":"298","endLine":20,"endColumn":60},{"ruleId":"295","severity":1,"message":"296","line":35,"column":35,"nodeType":"297","messageId":"298","endLine":35,"endColumn":37},{"ruleId":"317","severity":1,"message":"318","line":69,"column":12,"nodeType":"277","messageId":"319","endLine":69,"endColumn":22},{"ruleId":"295","severity":1,"message":"296","line":78,"column":36,"nodeType":"297","messageId":"298","endLine":78,"endColumn":38},{"ruleId":"282","severity":1,"message":"283","line":92,"column":13,"nodeType":"284","endLine":92,"endColumn":87},{"ruleId":"282","severity":1,"message":"283","line":127,"column":9,"nodeType":"284","endLine":127,"endColumn":25},{"ruleId":"282","severity":1,"message":"283","line":133,"column":15,"nodeType":"284","endLine":133,"endColumn":84},{"ruleId":"282","severity":1,"message":"283","line":154,"column":9,"nodeType":"284","endLine":154,"endColumn":25},{"ruleId":"275","severity":1,"message":"285","line":1,"column":15,"nodeType":"277","messageId":"278","endLine":1,"endColumn":21},{"ruleId":"275","severity":1,"message":"306","line":1,"column":28,"nodeType":"277","messageId":"278","endLine":1,"endColumn":31},{"ruleId":"295","severity":1,"message":"299","line":12,"column":66,"nodeType":"297","messageId":"298","endLine":12,"endColumn":68},{"ruleId":"295","severity":1,"message":"299","line":15,"column":58,"nodeType":"297","messageId":"298","endLine":15,"endColumn":60},{"ruleId":"275","severity":1,"message":"287","line":1,"column":16,"nodeType":"277","messageId":"278","endLine":1,"endColumn":22},{"ruleId":"275","severity":1,"message":"288","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":18},{"ruleId":"275","severity":1,"message":"320","line":4,"column":16,"nodeType":"277","messageId":"278","endLine":4,"endColumn":26},{"ruleId":"275","severity":1,"message":"316","line":4,"column":28,"nodeType":"277","messageId":"278","endLine":4,"endColumn":35},{"ruleId":"275","severity":1,"message":"289","line":5,"column":8,"nodeType":"277","messageId":"278","endLine":5,"endColumn":12},{"ruleId":"275","severity":1,"message":"290","line":6,"column":8,"nodeType":"277","messageId":"278","endLine":6,"endColumn":13},{"ruleId":"275","severity":1,"message":"291","line":7,"column":10,"nodeType":"277","messageId":"278","endLine":7,"endColumn":19},{"ruleId":"275","severity":1,"message":"292","line":7,"column":21,"nodeType":"277","messageId":"278","endLine":7,"endColumn":33},{"ruleId":"275","severity":1,"message":"280","line":7,"column":35,"nodeType":"277","messageId":"278","endLine":7,"endColumn":45},{"ruleId":"275","severity":1,"message":"321","line":17,"column":11,"nodeType":"277","messageId":"278","endLine":17,"endColumn":16},{"ruleId":"275","severity":1,"message":"321","line":37,"column":11,"nodeType":"277","messageId":"278","endLine":37,"endColumn":16},{"ruleId":"275","severity":1,"message":"322","line":50,"column":12,"nodeType":"277","messageId":"278","endLine":50,"endColumn":22},{"ruleId":"275","severity":1,"message":"287","line":1,"column":10,"nodeType":"277","messageId":"278","endLine":1,"endColumn":16},{"ruleId":"275","severity":1,"message":"285","line":1,"column":23,"nodeType":"277","messageId":"278","endLine":1,"endColumn":29},{"ruleId":"275","severity":1,"message":"286","line":1,"column":47,"nodeType":"277","messageId":"278","endLine":1,"endColumn":51},{"ruleId":"275","severity":1,"message":"288","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":18},{"ruleId":"275","severity":1,"message":"280","line":5,"column":10,"nodeType":"277","messageId":"278","endLine":5,"endColumn":20},{"ruleId":"275","severity":1,"message":"323","line":5,"column":22,"nodeType":"277","messageId":"278","endLine":5,"endColumn":33},{"ruleId":"275","severity":1,"message":"324","line":5,"column":35,"nodeType":"277","messageId":"278","endLine":5,"endColumn":47},{"ruleId":"275","severity":1,"message":"281","line":9,"column":7,"nodeType":"277","messageId":"278","endLine":9,"endColumn":14},{"ruleId":"275","severity":1,"message":"309","line":10,"column":7,"nodeType":"277","messageId":"278","endLine":10,"endColumn":15},{"ruleId":"275","severity":1,"message":"310","line":72,"column":11,"nodeType":"277","messageId":"278","endLine":72,"endColumn":15},{"ruleId":"282","severity":1,"message":"283","line":76,"column":11,"nodeType":"284","endLine":76,"endColumn":80},{"ruleId":"275","severity":1,"message":"315","line":1,"column":18,"nodeType":"277","messageId":"278","endLine":1,"endColumn":21},{"ruleId":"275","severity":1,"message":"285","line":1,"column":23,"nodeType":"277","messageId":"278","endLine":1,"endColumn":29},{"ruleId":"275","severity":1,"message":"305","line":1,"column":31,"nodeType":"277","messageId":"278","endLine":1,"endColumn":34},{"ruleId":"275","severity":1,"message":"316","line":3,"column":41,"nodeType":"277","messageId":"278","endLine":3,"endColumn":48},{"ruleId":"295","severity":1,"message":"299","line":14,"column":60,"nodeType":"297","messageId":"298","endLine":14,"endColumn":62},{"ruleId":"295","severity":1,"message":"299","line":21,"column":58,"nodeType":"297","messageId":"298","endLine":21,"endColumn":60},{"ruleId":"295","severity":1,"message":"296","line":37,"column":35,"nodeType":"297","messageId":"298","endLine":37,"endColumn":37},{"ruleId":"317","severity":1,"message":"318","line":71,"column":12,"nodeType":"277","messageId":"319","endLine":71,"endColumn":22},{"ruleId":"295","severity":1,"message":"296","line":80,"column":36,"nodeType":"297","messageId":"298","endLine":80,"endColumn":38},{"ruleId":"282","severity":1,"message":"283","line":94,"column":13,"nodeType":"284","endLine":94,"endColumn":87},{"ruleId":"282","severity":1,"message":"283","line":129,"column":9,"nodeType":"284","endLine":129,"endColumn":25},{"ruleId":"282","severity":1,"message":"283","line":135,"column":15,"nodeType":"284","endLine":135,"endColumn":84},{"ruleId":"282","severity":1,"message":"283","line":156,"column":9,"nodeType":"284","endLine":156,"endColumn":25},{"ruleId":"275","severity":1,"message":"285","line":1,"column":15,"nodeType":"277","messageId":"278","endLine":1,"endColumn":21},{"ruleId":"275","severity":1,"message":"306","line":1,"column":28,"nodeType":"277","messageId":"278","endLine":1,"endColumn":31},{"ruleId":"275","severity":1,"message":"285","line":1,"column":15,"nodeType":"277","messageId":"278","endLine":1,"endColumn":21},{"ruleId":"275","severity":1,"message":"306","line":1,"column":28,"nodeType":"277","messageId":"278","endLine":1,"endColumn":31},{"ruleId":"295","severity":1,"message":"299","line":12,"column":60,"nodeType":"297","messageId":"298","endLine":12,"endColumn":62},{"ruleId":"295","severity":1,"message":"299","line":15,"column":58,"nodeType":"297","messageId":"298","endLine":15,"endColumn":60},{"ruleId":"275","severity":1,"message":"315","line":1,"column":18,"nodeType":"277","messageId":"278","endLine":1,"endColumn":21},{"ruleId":"275","severity":1,"message":"285","line":1,"column":23,"nodeType":"277","messageId":"278","endLine":1,"endColumn":29},{"ruleId":"275","severity":1,"message":"305","line":1,"column":31,"nodeType":"277","messageId":"278","endLine":1,"endColumn":34},{"ruleId":"275","severity":1,"message":"306","line":1,"column":36,"nodeType":"277","messageId":"278","endLine":1,"endColumn":39},{"ruleId":"275","severity":1,"message":"325","line":1,"column":41,"nodeType":"277","messageId":"278","endLine":1,"endColumn":45},{"ruleId":"275","severity":1,"message":"286","line":1,"column":47,"nodeType":"277","messageId":"278","endLine":1,"endColumn":51},{"ruleId":"275","severity":1,"message":"316","line":3,"column":41,"nodeType":"277","messageId":"278","endLine":3,"endColumn":48},{"ruleId":"275","severity":1,"message":"288","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":18},{"ruleId":"275","severity":1,"message":"290","line":6,"column":8,"nodeType":"277","messageId":"278","endLine":6,"endColumn":13},{"ruleId":"295","severity":1,"message":"299","line":13,"column":58,"nodeType":"297","messageId":"298","endLine":13,"endColumn":60},{"ruleId":"295","severity":1,"message":"299","line":20,"column":58,"nodeType":"297","messageId":"298","endLine":20,"endColumn":60},{"ruleId":"295","severity":1,"message":"296","line":36,"column":35,"nodeType":"297","messageId":"298","endLine":36,"endColumn":37},{"ruleId":"295","severity":1,"message":"296","line":56,"column":14,"nodeType":"297","messageId":"298","endLine":56,"endColumn":16},{"ruleId":"295","severity":1,"message":"296","line":63,"column":19,"nodeType":"297","messageId":"298","endLine":63,"endColumn":21},{"ruleId":"295","severity":1,"message":"296","line":70,"column":19,"nodeType":"297","messageId":"298","endLine":70,"endColumn":21},{"ruleId":"317","severity":1,"message":"318","line":86,"column":12,"nodeType":"277","messageId":"319","endLine":86,"endColumn":22},{"ruleId":"282","severity":1,"message":"283","line":97,"column":15,"nodeType":"284","endLine":97,"endColumn":60},{"ruleId":"282","severity":1,"message":"283","line":121,"column":15,"nodeType":"284","endLine":121,"endColumn":60},{"ruleId":"275","severity":1,"message":"286","line":1,"column":29,"nodeType":"277","messageId":"278","endLine":1,"endColumn":33},{"ruleId":"275","severity":1,"message":"320","line":3,"column":16,"nodeType":"277","messageId":"278","endLine":3,"endColumn":26},{"ruleId":"275","severity":1,"message":"316","line":3,"column":28,"nodeType":"277","messageId":"278","endLine":3,"endColumn":35},{"ruleId":"275","severity":1,"message":"326","line":3,"column":37,"nodeType":"277","messageId":"278","endLine":3,"endColumn":48},{"ruleId":"275","severity":1,"message":"327","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":21},{"ruleId":"275","severity":1,"message":"328","line":5,"column":8,"nodeType":"277","messageId":"278","endLine":5,"endColumn":16},{"ruleId":"275","severity":1,"message":"305","line":1,"column":10,"nodeType":"277","messageId":"278","endLine":1,"endColumn":13},{"ruleId":"275","severity":1,"message":"306","line":1,"column":15,"nodeType":"277","messageId":"278","endLine":1,"endColumn":18},{"ruleId":"275","severity":1,"message":"316","line":4,"column":22,"nodeType":"277","messageId":"278","endLine":4,"endColumn":29},{"ruleId":"275","severity":1,"message":"305","line":1,"column":10,"nodeType":"277","messageId":"278","endLine":1,"endColumn":13},{"ruleId":"275","severity":1,"message":"306","line":1,"column":15,"nodeType":"277","messageId":"278","endLine":1,"endColumn":18},{"ruleId":"275","severity":1,"message":"316","line":4,"column":22,"nodeType":"277","messageId":"278","endLine":4,"endColumn":29},{"ruleId":"295","severity":1,"message":"299","line":14,"column":58,"nodeType":"297","messageId":"298","endLine":14,"endColumn":60},{"ruleId":"295","severity":1,"message":"299","line":19,"column":58,"nodeType":"297","messageId":"298","endLine":19,"endColumn":60},{"ruleId":"275","severity":1,"message":"305","line":1,"column":29,"nodeType":"277","messageId":"278","endLine":1,"endColumn":32},{"ruleId":"275","severity":1,"message":"306","line":1,"column":34,"nodeType":"277","messageId":"278","endLine":1,"endColumn":37},{"ruleId":"275","severity":1,"message":"320","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":20},{"ruleId":"275","severity":1,"message":"326","line":3,"column":22,"nodeType":"277","messageId":"278","endLine":3,"endColumn":33},{"ruleId":"275","severity":1,"message":"329","line":3,"column":35,"nodeType":"277","messageId":"278","endLine":3,"endColumn":39},{"ruleId":"275","severity":1,"message":"289","line":5,"column":8,"nodeType":"277","messageId":"278","endLine":5,"endColumn":12},{"ruleId":"275","severity":1,"message":"290","line":7,"column":8,"nodeType":"277","messageId":"278","endLine":7,"endColumn":13},{"ruleId":"295","severity":1,"message":"296","line":22,"column":16,"nodeType":"297","messageId":"298","endLine":22,"endColumn":18},{"ruleId":"311","severity":1,"message":"312","line":61,"column":13,"nodeType":"284","messageId":"313","endLine":61,"endColumn":47,"fix":"330"},{"ruleId":"275","severity":1,"message":"331","line":68,"column":12,"nodeType":"277","messageId":"278","endLine":68,"endColumn":24},"no-native-reassign",["332"],"no-negated-in-lhs",["333"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'fetch_user' is defined but never used.","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'NavRow' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'pick' is defined but never used.","'store' is defined but never used.","'api_login' is defined but never used.","'fetch_reason' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'key' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Row' is defined but never used.","'Col' is defined but never used.","'fetch_single_wellness' is defined but never used.","'fetch_wellness' is defined but never used.","'location' is assigned a value but never used.","'body' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"334","text":"335"},"'Nav' is defined but never used.","'NavLink' is defined but never used.","no-redeclare","'photo_path' is already defined.","redeclared","'useHistory' is defined but never used.","'score' is assigned a value but never used.","'photo_path' is defined but never used.","'fetch_forum' is defined but never used.","'fetch_forums' is defined but never used.","'Card' is defined but never used.","'useLocation' is defined but never used.","'fetch_foods' is defined but never used.","'Carousel' is defined but never used.","'Link' is defined but never used.",{"range":"336","text":"335"},"'ListingBreed' is defined but never used.","no-global-assign","no-unsafe-negation",[3757,3757]," rel=\"noreferrer\"",[1868,1868]]