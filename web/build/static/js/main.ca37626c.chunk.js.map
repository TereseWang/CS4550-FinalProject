{"version":3,"sources":["store.js","api.js","Nav.js","User/New.js","User/View.js","User/Edit.js","Wellness/List.js","Wellness/New.js","Wellness/View.js","Wellness/Edit.js","Index/HomePage.js","Forum/List.js","Forum/View.js","Forum/New.js","Forum/Edit.js","Food/List.js","Food/New.js","Food/Edit.js","Food/View.js","Adoption/List.js","App.js","reportWebVitals.js","index.js"],"names":["wellness","state","action","type","data","score","users","user_form","comments","forumcomments","wellness_form","session","load_session","save_session","delete_session","sess","Object","assign","time","Date","now","localStorage","setItem","JSON","stringify","removeItem","getItem","parse","error","forums","forum_form","forum_score","foods","food_form","cat_breed","food_like","food_dislike","adoption","store","createStore","combineReducers","reducer","api_get","path","a","fetch","text","json","resp","opts","method","headers","body","fetch_adoption","int","token","token_type","access_token","dispatch","animals","fetch_foods","then","sort","b","like","length","sortFood","fetch_food","id","food","FormData","append","user_id","brand","price","photo","ok","update_food_vote","likes","dislikes","dislike","filter","e","push","fetch_food_like","fetch_food_dislike","fetch_forums","votes","sortForum","fetch_forum","post","title","update_forum_vote","fetch_forum_score","fetch_comments","health_id","result","entries","value","comment","wellness_id","console","log","fetch_wellness","fetch_forumcomments","forum_id","forumcomment","fetch_users","fetch_user","user","name","email","password","reason","sortWellness","fetch_single_wellness","update_wellness_vote","fetch_score","search_wellness","search","includes","handle_wellness_search","api_login","api_post","LoginForm","useHistory","useState","setName","pass","setPass","Form","onSubmit","ev","preventDefault","inline","Row","Col","className","Control","onChange","target","Button","to","SessionInfo","connect","current_user","hash","link","src","photo_hash","width","height","onClick","LoginOrInfo","Link","children","Nav","Item","exact","activeClassName","Redirect","error_row","Alert","variant","LoginInRegister","defaultActiveKey","_state","history","pass1","pass2","setUser","update","field","p1","p2","u1","pass_msg","create_user","pick","fetch_reason","Group","Label","controlId","as","files","disabled","View","OtherUserView","UserForm","update_user","UpdateUserForm","AddNewWellnessButton","ImageGallery","query","slice","map","entry","rows","health","substring","Carousel","Caption","useLocation","UpdatingArticles","current_wellness","Card","fluid","Header","Body","setSearch","href","placeholder","setPost","create_wellness","location","pathname","split","photo_path","deleteWellness","delete_wellness","AddButtons","EditCommentButton","delete_comment","ListingComments","com","setCom","create_comment","xs","update_wellness","ShowingWellness","ShowingForum","forum","ShowingFood","AddNewForumButton","ListingArticles","deleteForum","delete_forum","delete_forumcomment","create_forumcomment","create_forum","update_forum","ListingFoodArticles","image_link","Img","Title","Text","CardColumns","setFood","create_food","food_id","update_food","delete_food","updateVotes","class","breed","page","engine","setEngine","updatePage","ListingAdoptions","neutered","cat","photos","medium","attributes","spayed_neutered","contact","address","city","gender","age","breeds","primary","size","description","url","index","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","fetch_catbreeds"],"mappings":"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","file":"static/js/main.ca37626c.chunk.js","sourcesContent":["import { createStore, combineReducers } from 'redux';\n//referenced the fetch Structure that store the value of the web from lecture\n//code SPA Structure from Nat Tuck CS4550 Northeastern University \nfunction wellness(state= [], action ) {\n  switch (action.type) {\n    case 'wellness/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction score(state=0, action) {\n  switch (action.type) {\n    case 'score/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction users(state = [], action) {\n  switch (action.type) {\n    case 'users/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction user_form(state = {}, action) {\n  switch (action.type) {\n    case 'user_form/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\n\nfunction comments(state=[], action) {\n  switch (action.type) {\n    case 'comments/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction forumcomments(state=[], action) {\n  switch (action.type) {\n    case 'forumcomments/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction wellness_form(state = {}, action) {\n  switch (action.type) {\n    case 'wellness_form/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction session(state = load_session(), action) {\n  switch (action.type) {\n    case 'session/set':\n      save_session(action.data);\n      return action.data;\n    case 'session/clear':\n      delete_session();\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction save_session(sess) {\n  let session = Object.assign({}, sess, {time: Date.now()});\n  localStorage.setItem(\"session\", JSON.stringify(session));\n}\n\nfunction delete_session() {\n  localStorage.removeItem(\"session\");\n}\n\nfunction load_session() {\n  let session = localStorage.getItem(\"session\");\n  if (!session) {\n    return null;\n  }\n  session = JSON.parse(session);\n  let age = Date.now() - session.time;\n  let hours = 60*60*1000;\n  if (age < 24 * hours) {\n    return session;\n  }\n  else {\n    return null;\n  }\n}\n\nfunction error(state = null, action) {\n  switch (action.type) {\n    case 'error/set':\n      return action.data;\n    case 'session/set':\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction forums(state=[], action) {\n  switch (action.type) {\n    case 'forums/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction forum_form(state={}, action) {\n  switch (action.type) {\n    case 'forum_form/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction forum_score(state=0, action) {\n  switch (action.type) {\n    case 'forum_score/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction foods(state=[], action) {\n  switch (action.type) {\n    case 'foods/set':\n      return action.data;\n    default:\n      return state;\n    }\n}\n\nfunction food_form(state={}, action) {\n  switch (action.type) {\n    case 'food_form/set':\n      return action.data;\n    default:\n      return state;\n    }\n}\n\nfunction cat_breed(state=[], action) {\n  switch (action.type) {\n    case 'cat_breed/set':\n      return action.data;\n    default:\n      return state;\n    }\n}\n\nfunction food_like(state=0, action) {\n  switch (action.type) {\n    case 'food_like/set':\n      return action.data;\n    default:\n      return state;\n    }\n}\n\nfunction food_dislike(state=0, action) {\n  switch (action.type) {\n    case 'food_dislike/set':\n      return action.data;\n    default:\n      return state;\n    }\n}\n\nfunction adoption(state=[], action) {\n  switch (action.type) {\n    case 'adoption/set':\n      return action.data;\n    default:\n      return state;\n    }\n}\n\nfunction root_reducer(state, action) {\n    let reducer = combineReducers({\n        adoption, food_dislike, food_like, cat_breed, food_form, foods, forumcomments, forum_score, forum_form, forums, comments, score,\n        wellness_form, wellness, users, user_form, session, error,\n    });\n    return reducer(state, action);\n}\n\n\n\nlet store = createStore(root_reducer);\nexport default store;\n","import store from './store';\n//referenced from lecture code SPA Structure from Nat Tuck CS4550 Northeastern University\nasync function api_get(path) {\n  let text = await fetch(\n    \"http://kittenlover-backend.teresewang.com/api/v1\" + path, {});\n  let resp = await text.json();\n  return resp.data;\n}\n\nasync function api_post(path, data) {\n  let opts = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data),\n  };\n  let text = await fetch(\n    \"http://kittenlover-backend.teresewang.com/api/v1\" + path, opts);\n  return await text.json();\n}\n//--------------------------Lost Found Kitten------------------\nexport async function fetch_adoption(int) {\n  var key = \"e21rW5xeIrGdp49R2CdfcyuCoDdv9Kg6qWO6ZYO2dzwdasv2Ux\"\n  var secret = \"ljjE8EWpWS9SD1JTfSIPXLFKlXEDVbVHC2Hzf7rF\"\n  let resp = await fetch('https://api.petfinder.com/v2/oauth2/token', {\n\tmethod: 'POST',\n\tbody: 'grant_type=client_credentials&client_id=' + key + '&client_secret=' + secret,\n\theaders: {\n\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t}})\n  let token = await resp.json()\n  resp = await fetch(\"https://api.petfinder.com/v2/animals?type=cat&page=\" + int,{\n    headers: {\n\t\t\t'Authorization': token.token_type + ' ' + token.access_token,\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t}})\n  let data = await resp.json()\n  store.dispatch({\n    type: \"adoption/set\",\n    data: data.animals\n  })\n}\n\n//------------------------Food List----------------------------\nexport function fetch_foods() {\n  api_get(\"/foods\").then((data) => {\n    data = sortFood(data)\n    store.dispatch({\n    type: 'foods/set',\n    data: data,\n  })});\n}\n\nexport function fetch_food(id) {\n  api_get(\"/foods/\"+id).then((data) => store.dispatch({\n    type: 'food_form/set',\n    data: data,\n  }));\n}\n\nexport async function create_food(food) {\n  let data = new FormData();\n  data.append(\"food[user_id]\", food.user_id);\n  data.append(\"food[like]\", JSON.stringify([]))\n  data.append(\"food[dislike]\", JSON.stringify([]))\n  data.append(\"food[type]\", food.type);\n  data.append(\"food[body]\", food.body);\n  data.append(\"food[brand]\", food.brand)\n  data.append(\"food[price]\", food.price)\n  if (food.photo === \"undefined\") {\n    food[\"photo\"] = \"\";\n  }\n  data.append(\"food[photo]\", food.photo);\n  let resp = await fetch(\"http://kittenlover-backend.teresewang.com/api/v1/foods\", {\n    method: \"POST\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\n\nexport async function update_food(food) {\n  let data = new FormData();\n  data.append(\"food[user_id]\", food.user_id);\n  data.append(\"food[like]\", JSON.stringify([]))\n  data.append(\"food[dislike]\", JSON.stringify([]))\n  data.append(\"food[type]\", food.type);\n  data.append(\"food[body]\", food.body);\n  data.append(\"food[brand]\", food.brand)\n  data.append(\"food[price]\", food.price)\n  data.append(\"food[photo]\", food.photo);\n  let resp = await fetch(\"http://kittenlover-backend.teresewang.com/api/v1/foods/\" + food.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport async function delete_food(id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://kittenlover-backend.teresewang.com/api/v1/foods/\" + id, {\n    method: 'DELETE',\n    body: data,\n  }).then((resp) => {\n    if(!resp.ok){\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.',\n      };\n      store.dispatch(action);\n    }else {\n      fetch_foods();\n    }\n  });\n}\n\nfunction sortFood(data) {\n  return data.sort(function(a, b){\n    return b.like.length - a.like.length});\n}\n\nexport async function update_food_vote(food, user_id, action) {\n  let data = new FormData();\n  data.append(\"food[user_id]\", food.user_id);\n  data.append(\"food[type]\", food.type);\n  data.append(\"food[body]\", food.body);\n  data.append(\"food[brand]\", food.brand)\n  data.append(\"food[price]\", food.price)\n  data.append(\"food[photo]\", food.photo);\n  data.append(\"food[like]\", JSON.stringify([]))\n  data.append(\"food[dislike]\", JSON.stringify([]))\n  let likes = food.like\n  let dislikes = food.dislike\n\n  if (action == \"decreaselike\") {\n    likes = likes.filter(function(e) { return e != user_id })\n  }\n  else if(action == \"decreasedislike\") {\n    dislikes = dislikes.filter(function(e) { return e != user_id })\n  }\n  else if(action == \"increaselike\") {\n    likes.push(user_id)\n    dislikes = dislikes.filter(function(e) { return e != user_id })\n  }\n  else {\n    dislikes.push(user_id)\n    likes = likes.filter(function(e) { return e != user_id })\n  }\n\n  data.append(\"food[like]\", JSON.stringify(likes))\n  data.append(\"food[dislike]\", JSON.stringify(dislikes))\n  if (food.photo === \"undefined\") {\n    food[\"photo\"] = \"\";\n  }\n  data.append(\"food[photo]\", food.photo);\n  let resp = await fetch(\"http://kittenlover-backend.teresewang.com/api/v1/foods/\" + food.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport function fetch_food_like(id) {\n  api_get(\"/foods/\"+id).then((data) => {\n  store.dispatch({\n    type: 'food_like/set',\n    data: data.like.length,\n  })});\n}\n\nexport function fetch_food_dislike(id) {\n  api_get(\"/foods/\"+id).then((data) => {\n  store.dispatch({\n    type: 'food_dislike/set',\n    data: data.dislike.length,\n  })});\n}\n\n//-----------------------Forum----------------------------------\nexport function fetch_forums() {\n  api_get(\"/forums\").then((data) => {\n  data = sortForum(data)\n  store.dispatch({\n    type: 'forums/set',\n    data: data,\n  })});\n}\n\nexport function fetch_forum(id) {\n  api_get(\"/forums/\"+id).then((data) => store.dispatch({\n    type: 'forum_form/set',\n    data: data,\n  }));\n}\n\nexport async function create_forum(post) {\n  let data = new FormData();\n  data.append(\"forum[user_id]\", post.user_id);\n  data.append(\"forum[title]\", post.title);\n  data.append(\"forum[body]\", post.body);\n  data.append(\"forum[votes]\", JSON.stringify([]))\n  if (post.photo === \"undefined\") {\n    post[\"photo\"] = \"\";\n  }\n  data.append(\"forum[photo]\", post.photo);\n  let resp = await fetch(\"http://kittenlover-backend.teresewang.com/api/v1/forums\", {\n    method: \"POST\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport async function update_forum(post) {\n  let data = new FormData();\n  data.append(\"forum[user_id]\", post.user_id);\n  data.append(\"forum[title]\", post.title);\n  data.append(\"forum[body]\", post.body);\n  data.append(\"forum[photo]\", post.photo);\n  let resp = await fetch(\"http://kittenlover-backend.teresewang.com/api/v1/forums/\" + post.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport async function delete_forum(id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://kittenlover-backend.teresewang.com/api/v1/forums/\" + id, {\n    method: 'DELETE',\n    body: data,\n  }).then((resp) => {\n    if(!resp.ok){\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.',\n      };\n      store.dispatch(action);\n    }else {\n      fetch_forums();\n    }\n  });\n}\n\nexport async function update_forum_vote(post, user_id, action) {\n  let data = new FormData();\n  data.append(\"forum[user_id]\", post.user_id);\n  data.append(\"forum[title]\", post.title);\n  data.append(\"forum[body]\", post.body);\n  let votes = post.votes\n  if (action == \"increase\") {\n    votes.push(user_id)\n  }\n  else {\n    votes = votes.filter(function(e) { return e != user_id })\n  }\n  data.append(\"forum[votes]\", JSON.stringify(votes))\n  if (post.photo === \"undefined\") {\n    post[\"photo\"] = \"\";\n  }\n  data.append(\"forum[photo]\", post.photo);\n  let resp = await fetch(\"http://kittenlover-backend.teresewang.com/api/v1/forums/\" + post.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport function fetch_forum_score(id) {\n  api_get(\"/forums/\"+id).then((data) => {\n  store.dispatch({\n    type: 'forum_score/set',\n    data: data.votes.length,\n  })});\n}\n\nfunction sortForum(data) {\n  return data.sort(function(a, b){\n    return b.votes.length - a.votes.length});\n}\n//----------------------Wellness Comments -----------------------\nexport function fetch_comments(health_id) {\n  api_get(\"/comments\").then((data) => {\n    let result = []\n    for (let [key, value] of Object.entries(data)) {\n      if (value.health_id == health_id) {\n        result.push(value)\n      }\n    }\n    store.dispatch({\n    type: 'comments/set',\n    data: result,\n  })})\n}\n\nexport async function create_comment(comment, user_id, wellness_id) {\n  let data = new FormData();\n  data.append(\"comment[body]\", comment);\n  data.append(\"comment[health_id]\", wellness_id);\n  data.append(\"comment[user_id]\", user_id);\n  let resp = await fetch(\"http://kittenlover-backend.teresewang.com/api/v1/comments\", {\n    method: \"POST\",\n    body: data,\n  })\n  return await resp.json();\n}\n\nexport async function delete_comment(id, wellness_id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://kittenlover-backend.teresewang.com/api/v1/comments/\" + id, {\n    method: 'DELETE',\n    body: data,\n  }).then((resp) => {\n    if(!resp.ok){\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.',\n      };\n      store.dispatch(action);\n    }else {\n      console.log(wellness_id)\n      fetch_comments(wellness_id);\n      fetch_wellness()\n    }\n  });\n}\n\n//--------------------------Forum Comment -----------------------\nexport function fetch_forumcomments(forum_id) {\n  api_get(\"/forumcomments\").then((data) => {\n    let result = []\n    for (let [key, value] of Object.entries(data)) {\n      console.log(value)\n      console.log(forum_id)\n      if (value.forum_id == forum_id) {\n        result.push(value)\n      }\n    }\n    store.dispatch({\n    type: 'forumcomments/set',\n    data: result,\n  })})\n}\n\nexport async function create_forumcomment(forumcomment, user_id, forum_id) {\n  let data = new FormData();\n  data.append(\"forumcomment[body]\", forumcomment);\n  data.append(\"forumcomment[forum_id]\", forum_id);\n  data.append(\"forumcomment[user_id]\", user_id);\n  let resp = await fetch(\"http://kittenlover-backend.teresewang.com/api/v1/forumcomments\", {\n    method: \"POST\",\n    body: data,\n  })\n  return await resp.json();\n}\n\nexport async function delete_forumcomment(id, forum_id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://kittenlover-backend.teresewang.com/api/v1/forumcomments/\" + id, {\n    method: 'DELETE',\n    body: data,\n  }).then((resp) => {\n    if(!resp.ok){\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.',\n      };\n      store.dispatch(action);\n    }else {\n      console.log(forum_id)\n      fetch_forumcomments(forum_id);\n      fetch_forums()\n    }\n  });\n}\n\n//---------------------user--------------------------------------\nexport function fetch_users() {\n    api_get(\"/users\").then((data) => store.dispatch({\n        type: 'users/set',\n        data: data,\n    }));\n}\n\nexport function fetch_user(id) {\n  api_get(\"/users/\" + id).then((data) => store.dispatch({\n      type: 'user_form/set',\n      data: data,\n  }));\n}\n\nexport async function create_user(user) {\n  let data = new FormData();\n  data.append(\"user[name]\", user.name);\n  data.append(\"user[email]\", user.email);\n  data.append(\"user[password]\", user.password);\n  data.append(\"user[reason]\", user.reason);\n  if (user.photo === \"undefined\") {\n    user[\"photo\"] = \"\";\n  }\n  data.append(\"user[photo]\", user.photo);\n  let resp = await fetch(\"http://kittenlover-backend.teresewang.com/api/v1/users\", {\n    method: \"POST\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport async function update_user(user) {\n  let data = new FormData();\n  data.append(\"user_id\", user.id);\n  data.append(\"user[name]\", user.name);\n  data.append(\"user[email]\", user.email);\n  data.append(\"user[password]\", user.password);\n  data.append(\"user[reason]\", user.reason);\n  data.append(\"user[photo]\", user.photo);\n  let resp = await fetch(\"http://kittenlover-backend.teresewang.com/api/v1/users/\" + user.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n//---------------------wellness page-----------------------------------\nexport function fetch_wellness() {\n  api_get(\"/healths\").then((data) => {\n  data = sortWellness(data)\n  store.dispatch({\n    type: 'wellness/set',\n    data: data,\n  })});\n}\n\n\nexport function fetch_single_wellness(id) {\n  api_get(\"/healths/\"+id).then((data) => store.dispatch({\n    type: 'wellness_form/set',\n    data: data,\n  }));\n}\n\nexport async function create_wellness(post) {\n  let data = new FormData();\n  data.append(\"health[user_id]\", post.user_id);\n  data.append(\"health[title]\", post.title);\n  data.append(\"health[body]\", post.body);\n  data.append(\"health[votes]\", JSON.stringify([]))\n  if (post.photo === \"undefined\") {\n    post[\"photo\"] = \"\";\n  }\n  data.append(\"health[photo]\", post.photo);\n  let resp = await fetch(\"http://kittenlover-backend.teresewang.com/api/v1/healths\", {\n    method: \"POST\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport async function update_wellness(post) {\n  let data = new FormData();\n  data.append(\"health[user_id]\", post.user_id);\n  data.append(\"health[title]\", post.title);\n  data.append(\"health[body]\", post.body);\n  data.append(\"health[photo]\", post.photo);\n  let resp = await fetch(\"http://kittenlover-backend.teresewang.com/api/v1/healths/\" + post.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport async function delete_wellness(id) {\n  let data = new FormData();\n  data.append(\"id\", id);\n  fetch(\"http://kittenlover-backend.teresewang.com/api/v1/healths/\" + id, {\n    method: 'DELETE',\n    body: data,\n  }).then((resp) => {\n    if(!resp.ok){\n      let action = {\n        type: 'error/set',\n        data: 'Unable to delete event.',\n      };\n      store.dispatch(action);\n    }else {\n      fetch_wellness();\n    }\n  });\n}\n\nexport async function update_wellness_vote(post, user_id, action) {\n  let data = new FormData();\n  data.append(\"health[user_id]\", post.user_id);\n  data.append(\"health[title]\", post.title);\n  data.append(\"health[body]\", post.body);\n  let votes = post.votes\n  if (action == \"increase\") {\n    votes.push(user_id)\n  }\n  else {\n    votes = votes.filter(function(e) { return e != user_id })\n  }\n  data.append(\"health[votes]\", JSON.stringify(votes))\n  if (post.photo === \"undefined\") {\n    post[\"photo\"] = \"\";\n  }\n  data.append(\"health[photo]\", post.photo);\n  let resp = await fetch(\"http://kittenlover-backend.teresewang.com/api/v1/healths/\" + post.id, {\n    method: \"PATCH\",\n    body: data,\n  })\nreturn await resp.json();\n}\n\nexport function fetch_score(id) {\n  api_get(\"/healths/\"+id).then((data) => {\n  store.dispatch({\n    type: 'score/set',\n    data: data.votes.length,\n  })});\n}\n\nexport function search_wellness(search) {\n  api_get(\"/healths\").then((data) => {\n  data = sortWellness(data)\n  data = handle_wellness_search(search, data)\n  store.dispatch({\n    type: 'wellness/set',\n    data: data,\n  })});\n}\n\nfunction handle_wellness_search(search, data) {\n  if (search == \"\") {\n    data = sortWellness(data)\n    return data\n  }\n  else {\n    let result = []\n    for (let [key, value] of Object.entries(data)) {\n      if (value.title.includes(search) || value.body.includes(search)) {\n        result.push(value)\n      }\n    }\n    result = sortWellness(result)\n    return result\n  }\n}\n\nfunction sortWellness(data) {\n  return data.sort(function(a, b){\n    return b.votes.length - a.votes.length});\n}\n\nexport async function fetch_catbreeds() {\n  let text = await fetch(\n    \"https://api.thecatapi.com/v1/breeds\", {});\n  let resp = await text.json();\n  let action = {\n     type: 'cat_breed/set',\n     data: resp,\n   }\n   store.dispatch(action);\n}\n\n//---------------------------login------------------------------------\nexport function api_login(email, password) {\n  api_post(\"/session\", {email, password}).then((data) => {\n    if (data.session) {\n      let action = {\n        type: 'session/set',\n        data: data.session,\n      }\n      store.dispatch(action);\n    }\n    else if (data.error) {\n     let action = {\n        type: 'error/set',\n        data: data.error,\n      }\n      store.dispatch(action);\n    }\n  });\n}\n\nexport function fetch_reason(reason) {\n  switch(reason){\n    case \"Cat Wellness\":\n      return \"/wellness/list\"\n      break;\n    case \"Breeder/Adoption\":\n      return \"/selladopt\"\n      break;\n    case \"Lost/Found Cats\":\n      return \"/lostfound\"\n      break;\n    case \"Food Choices/Recommendations\":\n      return \"/food\"\n      break;\n    case \"Other\":\n      return \"/forum\"\n      break;\n    default:\n      return \"/\"\n    }\n}\nexport function load_defaults() {\n  fetch_users();\n  fetch_wellness();\n  fetch_forums();\n  fetch_foods();\n  fetch_catbreeds();\n  fetch_adoption(1);\n}\n","import { Nav, Navbar, Row, Col, Form, Button ,Container, Alert } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { api_login, fetch_user } from './api';\nimport { useHistory } from 'react-router-dom';\n\n//referenced from lecture code Nav file from Nat Tuck CS4550 Northeastern University\nfunction photo_path(hash) {\n  return \"http://kittenlover-backend.teresewang.com/photos/\" + hash;\n}\n\nfunction LoginForm() {\n  let history = useHistory();\n  const [email, setName] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n\n  function on_submit(ev) {\n    ev.preventDefault();\n    api_login(email, pass);\n  }\n\n  return (\n    <Form onSubmit={on_submit} inline>\n      <Row>\n        <Col>\n          <div className=\"h5 font-weight-bold text-dark\">Email:</div>\n          <Form.Control name=\"email\"\n                        type=\"text\"\n                        onChange={(ev) => setName(ev.target.value)}\n                        value={email}/>\n        </Col>\n      </Row>\n      <Row className=\"ml-2 my-2\">\n        <Col>\n          <div className=\"h5 font-weight-bold text-dark\">Password:</div>\n          <Form.Control name=\"password\"\n                        type=\"password\"\n                        onChange={(ev) => setPass(ev.target.value)}\n                        value={pass}/>\n          <Button className=\"h3 font-weight-bold ml-2 mr-2\" type=\"submit\">Logins </Button>\n        </Col>\n      </Row>\n      <div className=\"mt-4\">\n        <Redirect to=\"/users/new\">Register</Redirect>\n      </div>\n    </Form>\n  );\n}\n\nlet SessionInfo = connect()(({session, current_user,  dispatch}) => {\n  let history = useHistory();\n  function logout() {\n    dispatch({type: 'session/clear'});\n  }\n  let link = \"/users/view/\" + session.user_id\n  return (\n      <Row className=\"h4 ml-1 font-weight-bold\">\n        <img src={photo_path(session.photo_hash)} className=\"mr-2\" width=\"50px\" height=\"50px\"></img>\n        <div className=\"my-2\">{session.name}</div>\n        <Button className=\"btn-danger h3 ml-2 font-weight-bold\" onClick={logout}>Logout</Button>\n        <Redirect to={link}>View Profile</Redirect>\n      </Row>\n  );\n});\n\nfunction LOI({session, current_user}) {\n  if (session) {\n    return <SessionInfo session={session} current_user={current_user} />;\n  }\n  else {\n    return <LoginForm />;\n  }\n}\n\nconst LoginOrInfo = connect(\n  ({session, current_user}) => ({session, current_user}))(LOI);\n\nfunction Link({to, children}) {\n  return (\n    <Nav.Item>\n      <NavLink to={to} exact\n        className=\"nav-link font-weight-bold text-dark\"\n        activeClassName=\"active\">\n        {children}\n      </NavLink>\n    </Nav.Item>\n  );\n}\n\nfunction Redirect({to, children}) {\n  return (\n    <Nav.Item>\n      <NavLink to={to} exact\n        className=\"btn font-weight-bold text-primary ml-2\"\n        activeClassName=\"active\">\n        {children}\n      </NavLink>\n    </Nav.Item>\n  );\n}\n\nfunction AppNav({error}) {\n  let error_row = null;\n\n  if (error) {\n    error_row = (\n      <Row>\n        <Col>\n          <Alert variant=\"danger\">{error}</Alert>\n        </Col>\n      </Row>\n    );\n  }\n  function Register({session}) {\n      return(\n        <Row>\n          <Nav variant=\"tabs\" defaultActiveKey=\"/users/new\">\n            <Link to=\"/\">HomePage</Link>\n            <Link to=\"/wellness/list\">Wellness</Link>\n            <Link to=\"/food/list\">Food Choices</Link>\n            <Link to=\"/adopt\">Adopt</Link>\n            <Link to=\"/forum/list\">Forum</Link>\n          </Nav>\n      </Row>\n    )\n  }\n\n  const LoginInRegister = connect(\n    ({session}) => ({session}))(Register);\n\n  return(\n    <div>\n      <h1 className=\"font-weight-bold text-info display-2\">Kitten Lover</h1>\n      <LoginOrInfo />\n      { error_row }\n      <LoginInRegister/>\n    </div>\n  );\n}\nexport default connect(({error}) => ({error}))(AppNav);\n","import { Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_user, fetch_users, api_login, fetch_reason } from '../api';\n\n//referenced from lecture code SPA Structure from Nat Tuck CS4550 Northeastern University\nfunction UsersNew() {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\", pass1: \"\", pass2: \"\",\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['name', 'email', 'password', 'reason', 'photo']);\n    create_user(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_users();\n          api_login(user['email'], user['password'])\n          history.push(fetch_reason(user[\"reason\"]))\n        }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    // This is for user experience only,\n    // validation logic goes on the server.\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Form.Group>\n        <h1 className=\"mt-5\">Register Acount</h1>\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"name\", ev)}\n          value={user.name} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Email</Form.Label>\n        <Form.Control type=\"text\"\n                      onChange={\n                        (ev) => update(\"email\", ev)}\n          value={user.email} />\n      </Form.Group>\n\n      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n        <Form.Label>Reason For Using This Website</Form.Label>\n        <Form.Control as=\"select\" onChange={(ev) => update(\"reason\", ev)} value={user.reason}>\n          <option></option>\n          <option>Cat Wellness</option>\n          <option>Breeder/Adoption</option>\n          <option>Lost/Found Cat</option>\n          <option>Food Choices/Recommendations</option>\n          <option>Other</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group>\n            <Form.Label>Profile Picture</Form.Label>\n            <Form.Control type=\"file\" onChange={updatePhoto} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass1\", ev)}\n          value={user.pass1} />\n        <p>{user.pass_msg}</p>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control type=\"password\"\n          onChange={\n            (ev) => update(\"pass2\", ev)}\n          value={user.pass2} />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold\"\n              disabled={user.pass_msg !== \"\"}>\n        Save\n      </Button>\n    </Form>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersNew);\n","import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { api_login, fetch_reason, fetch_user } from '../api';\n\nfunction UsersView() {\n  let history = useHistory();\n\n  function photo_path(hash) {\n    return \"http://kittenlover-backend.teresewang.com/photos/\" + hash;\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn btn-lg font-weight-bold text-light btn-info\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n  function View({session}) {\n        return(\n        <Row>\n          <Col>\n            <h1 className=\"mt-3 my-3\">My Profile</h1>\n            <Redirect to=\"/users/edit\">Edit Profile</Redirect>\n            <img className=\"my-4\" src={photo_path(session.photo_hash)} width=\"200px\" height=\"200px\"></img>\n            <h3>Name: {session.name}</h3>\n            <h3>Email: {session.email}</h3>\n            <h3>Reason For Using This Website: {session.reason}</h3>\n          </Col>\n        </Row>\n      )\n  }\n\n  function OtherUserView({current_user}) {\n    return <h1></h1>\n  }\n\n  function LoginView({session, current_user}) {\n    if (session) {\n      return <View session={session}/>\n    }\n    else {\n      return <OtherUserView current_user={current_user}/>\n    }\n  }\n\n  const LoginInRegister = connect(\n    ({session, current_user}) => ({session, current_user}))(LoginView);\n\n  return (\n    <div>\n      <LoginInRegister />\n    </div>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersView);\n","import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_user, fetch_users, api_login, fetch_reason } from '../api';\n\nfunction UserForm({session}) {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    id: session.user_id, name: session.name, email: session.email,\n    reason: session.reason, pass1: \"\", pass2: \"\",\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(user, ['health_voted', 'id', 'name', 'email', 'password', 'reason', 'photo']);\n    update_user(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_users();\n          api_login(user['email'], user['password'])\n          history.push(\"/users/view\")\n        }\n    });\n  }\n\n  function check_pass(p1, p2) {\n    if (p1 !== p2) {\n      return \"Passwords don't match.\";\n    }\n\n    if (p1.length < 8) {\n      return \"Password too short.\";\n    }\n\n    return \"\";\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, user);\n    u1[field] = ev.target.value;\n    u1.password = u1.pass1;\n    u1.pass_msg = check_pass(u1.pass1, u1.pass2);\n    setUser(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, user);\n    p1[\"photo\"] = ev.target.files[0];\n    setUser(p1);\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn font-weight-bold text-light btn-danger\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Edit Profile</h1>\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"name\", ev)}\n            value={user.name} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"email\", ev)}\n            value={user.email} />\n        </Form.Group>\n\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label>Reason For Using This Website</Form.Label>\n          <Form.Control as=\"select\" onChange={(ev) => update(\"reason\", ev)} value={user.reason}>\n            <option></option>\n            <option>Cat Wellness</option>\n            <option>Breeder/Adoption</option>\n            <option>Lost/Found Cat</option>\n            <option>Food Choices/Recommendations</option>\n            <option>Other</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n              <Form.Label>Profile Picture</Form.Label>\n              <Form.Control type=\"file\" onChange={updatePhoto} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>New Password</Form.Label>\n          <Form.Control type=\"password\"\n            onChange={\n              (ev) => update(\"pass1\", ev)}\n            value={user.pass1} />\n          <p>{user.pass_msg}</p>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control type=\"password\"\n            onChange={\n              (ev) => update(\"pass2\", ev)}\n            value={user.pass2} />\n        </Form.Group>\n        <Row className=\"ml-1\">\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\"\n                disabled={user.pass_msg !== \"\"}>\n          Save\n        </Button>\n        <Redirect to=\"/users/view\">Cancel</Redirect>\n        </Row>\n      </Form>\n    );\n  }\n\nfunction LoginEdit({session}) {\n  if(session) {\n    return <UserForm session={session}/>\n  }\n  else{\n    return <h1 className=\"mt-5 ml-5\">Please Login In To Edit</h1>\n  }\n}\n\nconst UpdateUserForm = connect(\n    ({session}) => ({session}))(LoginEdit);\n\nfunction UsersEdit() {\n  return (\n    <UpdateUserForm/>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(UsersEdit);\n","import { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { Link, useHistory, NavLink, useLocation } from 'react-router-dom';\nimport { fetch_user, fetch_single_wellness, fetch_wellness, search_wellness } from '../api';\nimport Carousel from 'react-bootstrap/Carousel';\n\nfunction WellnessList({wellness, session}) {\n  let history = useHistory()\n  let location = useLocation();\n\n  function photo_path(hash) {\n    return \"http://kittenlover-backend.teresewang.com/photos/\" + hash;\n  }\n\n  function AddNewWellnessButton() {\n    if (session) {\n      return(\n        <Redirect to=\"/wellness/new\" className=\"btn btn-lg font-weight-bold btn-info ml-3\">\n          New Wellness Post\n        </Redirect>\n      )\n    }\n    else {\n      return(\n        <br></br>\n      )\n    }\n  }\n\n  function ListingArticles({session, current_wellness}) {\n    let rows = wellness.map((health) => {\n      let body = health.body.substring(0, 280) + \" ...\"\n      const link = \"/wellness/view/\"+ health.id\n      let score = health.votes.length\n      return (\n        <Card fluid className=\"my-4\">\n          <Card.Header>{score} 💗</Card.Header>\n          <Card.Body>\n            <h1 className=\"\">{health.title}</h1>\n            <p>{body}</p>\n            <Link to={link}  className=\"text-danger\">Read More</Link>\n          </Card.Body>\n        </Card>\n    )});\n\n    return(\n      <div className=\"ml-3\">\n        {rows}\n      </div>\n    )\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn btn-lg font-weight-bold text-light btn-info\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n  function ImageGallery() {\n    let query = wellness\n    if (wellness.length >= 5) {\n      query = Object.entries(wellness).slice(0,5).map(entry => entry[1]);\n    }\n    let rows = query.map((health) => {\n      let body = health.body.substring(0, 280) + \" ...\"\n      let link = \"/wellness/view/\" + health.id;\n      return (\n        <Carousel.Item>\n          <img src={photo_path(health.photo_hash)} width=\"100%\" height=\"600px\"></img>\n          <Carousel.Caption>\n            <Link to={link}  className=\"text-info h3\">Direct To Article: {health.title}</Link>\n          </Carousel.Caption>\n        </Carousel.Item>\n    )});\n    return(\n      <Carousel className=\"my-3\">\n        {rows}\n      </Carousel>\n    )\n  }\n\n  const UpdatingArticles = connect(\n      ({session, current_wellness}) => ({session, current_wellness}))(ListingArticles);\n\n\n  const [search, setSearch] = useState(\"\");\n\n  function update(ev) {\n    setSearch(ev.target.value);\n  }\n\n  function searchQuery(ev){\n    ev.preventDefault();\n    search_wellness(search);\n  }\n\n  return (\n    <div>\n      <p className=\"display-1\">Wellness</p>\n      <p className=\"h4\">Regular wellness care is of the utmost importance for any pet,\n      but trips to the veterinarian often end up on the back burner when\n      it comes to our cats. This pro-cats-tination could be due to a general\n      dislike of car rides, carriers, handling without their consent,\n      or because cats are experts at masking symptoms,\n      hiding pain and making us believe that there is nothing wrong.\n      Because of this, many felines don’t get the care they need until their\n      health problems become serious.\n      Preventing illness and disease in our feline companions is easier,\n      healthier, and cheaper than attempting to treat a problem once it arises.\n      You will find articles below to be helpful, and you can also make\n      helpful posts to help others. <br></br><a href='http://www.catcareofvinings.com/blog/wellness-care-for-cats/' target=\"_blank\">Referenced from Cat Care</a></p>\n      <ImageGallery />\n      <Row>\n        <Col>\n          <AddNewWellnessButton />\n        </Col>\n      </Row>\n      <Form onSubmit={searchQuery} inline>\n        <Form.Group className=\"mt-3 ml-3\">\n          <Form.Control type=\"text\" placeholder=\"Search..\" onChange={(ev) => update(ev)} value={search} />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3 ml-1 mt-4\">Search</Button>\n      </Form>\n      <UpdatingArticles />\n    </div>\n  );\n}\n\nfunction state2props({wellness, session}) {\n  return { wellness, session};\n}\n\nexport default connect(state2props)(WellnessList);\n","import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_wellness , fetch_wellness, fetch_users } from '../api';\n\nfunction UserForm({session}) {\n  let history = useHistory();\n  const [post, setPost] = useState({\n    user_id: session.user_id, body: \"\", title: \"\"\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(post, ['user_id', 'title', 'body', 'photo']);\n    create_wellness(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_wellness()\n          fetch_users()\n          history.push(\"/Wellness/list\")\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, post);\n    u1[field] = ev.target.value;\n    setPost(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, post);\n    p1[\"photo\"] = ev.target.files[0];\n    setPost(p1);\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn font-weight-bold text-light btn-danger\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Create Wellness Post</h1>\n          <Form.Label>Post Title</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"title\", ev)}\n            value={post.title} />\n        </Form.Group>\n        <Form.Group>\n        <Form.Label>Post Body</Form.Label>\n        <Form.Control as=\"textarea\"\n                      onChange={\n                        (ev) => update(\"body\", ev)}\n          value={post.body} />\n      </Form.Group>\n      <Form.Group>\n            <Form.Label>Profile Picture</Form.Label>\n            <Form.Control type=\"file\" onChange={updatePhoto} />\n      </Form.Group>\n        <Row className=\"ml-1\">\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n          Save\n        </Button>\n        <Redirect to=\"/wellness/list\">Cancel</Redirect>\n        </Row>\n      </Form>\n    );\n  }\n\nfunction LoginEdit({session}) {\n  if(session) {\n    return <UserForm session={session}/>\n  }\n  else{\n    return <h1 className=\"mt-5 ml-5\">Please Login In To Edit</h1>\n  }\n}\n\nconst UpdateUserForm = connect(\n    ({session}) => ({session}))(LoginEdit);\n\nfunction WellnessNew() {\n  return (\n    <UpdateUserForm/>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(WellnessNew);\n","import { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link, useHistory, useLocation, NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { delete_comment, create_comment, fetch_comments, delete_wellness, fetch_score, fetch_wellness,\n  fetch_single_wellness, fetch_user, update_wellness_vote } from '../api';\nimport store from '../store';\n\nfunction WellnessView({session, wellness_form, user_form, score, comments}) {\n  let location = useLocation()\n  let history = useHistory()\n  let wellness_id = location.pathname.split(\"/wellness/view/\")[1]\n\n  if(typeof(wellness_form.id) == \"undefined\" || wellness_form.id != wellness_id) {\n    fetch_single_wellness(wellness_id)\n    fetch_score(wellness_id)\n    fetch_comments(wellness_id)\n  }\n\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != wellness_form.user_id){\n    fetch_user(wellness_form.user_id)\n  }\n\n  function photo_path(hash) {\n    return \"http://kittenlover-backend.teresewang.com/photos/\" + hash;\n  }\n\n  function deleteWellness(){\n    delete_wellness(wellness_id)\n    fetch_wellness()\n    history.push(\"/wellness/list\")\n  }\n\n  function AddButtons() {\n    if(session && session.user_id == user_form.id) {\n      let link = \"/wellness/edit/\" + wellness_form.id\n      return(\n        <div>\n        <Link to={link} className=\"btn mt-2 btn-lg btn-info text-light mr-2 font-weight-bold\">Edit</Link>\n        <Button onClick={deleteWellness} className=\"btn mt-2 btn-lg btn-danger text-light mr-2 font-weight-bold\">Delete</Button>\n        <Link to=\"/wellness/list\" className=\"btn btn-lg mt-2 btn-info text-light  font-weight-bold\">Back</Link>\n        </div>\n      )\n    }\n    else {\n      return(\n        <Link to=\"/wellness/list\" className=\"btn btn-lg mt-2 btn-danger text-light  font-weight-bold\">Back</Link>\n      )\n    }\n  }\n\n  let link = photo_path(wellness_form.photo_hash)\n\n  function updateVotes() {\n    if(wellness_form.votes.includes(session.user_id)) {\n      update_wellness_vote(wellness_form, session.user_id, \"decrease\")\n      fetch_wellness()\n      fetch_single_wellness(wellness_form.id)\n      fetch_score(wellness_form.id)\n    }\n    else {\n      update_wellness_vote(wellness_form, session.user_id, \"increase\")\n      fetch_wellness()\n      fetch_single_wellness(wellness_form.id)\n      fetch_score(wellness_form.id)\n    }\n  }\n\n  function photo_path(hash) {\n    return \"http://kittenlover-backend.teresewang.com/photos/\" + hash;\n  }\n\n  function EditCommentButton({comment}) {\n    function deleteComment() {\n      delete_comment(comment.id, wellness_id)\n    }\n\n    if (session && comment.user_id == session.user_id) {\n      return <Button onClick={deleteComment} className=\"btn mt-2 btn-danger text-light font-weight-bold\">Delete</Button>\n    }\n    else {\n      return <div></div>\n    }\n  }\n\n  function ListingComments() {\n    let rows = comments.map((comment) => {\n      console.log(comment)\n      return (\n        <Card fluid className=\"my-4\">\n          <Card.Body>\n            <img src={photo_path(comment.user.photo_hash)} width=\"50px\" height=\"50px\"></img>\n            <h4 className=\"text-secondary\">{comment.user.name}</h4>\n            <h3 className=\"\">{comment.body}</h3>\n            <EditCommentButton comment={comment}/>\n          </Card.Body>\n        </Card>\n      )})\n      return <div>{rows}</div>\n    }\n\n    const [com, setCom] = useState(\"\");\n\n    function onSubmit(ev) {\n      create_comment(com, session.user_id, wellness_id).then((data) => {\n          if(data.error) {\n            let action={\n              type:\"error/set\",\n              data: data.error\n            }\n            store.dispatch(action)\n          }\n          else {\n            setCom(\"\")\n            fetch_comments(wellness_id)\n            fetch_wellness()\n          }\n      });\n    }\n\n    if (session) {\n      return(\n        <div>\n        <AddButtons/>\n        <h1 className=\"display-3\">{wellness_form.title}</h1>\n        <h1 className=\"h4 text-secondary\">Posted by: {user_form.name}</h1>\n        <img src={link}></img>\n        <p className=\"h3 mt-2\">{wellness_form.body}</p>\n        <Button className=\"btn btn-lg btn-light text-danger\" onClick={updateVotes}>{score} 💗</Button>\n        <Form  onSubmit={onSubmit} className=\"my-3\">\n          <Form.Row>\n            <Col>\n              <img src={photo_path(session.photo_hash)} width=\"50px\" height=\"50px\"></img>\n            </Col>\n            <Col xs={9}>\n              <Form.Control type=\"text\" onChange={(ev) => setCom(ev.target.value)}\n                value={com} />\n            </Col>\n            <Col>\n              <Button onClick={(ev) => onSubmit(ev)} className=\"btn btn-info text-light font-weight-bold\">Submit</Button>\n            </Col>\n          </Form.Row>\n        </Form>\n        <ListingComments/>\n        </div>\n      )\n    }\n    else {\n      return(\n        <div>\n        <AddButtons/>\n        <h1 className=\"display-3\">{wellness_form.title}</h1>\n        <h1 className=\"h4 text-secondary\">Posted by: {user_form.name}</h1>\n        <img src={link}></img>\n        <p className=\"h3 mt-2\">{wellness_form.body}</p>\n        <h1>{score} 💗</h1>\n        <ListingComments/>\n        </div>\n      )\n    }\n  }\n\nfunction state2props({session, wellness_form, user_form, score, comments}) {\n  return {session, wellness_form, user_form, score, comments};\n}\n\nexport default connect(state2props)(WellnessView);\n","import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink, useLocation  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_wellness , fetch_wellness, fetch_user, fetch_single_wellness } from '../api';\n\n\nfunction WellnessEdit({user_form, session, wellness_form}) {\n  let location = useLocation()\n  let wellness_id = location.pathname.split(\"/wellness/edit/\")[1]\n  if(typeof(wellness_form.id) == \"undefined\" || wellness_form.id != wellness_id) {\n    fetch_single_wellness(wellness_id)\n  }\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != wellness_form.user_id) {\n    fetch_user(wellness_form.user_id)\n  }\n\n  let history = useHistory();\n  const [post, setPost] = useState({\n    user_id: user_form.id, body: wellness_form.body, title: wellness_form.title, id: wellness_form.id,\n    votes: wellness_form.votes\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(post, ['user_id', 'title', 'body', 'photo', 'id']);\n    update_wellness(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_wellness()\n          fetch_single_wellness(wellness_form.id)\n          let link = \"/wellness/view/\" + wellness_form.id\n          history.push(link)\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, post);\n    u1[field] = ev.target.value;\n    setPost(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, post);\n    p1[\"photo\"] = ev.target.files[0];\n    setPost(p1);\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn font-weight-bold text-light btn-danger\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n  let link = \"/wellness/view/\" + wellness_form.id\n\n  if(session) {\n    return(\n        <Form onSubmit={onSubmit}>\n          <Form.Group>\n            <h1 className=\"mt-5\">Edit Wellness Post</h1>\n            <Form.Label>Post Title</Form.Label>\n            <Form.Control type=\"text\"\n                          onChange={\n                            (ev) => update(\"title\", ev)}\n              value={post.title} />\n          </Form.Group>\n          <Form.Group>\n          <Form.Label>Post Body</Form.Label>\n          <Form.Control as=\"textarea\"\n                        onChange={\n                          (ev) => update(\"body\", ev)}\n            value={post.body} />\n        </Form.Group>\n        <Form.Group>\n              <Form.Label>Profile Picture</Form.Label>\n              <Form.Control type=\"file\" onChange={updatePhoto} />\n        </Form.Group>\n          <Row className=\"ml-1\">\n          <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n            Save\n          </Button>\n          <Redirect to={link}>Cancel</Redirect>\n          </Row>\n        </Form>\n      );\n  }\n  else{\n    return <h1 className=\"mt-5 ml-5\">Please Login In To Edit</h1>\n  }\n}\n\nfunction state2props({user_form, session, wellness_form}) {\n  return {user_form, session, wellness_form};\n}\n\nexport default connect(state2props)(WellnessEdit);\n","import { Card, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { Link, useHistory, NavLink } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { api_login, fetch_reason, fetch_user } from '../api';\n\nfunction HomePage({wellness, forums, foods}) {\n  function ShowingWellness() {\n    if (wellness.length > 3) {\n      wellness = wellness.slice(0, 3)\n    }\n    let rows = wellness.map((health) => {\n      let body = health.body.substring(0, 100) + \" ...\"\n      const link = \"/wellness/view/\"+ health.id\n      let score = health.votes.length\n      return (\n        <Card fluid>\n          <Card.Header>{health.title}</Card.Header>\n          <Card.Body>\n            <p>{body}</p>\n            <Link to={link}  className=\"text-danger\">Read More</Link>\n          </Card.Body>\n        </Card>\n    )});\n    return <div>{rows}</div>\n  }\n\n  function ShowingForum() {\n    if (forums.length > 3) {\n      forums = forums.slice(0, 3)\n    }\n    let rows = forums.map((forum) => {\n      let body = forum.body.substring(0, 100) + \" ...\"\n      const link = \"/forum/view/\"+ forum.id\n      let score = forum.votes.length\n      return (\n        <Card fluid>\n          <Card.Header>{forum.title}</Card.Header>\n          <Card.Body>\n            <p>{body}</p>\n            <Link to={link}  className=\"text-danger\">Read More</Link>\n          </Card.Body>\n        </Card>\n    )});\n    return <div>{rows}</div>\n  }\n\n  function photo_path(hash) {\n    return \"http://kittenlover-backend.teresewang.com/photos/\" + hash;\n  }\n\n  function ShowingFood() {\n    if (foods.length > 3) {\n      foods = foods.slice(0, 3)\n    }\n    let rows = foods.map((food) => {\n      const link = \"/food/view/\"+ food.id\n      return (\n        <Card fluid>\n          <Card.Body>\n            <p>{food.brand}</p>\n            <Link to={link}  className=\"text-danger\">Read More</Link>\n          </Card.Body>\n        </Card>\n    )});\n    return <div>{rows}</div>\n  }\n  return (\n    <div>\n      <h1 className=\"mt-2 display-2\">Kitten Lover</h1>\n      <p className=\"h4\">KittenLover is dedicated to provide support and a communication platform\n      for all kitten lovers.</p>\n      <div className=\"border\">\n        <h1 className=\"ml-2\">Wellness</h1>\n        <ShowingWellness />\n      </div>\n      <div className=\"border mt-5\">\n        <h1 className=\"ml-2\">Forum</h1>\n        <ShowingForum />\n      </div>\n      <div className=\"border mt-5\">\n        <h1 className=\"ml-2\">Food Choices</h1>\n        <ShowingFood />\n      </div>\n    </div>\n  );\n}\n\nfunction state2props({wellness, forums, foods}) {\n  return {wellness, forums,foods};\n}\n\nexport default connect(state2props)(HomePage);\n","import { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { Link, useHistory, NavLink, useLocation } from 'react-router-dom';\nimport { fetch_user, fetch_forum, fetch_forums } from '../api';\nimport Carousel from 'react-bootstrap/Carousel';\n\n//referenced from lecture code SPA Structure from Nat Tuck CS4550 Northeastern University\nfunction ForumList ({forums, session}) {\n  let history = useHistory()\n  let location = useLocation();\n\n  function photo_path(hash) {\n    return \"http://kittenlover-backend.teresewang.com/photos/\" + hash;\n  }\n\n  function AddNewForumButton() {\n    if (session) {\n      return(\n        <Redirect to=\"/forum/new\" className=\"btn btn-lg font-weight-bold btn-info ml-3\">\n          New Forum\n        </Redirect>\n      )\n    }\n    else {\n      return(\n        <br></br>\n      )\n    }\n  }\n\n  function ListingArticles() {\n    let rows = forums.map((health) => {\n      let body = health.body.substring(0, 280) + \" ...\"\n      const link = \"/forum/view/\"+ health.id\n      let score = health.votes.length\n      return (\n        <Card fluid className=\"my-4\">\n          <Card.Header>{score} 💗</Card.Header>\n          <Card.Body>\n            <h1 className=\"\">{health.title}</h1>\n            <p>{body}</p>\n            <Link to={link}  className=\"text-danger\">Read More</Link>\n          </Card.Body>\n        </Card>\n    )});\n\n    return(\n      <div className=\"ml-3\">\n        {rows}\n      </div>\n    )\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn btn-lg font-weight-bold text-light btn-info\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n  function ImageGallery() {\n    let query = forums\n    if (forums.length >= 5) {\n      query = Object.entries(forums).slice(0,5).map(entry => entry[1]);\n    }\n    let rows = query.map((health) => {\n      let body = health.body.substring(0, 280) + \" ...\"\n      let link = \"/forum/view/\" + health.id;\n      return (\n        <Carousel.Item>\n          <img src={photo_path(health.photo_hash)} width=\"100%\" height=\"600px\"></img>\n          <Carousel.Caption>\n            <Link to={link}  className=\"text-info h3\">Direct To Article: {health.title}</Link>\n          </Carousel.Caption>\n        </Carousel.Item>\n    )});\n    return(\n      <Carousel className=\"my-3\">\n        {rows}\n      </Carousel>\n    )\n  }\n\n  return (\n    <div>\n      <p className=\"display-1\">Forum</p>\n      <ImageGallery />\n      <Row>\n        <Col>\n          <AddNewForumButton />\n        </Col>\n      </Row>\n      <ListingArticles />\n    </div>\n  );\n}\n\nfunction state2props({forums, session}) {\n  return { forums, session};\n}\n\nexport default connect(state2props)(ForumList);\n","import { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link, useHistory, useLocation, NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { delete_forumcomment, create_forumcomment, fetch_forumcomments, delete_forum, fetch_forum_score, fetch_forums,\n  fetch_forum, fetch_user, update_forum_vote } from '../api';\nimport store from '../store';\n\nfunction ForumView({session, forum_form, user_form, forum_score, forumcomments}) {\n  let location = useLocation()\n  let history = useHistory()\n  let forum_id = location.pathname.split(\"/forum/view/\")[1]\n\n  if(typeof(forum_form.id) == \"undefined\" || forum_form.id != forum_id) {\n    fetch_forums()\n    fetch_forum(forum_id)\n    fetch_forum_score(forum_id)\n    fetch_forumcomments(forum_id)\n  }\n\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != forum_form.user_id){\n    fetch_forums()\n    fetch_user(forum_form.user_id)\n  }\n\n  function photo_path(hash) {\n    return \"http://kittenlover-backend.teresewang.com/photos/\" + hash;\n  }\n\n  function deleteForum(){\n    delete_forum(forum_id)\n    fetch_forums()\n    history.push(\"/forum/list\")\n  }\n\n  function AddButtons() {\n    if(session && session.user_id == user_form.id) {\n      let link = \"/forum/edit/\" + forum_form.id\n      return(\n        <div>\n        <Link to={link} className=\"btn mt-2 btn-lg btn-info text-light mr-2 font-weight-bold\">Edit</Link>\n        <Button onClick={deleteForum} className=\"btn mt-2 btn-lg btn-danger text-light mr-2 font-weight-bold\">Delete</Button>\n        <Link to=\"/forum/list\" className=\"btn btn-lg mt-2 btn-info text-light  font-weight-bold\">Back</Link>\n        </div>\n      )\n    }\n    else {\n      return(\n        <Link to=\"/forum/list\" className=\"btn btn-lg mt-2 btn-danger text-light  font-weight-bold\">Back</Link>\n      )\n    }\n  }\n\n  let link = photo_path(forum_form.photo_hash)\n\n  function updateVotes() {\n    if(forum_form.votes.includes(session.user_id)) {\n      update_forum_vote(forum_form, session.user_id, \"decrease\")\n      fetch_forums()\n      fetch_forum(forum_form.id)\n      fetch_forum_score(forum_form.id)\n    }\n    else {\n      update_forum_vote(forum_form, session.user_id, \"increase\")\n      fetch_forums()\n      fetch_forum(forum_form.id)\n      fetch_forum_score(forum_form.id)\n    }\n  }\n\n  function photo_path(hash) {\n    return \"http://kittenlover-backend.teresewang.com/photos/\" + hash;\n  }\n\n  function EditCommentButton({comment}) {\n    function deleteComment() {\n      delete_forumcomment(comment.id, forum_id)\n    }\n\n    if (session && comment.user_id == session.user_id) {\n      return <Button onClick={deleteComment} className=\"btn mt-2 btn-danger text-light font-weight-bold\">Delete</Button>\n    }\n    else {\n      return <div></div>\n    }\n  }\n\n  function ListingComments() {\n    let rows = forumcomments.map((comment) => {\n      console.log(comment)\n      return (\n        <Card fluid className=\"my-4\">\n          <Card.Body>\n            <img src={photo_path(comment.user.photo_hash)} width=\"50px\" height=\"50px\"></img>\n            <h4 className=\"text-secondary\">{comment.user.name}</h4>\n            <h3 className=\"\">{comment.body}</h3>\n            <EditCommentButton comment={comment}/>\n          </Card.Body>\n        </Card>\n      )})\n      return <div>{rows}</div>\n    }\n\n    const [com, setCom] = useState(\"\");\n\n    function onSubmit(ev) {\n      create_forumcomment(com, session.user_id, forum_id).then((data) => {\n          if(data.error) {\n            let action={\n              type:\"error/set\",\n              data: data.error\n            }\n            store.dispatch(action)\n          }\n          else {\n            setCom(\"\")\n            fetch_forumcomments(forum_id)\n            fetch_forums()\n          }\n      });\n    }\n\n    if (session) {\n      return(\n        <div>\n        <AddButtons/>\n        <h1 className=\"display-3\">{forum_form.title}</h1>\n        <h1 className=\"h4 text-secondary\">Posted by: {user_form.name}</h1>\n        <img src={link}></img>\n        <p className=\"h3 mt-2\">{forum_form.body}</p>\n        <Button className=\"btn btn-lg btn-light text-danger\" onClick={updateVotes}>{forum_score} 💗</Button>\n        <Form  onSubmit={onSubmit} className=\"my-3\">\n          <Form.Row>\n            <Col>\n              <img src={photo_path(session.photo_hash)} width=\"50px\" height=\"50px\"></img>\n            </Col>\n            <Col xs={9}>\n              <Form.Control type=\"text\" onChange={(ev) => setCom(ev.target.value)}\n                value={com} />\n            </Col>\n            <Col>\n              <Button onClick={(ev) => onSubmit(ev)} className=\"btn btn-info text-light font-weight-bold\">Submit</Button>\n            </Col>\n          </Form.Row>\n        </Form>\n        <ListingComments/>\n        </div>\n      )\n    }\n    else {\n      return(\n        <div>\n        <AddButtons/>\n        <h1 className=\"display-3\">{forum_form.title}</h1>\n        <h1 className=\"h4 text-secondary\">Posted by: {user_form.name}</h1>\n        <img src={link}></img>\n        <p className=\"h3 mt-2\">{forum_form.body}</p>\n        <h1>{forum_score} 💗</h1>\n        <ListingComments/>\n        </div>\n      )\n    }\n  }\n\nfunction state2props({session, forum_form, user_form, forum_score, forumcomments}) {\n  return {session, forum_form, user_form, forum_score, forumcomments};\n}\n\nexport default connect(state2props)(ForumView);\n","import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_forum , fetch_forums, fetch_users } from '../api';\n\nfunction UserForm({session}) {\n  let history = useHistory();\n  const [post, setPost] = useState({\n    user_id: session.user_id, body: \"\", title: \"\"\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(post, ['user_id', 'title', 'body', 'photo']);\n    create_forum(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_forums()\n          fetch_users()\n          history.push(\"/forum/list\")\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, post);\n    u1[field] = ev.target.value;\n    setPost(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, post);\n    p1[\"photo\"] = ev.target.files[0];\n    setPost(p1);\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn font-weight-bold text-light btn-danger\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Create Forum</h1>\n          <Form.Label>Post Title</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"title\", ev)}\n            value={post.title} />\n        </Form.Group>\n        <Form.Group>\n        <Form.Label>Forum Body</Form.Label>\n        <Form.Control as=\"textarea\"\n                      onChange={\n                        (ev) => update(\"body\", ev)}\n          value={post.body} />\n      </Form.Group>\n      <Form.Group>\n            <Form.Label>Profile Picture</Form.Label>\n            <Form.Control type=\"file\" onChange={updatePhoto} />\n      </Form.Group>\n        <Row className=\"ml-1\">\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n          Save\n        </Button>\n        <Redirect to=\"/forum/list\">Cancel</Redirect>\n        </Row>\n      </Form>\n    );\n  }\n\nfunction LoginEdit({session}) {\n  if(session) {\n    return <UserForm session={session}/>\n  }\n  else{\n    return <h1 className=\"mt-5 ml-5\">Please Login In To Edit</h1>\n  }\n}\n\nconst UpdateUserForm = connect(\n    ({session}) => ({session}))(LoginEdit);\n\nfunction ForumNew() {\n  return (\n    <UpdateUserForm/>\n  );\n}\n\nfunction state2props(_state) {\n  return {};\n}\n\nexport default connect(state2props)(ForumNew);\n","import { Nav, NavRow, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink, useLocation  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { update_forum , fetch_forums, fetch_user, fetch_forum } from '../api';\n\n//referenced from lecture code SPA Structure from Nat Tuck CS4550 Northeastern University\nfunction ForumEdit({user_form, session, forum_form}) {\n  let location = useLocation()\n  let forum_id = location.pathname.split(\"/forum/edit/\")[1]\n  if(typeof(forum_form.id) == \"undefined\" || forum_form.id != forum_id) {\n    fetch_forum(forum_id)\n  }\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != forum_form.user_id) {\n    fetch_user(forum_form.user_id)\n  }\n\n  let history = useHistory();\n  const [post, setPost] = useState({\n    user_id: user_form.id, body: forum_form.body, title: forum_form.title, id: forum_form.id,\n    votes: forum_form.votes\n  });\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(post, ['user_id', 'title', 'body', 'photo', 'id']);\n    update_forum(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_forums()\n          fetch_forum(forum_form.id)\n          let link = \"/forum/view/\" + forum_form.id\n          history.push(link)\n        }\n    });\n  }\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, post);\n    u1[field] = ev.target.value;\n    setPost(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, post);\n    p1[\"photo\"] = ev.target.files[0];\n    setPost(p1);\n  }\n\n  function Redirect({to, children}) {\n    return (\n      <Nav.Item>\n        <NavLink to={to} exact\n          className=\"btn font-weight-bold text-light btn-danger\"\n          activeClassName=\"active\">\n          {children}\n        </NavLink>\n      </Nav.Item>\n    );\n  }\n  let link = \"/forum/view/\" + forum_form.id\n\n  if(session) {\n    return(\n        <Form onSubmit={onSubmit}>\n          <Form.Group>\n            <h1 className=\"mt-5\">Edit Forum Post</h1>\n            <Form.Label>Post Title</Form.Label>\n            <Form.Control type=\"text\"\n                          onChange={(ev) => update(\"title\", ev)}\n              value={post.title} />\n          </Form.Group>\n          <Form.Group>\n          <Form.Label>Forum Text</Form.Label>\n          <Form.Control as=\"textarea\"\n                        onChange={\n                          (ev) => update(\"body\", ev)}\n            value={post.body} />\n        </Form.Group>\n        <Form.Group>\n              <Form.Label>Profile Picture</Form.Label>\n              <Form.Control type=\"file\" onChange={updatePhoto} />\n        </Form.Group>\n          <Row className=\"ml-1\">\n          <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n            Save\n          </Button>\n          <Redirect to={link}>Cancel</Redirect>\n          </Row>\n        </Form>\n      );\n  }\n  else{\n    return <h1 className=\"mt-5 ml-5\">Please Login In To Edit</h1>\n  }\n}\n\nfunction state2props({user_form, session, forum_form}) {\n  return {user_form, session, forum_form};\n}\n\nexport default connect(state2props)(ForumEdit);\n","import { CardColumns, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link, useHistory, NavLink, useLocation } from 'react-router-dom';\nimport { fetch_foods} from '../api';\nimport Carousel from 'react-bootstrap/Carousel';\n\nfunction FoodList({session, foods}) {\n  function photo_path(hash) {\n    return \"http://kittenlover-backend.teresewang.com/photos/\" + hash;\n  }\n  function ListingFoodArticles() {\n    let rows = foods.map((food) => {\n      const link = \"view/\" + food.id\n      const image_link = photo_path(food.photo_hash)\n      return (\n        <Card>\n          <Card.Img variant=\"top\" src={image_link} />\n          <Card.Body>\n            <Card.Title>{food.brand}</Card.Title>\n            <Card.Text>{food.body}</Card.Text>\n            <Link to={link}>Check For More Info</Link>\n          </Card.Body>\n        </Card>\n      )})\n      return <CardColumns>{rows}</CardColumns>\n    }\n\n    function AddNewWellnessButton() {\n      if (session) {\n        return(\n          <Link to=\"/food/new\" className=\"btn btn-lg font-weight-bold btn-info my-3\">\n            New Food Recommendation</Link>\n        )\n      }\n      else {\n        return(\n          <br></br>\n        )\n      }\n    }\n\n    return(\n      <div>\n        <p className=\"display-1\">Food Choices</p>\n        <AddNewWellnessButton />\n        <ListingFoodArticles/>\n      </div>);\n    }\n\nfunction state2props({session, foods}) {\n  return {session, foods};\n}\n\nexport default connect(state2props)(FoodList);\n","import { Row, Col, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { create_food , fetch_foods, fetch_users } from '../api';\n\nfunction FoodNew({session}) {\n  let history = useHistory();\n  const [food, setFood] = useState({\n    user_id: session.user_id, body: \"\", brand: \"\", price:0,\n    type: \"\"\n  })\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(food, ['user_id', 'body', 'type', 'brand',\n    \"photo\", \"price\"]);\n    create_food(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_foods()\n          fetch_users()\n          history.push(\"/food/list\")\n        }\n    });\n  }\n  function update(field, ev) {\n    let u1 = Object.assign({}, food);\n    u1[field] = ev.target.value;\n    setFood(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, food);\n    p1[\"photo\"] = ev.target.files[0];\n    setFood(p1);\n    console.log(food)\n  }\n\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Create Food Recommendation</h1>\n          <Form.Label>Product Brand</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"brand\", ev)}\n            value={food.brand} />\n        </Form.Group>\n        <Form.Group>\n              <Form.Label>Product Image</Form.Label>\n              <Form.Control type=\"file\" onChange={updatePhoto} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Product Description</Form.Label>\n          <Form.Control type=\"textarea\"\n                        onChange={\n                          (ev) => update(\"body\", ev)}\n            value={food.body} />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicRange\">\n          <Form.Label>Product Price: {food.price}$ per lbs</Form.Label>\n          <Form.Control type=\"range\" onChange={(ev) => update(\"price\", ev)} value={food.price}/>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label>Product Type</Form.Label>\n          <Form.Control as=\"select\" onChange={(ev) => update(\"type\", ev)} value={food.type}>\n            <option></option>\n            <option>Kitten Food</option>\n            <option>Adult Food</option>\n            <option>Wet Food</option>\n            <option>Dried Food</option>\n            <option>Semi-moist Food</option>\n            <option>Other</option>\n          </Form.Control>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n          Save\n        </Button>\n      </Form>\n    );\n}\n\nfunction state2props({session}) {\n  return {session};\n}\n\nexport default connect(state2props)(FoodNew);\n","import { Row, Col, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { useHistory, NavLink, useLocation  } from 'react-router-dom';\nimport pick from 'lodash/pick';\nimport store from '../store';\nimport { fetch_food, update_food , fetch_foods, fetch_users, fetch_user} from '../api';\n\n//referenced from lecture code SPA Structure from Nat Tuck CS4550 Northeastern University \nfunction FoodNew({session, food_form, user_form}) {\n  let location = useLocation()\n  let history = useHistory()\n  let food_id = location.pathname.split(\"/food/edit/\")[1]\n\n  if(typeof(food_form.id) == \"undefined\" || food_form.id != food_id) {\n    fetch_foods()\n    fetch_food(food_id)\n  }\n\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != food_form.user_id){\n    fetch_foods()\n    fetch_user(food_form.user_id)\n  }\n\n  const [food, setFood] = useState({\n    user_id: session.user_id, body: food_form.body, brand: food_form.brand, price: food_form.price,\n    type: food_form.type, id: food_form.id\n  })\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    let data = pick(food, ['id', 'user_id', 'body', 'type', 'brand',\n    \"photo\", \"price\"]);\n    update_food(data).then((data) => {\n        if(data.error) {\n          let action={\n            type:\"error/set\",\n            data: data.error\n          }\n          store.dispatch(action)\n        }\n        else {\n          fetch_foods()\n          fetch_users()\n          history.push(\"/food/list\")\n        }\n    });\n  }\n  function update(field, ev) {\n    let u1 = Object.assign({}, food);\n    u1[field] = ev.target.value;\n    setFood(u1);\n  }\n\n  function updatePhoto(ev) {\n    let p1 = Object.assign({}, food);\n    p1[\"photo\"] = ev.target.files[0];\n    setFood(p1);\n    console.log(food)\n  }\n\n  return(\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <h1 className=\"mt-5\">Edit Food Recommendation</h1>\n          <Form.Label>Product Brand</Form.Label>\n          <Form.Control type=\"text\"\n                        onChange={\n                          (ev) => update(\"brand\", ev)}\n            value={food.brand} />\n        </Form.Group>\n        <Form.Group>\n              <Form.Label>Product Image</Form.Label>\n              <Form.Control type=\"file\" onChange={updatePhoto} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Product Description</Form.Label>\n          <Form.Control type=\"textarea\"\n                        onChange={\n                          (ev) => update(\"body\", ev)}\n            value={food.body} />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicRange\">\n          <Form.Label>Product Price: {food.price}$ per lbs</Form.Label>\n          <Form.Control type=\"range\" onChange={(ev) => update(\"price\", ev)} value={food.price}/>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label>Product Type</Form.Label>\n          <Form.Control as=\"select\" onChange={(ev) => update(\"type\", ev)} value={food.type}>\n            <option></option>\n            <option>Kitten Food</option>\n            <option>Adult Food</option>\n            <option>Wet Food</option>\n            <option>Dried Food</option>\n            <option>Semi-moist Food</option>\n            <option>Other</option>\n          </Form.Control>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className=\"h3 font-weight-bold mr-3\">\n          Save\n        </Button>\n      </Form>\n    );\n}\n\nfunction state2props({session, food_form, user_form}) {\n  return {session, food_form, user_form};\n}\n\nexport default connect(state2props)(FoodNew);\n","import { Button, Nav, NavRow, Row, Col, Card, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link, useHistory, useLocation, NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { fetch_food_like, fetch_food_dislike, delete_food, fetch_foods, fetch_food, fetch_user, update_food_vote} from '../api';\nimport store from '../store';\n\nfunction FoodView({session, food_form, user_form, food_like, food_dislike}) {\n  let location = useLocation()\n  let history = useHistory()\n  let food_id = location.pathname.split(\"/food/view/\")[1]\n\n  if(typeof(food_form.id) == \"undefined\" || food_form.id != food_id) {\n    fetch_foods()\n    fetch_food(food_id)\n    fetch_food_like(food_id)\n    fetch_food_dislike(food_id)\n  }\n\n  if(typeof(user_form.id) == \"undefined\" || user_form.id != food_form.user_id){\n    fetch_foods()\n    fetch_user(food_form.user_id)\n  }\n\n  function photo_path(hash) {\n    return \"http://kittenlover-backend.teresewang.com/photos/\" + hash;\n  }\n\n  function deleteForum(){\n    delete_food(food_id)\n    fetch_foods()\n    history.push(\"/food/list\")\n  }\n\n  function AddButtons() {\n    if(session && session.user_id == user_form.id) {\n      let link = \"/food/edit/\" + food_form.id\n      return(\n        <div>\n        <Link to={link} className=\"btn mt-2 btn-lg btn-info text-light mr-2 font-weight-bold\">Edit</Link>\n        <Button onClick={deleteForum} className=\"btn mt-2 btn-lg btn-danger text-light mr-2 font-weight-bold\">Delete</Button>\n        <Link to=\"/food/list\" className=\"btn btn-lg mt-2 btn-info text-light  font-weight-bold\">Back</Link>\n        </div>\n      )\n    }\n    else {\n      return(\n        <Link to=\"/food/list\" className=\"btn btn-lg mt-2 btn-danger text-light  font-weight-bold\">Back</Link>\n      )\n    }\n  }\n\n  let link = photo_path(food_form.photo_hash)\n\n  function updateVotes(field) {\n    if(field == \"like\" && food_form.like.includes(session.user_id)) {\n      update_food_vote(food_form, session.user_id, \"decreaselike\")\n      fetch_foods()\n      fetch_food(food_form.id)\n      fetch_food_like(food_form.id)\n      fetch_food_dislike(food_form.id)\n    }\n    else if(field == \"dislike\" && food_form.dislike.includes(session.user_id)) {\n      update_food_vote(food_form, session.user_id, \"decreasedislike\")\n      fetch_foods()\n      fetch_food(food_form.id)\n      fetch_food_like(food_form.id)\n      fetch_food_dislike(food_form.id)\n    }\n    else if(field == \"like\" && !food_form.like.includes(session.user_id))  {\n      update_food_vote(food_form, session.user_id, \"increaselike\")\n      fetch_foods()\n      fetch_food(food_form.id)\n      fetch_food_like(food_form.id)\n      fetch_food_dislike(food_form.id)\n    }\n    else {\n      update_food_vote(food_form, session.user_id, \"increasedislike\")\n      fetch_foods()\n      fetch_food(food_form.id)\n      fetch_food_like(food_form.id)\n      fetch_food_dislike(food_form.id)\n    }\n  }\n\n  function photo_path(hash) {\n    return \"http://kittenlover-backend.teresewang.com/photos/\" + hash;\n  }\n\n    if (session) {\n      return(\n        <div>\n          <AddButtons/>\n          <h1 className=\"h4 text-secondary\">Posted by: {user_form.name}</h1>\n          <div class=\"row\">\n            <div class=\"col\">\n              <img src={link} width=\"500px\" height=\"400px\"></img>\n            </div>\n            <div class=\"col\">\n              <h1 className=\"display-3\">{food_form.brand}</h1>\n              <h1 className=\"h3\">Price</h1>\n              <p className=\"h5 mt-2 text-danger\">{food_form.price}$ per Lbs</p>\n              <h1 className=\"h3\">Type</h1>\n              <p className=\"h5 mt-2 text-secondary\">{food_form.type}</p>\n              <h1 className=\"h3\">Description</h1>\n              <p className=\"h5 mt-2 text-secondary\">{food_form.body}</p>\n              <Button className=\"btn btn-lg btn-light text-danger\" onClick={(field) => updateVotes(\"like\")}>{food_like} 💗 Like</Button>\n              <Button className=\"btn btn-lg btn-light text-danger\" onClick={(field) => updateVotes(\"dislike\")}>{food_dislike} 💔 Dislike</Button>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    else {\n      return(\n        <div>\n          <AddButtons/>\n          <h1 className=\"h4 text-secondary\">Posted by: {user_form.name}</h1>\n          <div class=\"row\">\n            <div class=\"col\">\n              <img src={link} width=\"500px\" height=\"400px\"></img>\n            </div>\n            <div class=\"col\">\n              <h1 className=\"display-3\">{food_form.brand}</h1>\n              <h1 className=\"h3\">Price</h1>\n              <p className=\"h5 mt-2 text-danger\">{food_form.price}$ per Lbs</p>\n              <h1 className=\"h3\">Type</h1>\n              <p className=\"h5 mt-2 text-secondary\">{food_form.type}</p>\n              <h1 className=\"h3\">Description</h1>\n              <p className=\"h5 mt-2 text-secondary\">{food_form.body}</p>\n              <h3 className=\"text-danger\">{food_like} 💗 Like</h3>\n              <h3 className=\"text-danger\">{food_dislike} 💔 Dislike</h3>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\nfunction state2props({session, food_form, user_form, food_like, food_dislike}) {\n  return {session, food_form, user_form, food_like, food_dislike};\n}\n\nexport default connect(state2props)(FoodView);\n","import { Card, CardColumns, Button, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link} from 'react-router-dom';\nimport { useState } from 'react';\nimport pick from 'lodash/pick';\nimport {fetch_adoption} from '../api';\nimport store from '../store';\n\nfunction FoodList({adoption, cat_breed }) {\n  const [engine, setEngine] = useState({\n    breed: \"Abyssinian\", page: 1\n  });\n\n  function update(field, ev) {\n    let u1 = Object.assign({}, engine);\n    u1[field] = ev.target.value;\n    setEngine(u1);\n  }\n\n  function updatePage(ev, action) {\n    let u1 = Object.assign({}, engine);\n    if (action == \"increase\") {\n      u1[\"page\"] = engine.page + 1;\n      setEngine(u1);\n      fetch_adoption(engine.page)\n    }\n    else if (engine.page > 1) {\n      u1[\"page\"] = engine.page - 1;\n      setEngine(u1);\n      fetch_adoption(engine.page)\n    }\n  }\n\n  function ListingAdoptions() {\n    var link;\n    var neutered;\n    var location;\n    let rows = adoption.map((cat) => {\n      if (cat.photos.length > 0) {\n        link = cat.photos[0].medium\n      }\n      if(cat.attributes.spayed_neutered) {\n        neutered = \"Yes\"\n      }\n      else {\n        neutered = \"No\"\n      }\n      location = cat.contact.address.city\n      return (\n        <Card>\n          <Card.Img variant=\"top\" src={link} />\n          <Card.Body>\n            <Card.Title>Cat Name: {cat.name}</Card.Title>\n            <Card.Text>Gender: {cat.gender}</Card.Text>\n            <Card.Text>Age: {cat.age}</Card.Text>\n            <Card.Text>Breed: {cat.breeds.primary}</Card.Text>\n            <Card.Text>Size: {cat.size}</Card.Text>\n            <Card.Text>spayed_neutered: {neutered}</Card.Text>\n            <Card.Text>Location: {location}</Card.Text>\n            <Card.Text>{cat.description}</Card.Text>\n            <a href={cat.url} target=\"_blank\">Adoption Link</a>\n          </Card.Body>\n        </Card>\n      )})\n    return <CardColumns>{rows}</CardColumns>\n  }\n\n  function ListingBreed() {\n    let rows = cat_breed.map((breed) => {\n      return <option>{breed.name}</option>\n    })\n    return (<Form.Control as=\"select\" onChange={(ev) => update(\"breed\", ev)} value={engine.breed}>{rows}</Form.Control>);\n  }\n\n  return(\n    <div>\n      <p className=\"display-1\">Adoption Center</p>\n      <div class=\"row\">\n        <Button className=\"btn btn-lg btn-light text-dark\" onClick={(ev) => updatePage(ev, \"decrease\")} value={engine.index}>⬅</Button>\n        <h1>{engine.page}</h1>\n        <Button className=\"btn btn-lg btn-light text-dark\" onClick={(ev) => updatePage(ev, \"increase\")} value={engine.index}>&#10145;</Button>\n      </div>\n      <ListingAdoptions/>\n    </div>\n  )\n}\n\nfunction state2props({adoption, cat_breed}) {\n  return {adoption, cat_breed };\n}\n\nexport default connect(state2props)(FoodList);\n","import { Container } from 'react-bootstrap';\nimport { Switch, Route } from 'react-router-dom';\n\nimport './App.scss';\nimport Nav from './Nav';\nimport UsersNew from \"./User/New\";\nimport UsersView from \"./User/View\";\nimport UsersEdit from \"./User/Edit\";\nimport WellnessList from \"./Wellness/List\";\nimport WellnessNew from \"./Wellness/New\";\nimport WellnessView from \"./Wellness/View\";\nimport WellnessEdit from \"./Wellness/Edit\";\nimport HomePage from \"./Index/HomePage\";\nimport ForumList from \"./Forum/List\";\nimport ForumView from \"./Forum/View\";\nimport ForumNew from \"./Forum/New\";\nimport ForumEdit from \"./Forum/Edit\";\nimport FoodList from \"./Food/List\";\nimport FoodNew from \"./Food/New\";\nimport FoodEdit from \"./Food/Edit\";\nimport FoodView from \"./Food/View\";\nimport AdoptionList from \"./Adoption/List\";\n\n//referenced from lecture code SPA Structure from Nat Tuck CS4550 Northeastern University\nfunction App() {\n  return (\n    <div>\n      <Container fluid className=\"bg\">\n        <Nav />\n        <Switch>\n        </Switch>\n      </Container>\n      <Container>\n      <Route path=\"/\" exact>\n        <HomePage/>\n      </Route>\n      <Route path=\"/adopt\">\n        <AdoptionList />\n      </Route>\n      <Route path=\"/food/list\">\n        <FoodList />\n      </Route>\n      <Route path=\"/food/new\">\n        <FoodNew />\n      </Route>\n      <Route path=\"/food/edit\">\n        <FoodEdit />\n      </Route>\n      <Route path=\"/food/view\">\n        <FoodView />\n      </Route>\n      <Route path=\"/wellness/list\">\n        <WellnessList />\n      </Route>\n      <Route path=\"/wellness/new\">\n        <WellnessNew />\n      </Route>\n      <Route path=\"/wellness/edit\">\n        <WellnessEdit />\n      </Route>\n      <Route path=\"/wellness/view\">\n        <WellnessView />\n      </Route>\n      <Route path=\"/forum/list\">\n        <ForumList />\n      </Route>\n      <Route path=\"/forum/view\">\n        <ForumView />\n      </Route>\n      <Route path=\"/forum/new\">\n        <ForumNew />\n      </Route>\n      <Route path=\"/forum/edit\">\n        <ForumEdit />\n      </Route>\n      <Route path=\"/users/new\">\n        <UsersNew />\n      </Route>\n      <Route path=\"/users/view\">\n        <UsersView />\n      </Route>\n      <Route path=\"/users/edit\">\n        <UsersEdit />\n      </Route>\n    </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { load_defaults } from './api';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store= {store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nload_defaults();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}